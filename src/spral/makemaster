#  Main body of the installation makefile for the SPRAL SSIDS package
#  SPRAL SSIDS was developed by Jonathan Hogg (now at Apple) and is
#  available under a BSD licence as part of GALAHAD

#  Nick Gould, for GALAHAD production
#  This version: 2022-12-31

SHELL = /bin/$(BINSHELL)

ifeq "$(PRECIS)" "single"
 DPREC = -DSPRAL_SINGLE
else
 DPREC = -DSPRAL_DOUBLE
endif

ifeq "$(HWLOC)" "un"
 DHWLOC = -DSPRAL_NO_HWLOC 
else
 DHWLOC = -DSPRAL_HAVE_HWLOC
endif

ifeq "$(GETCPU)" "un"
 DGETCPU = -DSPRAL_NO_SCHED_GETCPU 
else
 DGETCPU = -DSPRAL_HAVE_SCHED_GETCPU
endif

#  compiler flags

FFLAGS    = $(BASIC) $(OPTIMIZATION) $(DEBUG) $(MODULES) $(F90) $(USUAL) \
              $(DPREC) -I $(GALAHAD)/include
FFLAGSS   = $(BASIC) $(OPTIMIZATION) $(DEBUG) $(MODULES) $(F90) $(SPECIAL) \
              $(DPREC) -I $(GALAHAD)/include
FFLAGSN   = $(BASIC) $(NOOPTIMIZATION) $(DEBUG) $(MODULES) $(F90) \
              $(DPREC) -I $(GALAHAD)/include
FFLAGS77  = $(BASIC) $(OPTIMIZATION) $(DEBUG) $(MODULES) $(F77) $(USUAL) \
              $(DPREC) -I $(GALAHAD)/include
FFLAGS77S = $(BASIC) $(OPTIMIZATION) $(DEBUG) $(MODULES) $(F77) $(SPECIAL) \
              $(DPREC) -I $(GALAHAD)/include
FFLAGSOMP = $(BASIC) $(OPTIMIZATION) $(DEBUG) $(MODULES) $(F90) $(USUAL) \
            $(SOMP) $(DPREC) -I $(GALAHAD)/include
FFLAGSNOMP = $(BASIC) $(OPTIMIZATION) $(DEBUG) $(MODULES) $(F90) \
            $(SOMP) $(DPREC) -I $(GALAHAD)/include

#  C++ compiler flags

CXXFLAGSOMP   = $(CXXBASIC) $(OPTIMIZATION) $(CXXDEBUG) $(SOMP) \
                 $(DPREC) $(DHWLOC) $(DGETCPU) -I $(GALAHAD)/include
CXXFLAGSNOMP  = $(CXXBASIC) $(NOOPTIMIZATION) $(CXXDEBUG) $(SOMP) \
                 $(DPREC) $(DHWLOC) $(DGETCPU) -I $(GALAHAD)/include

#  CUDA compiler flags

CUDAFLAGS   = -arch=$(CUDAARCH) -code=$(CUDACODE) $(CUDABASIC) \
                $(OPTIMIZATION) -I $(GALAHAD)/include
CUDAFLAGSN  = -arch=$(CUDAARCH) -code=$(CUDACODE) $(CUDABASIC) \
                $(NOOPTIMIZATION)  -I $(GALAHAD)/include

#  linking and run flags

RUNFFLAGS     = $(OPTIMIZATION) $(DEBUG) $(MODULES)
RUNFFLAGSCUDA = $(OPTIMIZATION) $(MODULES)
RUNFFLAGSOMP  = $(OPTIMIZATION) $(DEBUG) $(MODULES) $(SOMP)

#  names of random libraries

LG  = $(OBJ)/libgalahad.a
LGS = $(OBJS)/libgalahad.a
LGD = $(OBJD)/libgalahad.a

CLG  = $(OBJ)/libgalahad_c.a
CLGS = $(OBJS)/libgalahad_c.a
CLGD = $(OBJD)/libgalahad_c.a

RLG  = $(OBJ)/libgalahad_spral.a
RLGS = $(OBJS)/libgalahad_spral.a
RLGD = $(OBJD)/libgalahad_spral.a

#  Libraries used

LIBS = $(METIS4) $(LAPACK) $(BLAS)
PLIBS = $(LIBS) -lgalahad_problem

#  Archive manipulation strings

RMARFILE = $(GALAHAD)/bin/rmarfile $(AR) $(GREP) $(LG)
RMOBFILE = $(GALAHAD)/bin/rmobfile $(RM) $(OBJ)

RARR = $(AR) $(ARREPFLAGS) $(RLG)
RRMARFILE = $(GALAHAD)/bin/rmarfile $(AR) $(GREP) $(RLG)

CARR = $(AR) $(ARREPFLAGS) $(CLG)
CRMARFILE = $(GALAHAD)/bin/rmarfile $(AR) $(GREP) $(CLG)

#  sed scripts

BLASLAPACKSEDS = $(GALAHAD)/seds/blaslapack_$(PRECIS).sed

#  strings

SUCC = precision version) compiled successfully

#  compilation agenda

SSIDSSS = $(SSIDSS) $(OBJS)/ssidss.o
SSIDSST = $(SSIDSS) $(OBJS)/ssidst.o
SSIDSDS = $(SSIDSD) $(OBJD)/ssidss.o
SSIDSDT = $(SSIDSD) $(OBJD)/slst.o

RSSIDSSS = $(OBJS)/ssidss.o -L$(OBJS) $(SPRAL) $(LIBS)
RSSIDSST = $(OBJS)/ssidst.o -L$(OBJS) $(SPRAL) $(LIBS)
RSSIDSDS = $(OBJD)/ssidss.o -L$(OBJD) $(SPRAL) $(LIBS)
RSSIDSDT = $(OBJD)/ssidst.o -L$(OBJD) $(SPRAL) $(LIBS)

CUDAS = $(RLGS)(cuda_nocuda.o)
CUDAScuda = $(RLGS)(api_wrappers.o) $(RLGS)(cuda.o)
CUDAD = $(RLGD)(cuda_nocuda.o)
CUDADcuda = $(RLGD)(api_wrappers.o) $(RLGD)(cuda.o)

CUDASUSE = $(CUDAS$(CUDA))
CUDADUSE = $(CUDAD$(CUDA))
GPUDUSE = $(GPUS$(CUDA))
GPUDUSE = $(GPUD$(CUDA))

GPUS = $(RLGS)(gpu_subtree_no_cuda.o)
GPUScuda = $(RLGS)(gpu_alloc.o) $(RLGS)(cpu_solve.o) \
           $(RLGS)(gpu_datatypes.o) $(RLGS)(gpu_interfaces.o) \
           $(RLGS)(gpu_dense_factor.o) $(RLGS)(gpu_solve.o) \
           $(RLGS)(gpu_smalloc.o) $(RLGS)(gpu_factor.o) \
           $(RLGS)(gpu_subtree.o) $(RLGS)(assemble.o) \
           $(RLGS)(dense_factor.o) $(RLGS)(reorder.o) \
           $(RLGS)(solve.o) $(RLGS)(syrk.o)
GPUD = $(RLGD)(gpu_subtree_no_cuda.o)
GPUDcuda = $(RLGD)(gpu_alloc.o) $(RLGD)(cpu_solve.o) \
           $(RLGD)(gpu_datatypes.o) $(RLGD)(gpu_interfaces.o) \
           $(RLGD)(gpu_dense_factor.o) $(RLGD)(gpu_solve.o) \
           $(RLGD)(gpu_smalloc.o) $(RLGD)(gpu_factor.o) \
           $(RLGD)(gpu_subtree.o) $(RLGD)(assemble.o) \
           $(RLGD)(dense_factor.o) $(RLGD)(reorder.o) \
           $(RLGD)(solve.o) $(RLGD)(syrk.o)

SPRALRBS = $(RLGS)(kinds.o) $(RLGS)(matrix_util.o) $(RLGS)(random.o) \
           $(RLGS)(rutherford_boeing.o)
SPRALRBD = $(RLGD)(kinds.o) $(RLGD)(matrix_util.o) $(RLGD)(random.o) \
           $(RLGD)(rutherford_boeing.o)

SSIDSS = $(SPRALRBS) $(CUDAS$(CUDA)) \
         $(RLGS)(compat.o) \
         $(RLGS)(guess_topology.o) $(RLGS)(omp.o) $(RLGS)(NumericSubtree.o) \
         $(RLGS)(profile.o) $(RLGS)(SymbolicSubtree.o) $(RLGS)(cholesky.o) \
         $(RLGS)(ldlt_app.o) $(RLGS)(ldlt_nopiv.o) $(RLGS)(ldlt_tpp.o) \
         $(RLGS)(wrappers.o) $(RLGS)(ThreadStats.o) $(RLGS)(hw_topology.o) \
         $(RLGS)(metis4_wrapper.o) $(RLGS)(scaling.o) \
         $(RLGS)(match_order.o) $(RLGS)(datatypes.o) \
         $(RLGS)(core_analyse.o) $(RLGS)(pgm.o) $(RLGS)(inform.o) \
         $(RLGS)(contrib.o) $(RLGS)(subtree.o) $(RLGS)(akeep.o) \
         $(RLGS)(blas_iface.o) $(RLGS)(lapack_iface.o) \
         $(RLGS)(cpu_iface.o) $(RLGS)(cpu_subtree.o) $(RLGS)(profile_iface.o) \
         $(GPUS$(CUDA)) \
         $(RLGS)(anal.o) $(RLGS)(fkeep.o) $(RLGS)(ssids.o) \
         $(RLGS)(contrib_free.o)
SSIDSD = $(SPRALRBD) $(CUDAD$(CUDA)) \
         $(RLGD)(compat.o) \
         $(RLGD)(guess_topology.o) $(RLGD)(omp.o) $(RLGD)(NumericSubtree.o) \
         $(RLGD)(profile.o) $(RLGD)(SymbolicSubtree.o) $(RLGD)(cholesky.o) \
         $(RLGD)(ldlt_app.o) $(RLGD)(ldlt_nopiv.o) $(RLGD)(ldlt_tpp.o) \
         $(RLGD)(wrappers.o) $(RLGD)(ThreadStats.o) $(RLGD)(hw_topology.o) \
         $(RLGD)(metis4_wrapper.o) $(RLGD)(scaling.o) \
         $(RLGD)(match_order.o) $(RLGD)(datatypes.o) \
         $(RLGD)(core_analyse.o) $(RLGD)(pgm.o) $(RLGD)(inform.o) \
         $(RLGD)(contrib.o) $(RLGD)(subtree.o) $(RLGD)(akeep.o) \
         $(RLGD)(blas_iface.o) $(RLGD)(lapack_iface.o) \
         $(RLGD)(cpu_iface.o) $(RLGD)(cpu_subtree.o) $(RLGD)(profile_iface.o) \
         $(GPUD$(CUDA)) \
         $(RLGD)(anal.o) $(RLGD)(fkeep.o) $(RLGD)(ssids.o) \
         $(RLGD)(contrib_free.o)

SSIDSCS = $(SSIDSS) $(CLGS)(ssids_ciface.o)
SSIDSCD = $(SSIDSD) $(CLGD)(ssids_ciface.o)

#  main compilations and runs

all: ssids

# ssids

ssids_silent: ssids_silent_$(PRECIS)
ssids_silent_single: $(SSIDSS)
	$(RANLIB) $(RLGS)
ssids_silent_double: $(SSIDSD)
	$(RANLIB) $(RLGD)

ssids: ssids_$(PRECIS)
	@printf ' %-21s\n' "GALAHAD: SSIDS ($(PRECIS) $(SUCC)"
ssids_single: $(SSIDSS)
	$(RANLIB) $(RLGS)
ssids_double: $(SSIDSD)
	$(RANLIB) $(RLGD)

ssids_ciface: ssids_ciface_$(PRECIS)
	@printf ' %-21s\n' "SSIDS C routines ($(PRECIS) $(SUCC)"
ssids_ciface_silent: ssids_ciface_$(PRECIS)
ssids_ciface_single: $(SSIDSCS)
ssids_ciface_double: $(SSIDSCD)

# spralrb

spralrb_silent: spralrb_silent_$(PRECIS)
spralrb_silent_single: $(SPRALRBS)
	$(RANLIB) $(RLGS)
spralrb_silent_double: $(SPRALRBD)
	$(RANLIB) $(RLGD)

spralrb: spralrb_$(PRECIS)
	@printf ' %-21s\n' "GALAHAD: SPRALRB ($(PRECIS) $(SUCC)"
spralrb_single: $(SPRALRBS)
	$(RANLIB) $(RLGS)
spralrb_double: $(SPRALRBD)
	$(RANLIB) $(RLGD)

# run spec-sheet example tests

ssidsds: $(SSIDSDS)
	cd ../ssids ; $(FORTRAN) $(RUNFFLAGSOMP) $(SPECIAL) \
          -o run_ssids $(RSSIDSDS)
#	- ../ssids/run_ssids < ../ssids/ssidss.data
	- ../ssids/run_ssids < ../ssids/ssidss.data \
                             > ../ssids/ssidsds.output 2>&1
	cat ../ssids/ssidsds.output
	rm ../ssids/run_ssids

ssidsds_valgrind: $(SSIDSDS)
	cd ../ssids ; $(FORTRAN) $(RUNFFLAGSOMP) $(SPECIAL) \
          -o run_ssids $(RSSIDSDS)
	- valgrind -v --tool=memcheck --leak-check=yes \
            --show-reachable=yes ../ssids/run_ssids < ../ssids/ssidss.data
	rm ../ssids/run_ssids

ssidsds_cuda: $(SSIDSDS)
	cd ../ssids ; $(CUDACOMP) $(CUDAOPENMP) -o run_ssids \
                      $(RSSIDSDS) $(CUDALIBS) $(RUNFFLAGSCUDA) $(SPECIAL)
#	- ../ssids/run_ssids < ../ssids/ssidss.data
	- ../ssids/run_ssids < ../ssids/ssidss.data \
                             > ../ssids/ssidsds.output 2>&1
	cat ../ssids/ssidsds.output
	rm ../ssids/run_ssids

ssidsds_cuda_valgrind: $(SSIDSDS)
	cd ../ssids ; $(CUDACOMP) $(CUDAOPENMP) -o run_ssids \
                      $(RSSIDSDS) $(CUDALIBS) $(RUNFFLAGSCUDA) $(SPECIAL)
	- valgrind -v --tool=memcheck --leak-check=yes \
            --show-reachable=yes ../ssids/run_ssids < ../ssids/ssidss.data
	rm ../ssids/run_ssids

ssidsdt: $(SSIDSDT)
	echo " Exhaustive test of subroutine interface to ssids"
	cd ../ssids ; $(FORTRAN) $(RUNFFLAGSOMP) $(SPECIAL) \
          -o run_ssids $(RSSIDSDT)
#	- ../ssids/run_ssids
	- ../ssids/run_ssids  > ../ssids/ssidsdt.output 2>&1
	cat ../ssids/ssidsdt.output
	rm ../ssids/run_ssids

ssidsdt_cuda: $(SSIDSDT)
	cd ../ssids ; $(CUDACOMP) $(CUDAOPENMP) -o run_ssids \
                      $(RSSIDSDT) $(CUDALIBS) $(RUNFFLAGSCUDA) $(SPECIAL)
#	- ../ssids/run_ssids
	- ../ssids/run_ssids > ../ssids/ssidsdt.output 2>&1
	cat ../ssids/ssidsdt.output
	rm ../ssids/run_ssids

ssidsdt_valgrind: $(SSIDSDT)
	echo " Exhaustive test of subroutine interface to ssids"
	cd ../ssids ; $(FORTRAN) $(RUNFFLAGSOMP) $(SPECIAL) \
          -o run_ssids $(RSSIDSDT)
#	- ../ssids/run_ssids
	- valgrind -v --tool=memcheck --leak-check=yes \
            --show-reachable=yes --track-origins=yes ../ssids/run_ssids
	rm ../ssids/run_ssids

ssidsdt_cuda_valgrind: $(SSIDSDT)
	cd ../ssids ; $(CUDACOMP) $(CUDAOPENMP) -o run_ssids \
                      $(RSSIDSDT) $(CUDALIBS) $(RUNFFLAGSCUDA) $(SPECIAL)
	- valgrind -v --tool=memcheck --leak-check=yes \
            --show-reachable=yes ../ssids/run_ssids
	rm ../ssids/run_ssids

ssidsss: $(SSIDSSS)
	cd ../ssids ; $(FORTRAN) $(RUNFFLAGSOMP) $(SPECIAL) \
          -o run_ssids $(RSSIDSSS)
#	- ../ssids/run_ssids < ../ssids/ssidss.data
	- ../ssids/run_ssids < ../ssids/ssidss.data \
                             > ../ssids/ssidss.output 2>&1
	cat ../ssids/ssidss.output
	rm ../ssids/run_ssids

ssidsst: $(SSIDSST)
	echo " Exhaustive test of subroutine interface to ssids"
	cd ../ssids ; $(FORTRAN) $(RUNFFLAGSOMP) $(SPECIAL) \
          -o run_ssids $(RSSIDSST)
#	- ../ssids/run_ssids < ../ssids/ssidss.data
	- ../ssids/run_ssids > ../ssids/ssidst.output 2>&1
	cat ../ssids/ssidst.output
	rm ../ssids/run_ssids

#  individual compilations

compat.o: $(RLG)(compat.o)

$(RLG)(compat.o): ../spral/compat.cxx
	@printf ' %-9s %-15s\t\t' "Compiling" "compat  "
	$(CP) ../spral/compat.cxx $(OBJ)/
	cd $(OBJ) ; $(CXX) -I. -o compat.o $(CXXFLAGSOMP) \
          compat.cxx \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(CXX) -I. -o compat.o $(CXXFLAGSNCOMP) \
                      compat.cxx )
	cd $(OBJ) ; $(RARR) compat.o ; $(RM) compat.cxx compat.o
	@printf '[ OK ]\n'

guess_topology.o: $(RLG)(guess_topology.o)

$(RLG)(guess_topology.o): ../spral/guess_topology.cxx
	@printf ' %-9s %-15s\t\t' "Compiling" "guess_topology  "
	$(CP) ../spral/guess_topology.cxx $(OBJ)/
	cd $(OBJ) ; $(CXX) -I. -o guess_topology.o $(CXXFLAGSOMP) \
          guess_topology.cxx \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(CXX) -I. -o guess_topology.o $(CXXFLAGSNOMP) \
                      guess_topology.cxx )
	cd $(OBJ) ; $(RARR) guess_topology.o ; \
          $(RM) guess_topology.cxx guess_topology.o
	@printf '[ OK ]\n'

omp.o: $(RLG)(omp.o)

$(RLG)(omp.o): ../spral/omp.cxx
	@printf ' %-9s %-15s\t\t' "Compiling" "omp  "
	$(CP) ../spral/omp.cxx $(OBJ)/
	cd $(OBJ) ; $(CXX) -I. -o omp.o $(CXXFLAGSOMP) \
          omp.cxx \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(CXX) -I. -o omp.o $(CXXFLAGSNOMP) omp.cxx )
	cd $(OBJ) ; $(RARR) omp.o ; $(RM) omp.cxx omp.o
	@printf '[ OK ]\n'

NumericSubtree.o: $(RLG)(NumericSubtree.o)

$(RLG)(NumericSubtree.o): ../ssids/NumericSubtree.cxx
	@printf ' %-9s %-15s\t\t' "Compiling" "NumericSubtree  "
	$(CP) ../ssids/NumericSubtree.cxx $(OBJ)/
	cd $(OBJ) ; $(CXX) -I. -o NumericSubtree.o $(CXXFLAGSOMP) \
          NumericSubtree.cxx \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(CXX) -I. -o NumericSubtree.o $(CXXFLAGSNOMP) \
                      NumericSubtree.cxx )
	cd $(OBJ) ; $(RARR) NumericSubtree.o ; $(RM) NumericSubtree.cxx \
          NumericSubtree.o
	@printf '[ OK ]\n'

profile.o: $(RLG)(profile.o)

$(RLG)(profile.o): ../ssids/profile.cxx
	@printf ' %-9s %-15s\t\t' "Compiling" "profile  "
	$(CP) ../ssids/profile.cxx $(OBJ)/
	cd $(OBJ) ; $(CXX) -I. -o profile.o $(CXXFLAGSOMP) \
          profile.cxx \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(CXX) -I. -o profile.o $(CXXFLAGSNOMP) profile.cxx )
	cd $(OBJ) ; $(RARR) profile.o ; $(RM) profile.cxx profile.o
	@printf '[ OK ]\n'

SymbolicSubtree.o: $(RLG)(SymbolicSubtree.o)

$(RLG)(SymbolicSubtree.o): ../ssids/SymbolicSubtree.cxx
	@printf ' %-9s %-15s\t\t' "Compiling" "SymbolicSubtree  "
	$(CP) ../ssids/SymbolicSubtree.cxx $(OBJ)/
	cd $(OBJ) ; $(CXX) -I. -o SymbolicSubtree.o $(CXXFLAGSOMP) \
          SymbolicSubtree.cxx \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(CXX) -I. -o SymbolicSubtree.o $(CXXFLAGSNOMP) \
                      SymbolicSubtree.cxx )
	cd $(OBJ) ; $(RARR) SymbolicSubtree.o ; \
                      $(RM) SymbolicSubtree.cxx SymbolicSubtree.o
	@printf '[ OK ]\n'

cholesky.o: $(RLG)(cholesky.o)

$(RLG)(cholesky.o): ../ssids/cholesky.cxx
	@printf ' %-9s %-15s\t\t' "Compiling" "cholesky  "
	$(CP) ../ssids/cholesky.cxx $(OBJ)/
	cd $(OBJ) ; $(CXX) -I. -o cholesky.o $(CXXFLAGSOMP) \
          cholesky.cxx \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(CXX) -I. -o cholesky.o $(CXXFLAGSNOMP) \
                      cholesky.cxx )
	cd $(OBJ) ; $(RARR) cholesky.o ; $(RM) cholesky.cxx cholesky.o 
	@printf '[ OK ]\n'

ldlt_app.o: $(RLG)(ldlt_app.o)

$(RLG)(ldlt_app.o): ../ssids/ldlt_app.cxx
	@printf ' %-9s %-15s\t\t' "Compiling" "ldlt_app  "
	$(CP) ../ssids/ldlt_app.cxx $(OBJ)/
	cd $(OBJ) ; $(CXX) -I. -o ldlt_app.o $(CXXFLAGSOMP) \
          ldlt_app.cxx \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(CXX) -I. -o ldlt_app.o $(CXXFLAGSNOMP) \
                      ldlt_app.cxx )
	cd $(OBJ) ; $(RARR) ldlt_app.o ; $(RM) ldlt_app.cxx ldlt_app.o
	@printf '[ OK ]\n'

ldlt_nopiv.o: $(RLG)(ldlt_nopiv.o)

$(RLG)(ldlt_nopiv.o): ../ssids/ldlt_nopiv.cxx
	@printf ' %-9s %-15s\t\t' "Compiling" "ldlt_nopiv  "
	$(CP) ../ssids/ldlt_nopiv.cxx $(OBJ)/
	cd $(OBJ) ; $(CXX) -I. -o ldlt_nopiv.o $(CXXFLAGSOMP) \
          ldlt_nopiv.cxx \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(CXX) -I. -o ldlt_nopiv.o $(CXXFLAGSNOMP) \
                      ldlt_nopiv.cxx )
	cd $(OBJ) ; $(RARR) ldlt_nopiv.o ; $(RM) ldlt_nopiv.cxx ldlt_nopiv.o 
	@printf '[ OK ]\n'

ldlt_tpp.o: $(RLG)(ldlt_tpp.o)

$(RLG)(ldlt_tpp.o): ../ssids/ldlt_tpp.cxx
	@printf ' %-9s %-15s\t\t' "Compiling" "ldlt_tpp  "
	$(CP) ../ssids/ldlt_tpp.cxx $(OBJ)/
	cd $(OBJ) ; $(CXX) -I. -o ldlt_tpp.o $(CXXFLAGSOMP) \
          ldlt_tpp.cxx \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(CXX) -I. -o ldlt_tpp.o $(CXXFLAGSNOMP) \
                      ldlt_tpp.cxx )
	cd $(OBJ) ; $(RARR) ldlt_tpp.o ; $(RM) ldlt_tpp.cxx ldlt_tpp.o
	@printf '[ OK ]\n'

wrappers.o: $(RLG)(wrappers.o)

$(RLG)(wrappers.o): ../ssids/wrappers.cxx
	@printf ' %-9s %-15s\t\t' "Compiling" "wrappers  "
	$(CP) ../ssids/wrappers.cxx $(OBJ)/wrappers.cxx
	cd $(OBJ) ; $(CXX) -I. -o wrappers.o $(CXXFLAGSOMP) \
          wrappers.cxx \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(CXX) -I. -o wrappers.o $(CXXFLAGSNOMP) \
                      wrappers.cxx )
	cd $(OBJ) ; $(RARR) wrappers.o ; $(RM) wrappers.cxx wrappers.o
	@printf '[ OK ]\n'

ThreadStats.o: $(RLG)(ThreadStats.o)

$(RLG)(ThreadStats.o): ../ssids/ThreadStats.cxx
	@printf ' %-9s %-15s\t\t' "Compiling" "ThreadStats  "
	$(CP) ../ssids/ThreadStats.cxx $(OBJ)/
	cd $(OBJ) ; $(CXX) -I. -o ThreadStats.o $(CXXFLAGSOMP) \
          ThreadStats.cxx \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(CXX) -I. -o ThreadStats.o $(CXXFLAGSNOMP) \
                      ThreadStats.cxx )
	cd $(OBJ) ; $(RARR) ThreadStats.o ; \
                      $(RM) ThreadStats.cxx ThreadStats.o
	@printf '[ OK ]\n'

api_wrappers.o: $(RLG)(api_wrappers.o)

$(RLG)(api_wrappers.o): ../spral/api_wrappers.cu
	@printf ' %-9s %-15s\t\t' "Compiling" "api_wrappers  "
	$(SED) -f $(SEDS) ../spral/api_wrappers.cu > $(OBJ)/api_wrappers.cu
	cd $(OBJ) ; $(CUDACOMP) -o api_wrappers.o $(CUDAFLAGS) api_wrappers.cu \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(CUDACOMP) -o api_wrappers.o $(CUDAFLAGSN) \
                    api_wrappers.cu )
	cd $(OBJ) ; $(RARR) api_wrappers.o ; \
          $(RM) api_wrappers.cu api_wrappers.o
	$(RRMARFILE) cuda.o
	@printf '[ OK ]\n'

kinds.o: $(RLG)(kinds.o)

$(RLG)(kinds.o): ../spral/kinds.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "kinds  "
	$(CP) ../spral/kinds.F90 $(OBJ)/kinds.F90
	cd $(OBJ) ; $(FORTRAN) -o kinds.o $(FFLAGSOMP) kinds.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o kinds.o $(FFLAGSNOMP) kinds.F90 )
	cd $(OBJ) ; $(RARR) kinds.o ; $(RM) kinds.F90 kinds.o
	$(RRMARFILE) cuda.o
	$(RRMARFILE) cuda_nocuda.o
	$(MVMODS)
	@printf '[ OK ]\n'

cuda.o: $(RLG)(cuda.o)

$(RLG)(cuda.o): ../spral/cuda.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "cuda  "
	$(CP) ../spral/cuda.F90 $(OBJ)/cuda.F90
	cd $(OBJ) ; $(FORTRAN) -o cuda.o $(FFLAGSOMP) cuda.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o cuda.o $(FFLAGSNOMP) cuda.F90 )
	cd $(OBJ) ; $(RARR) cuda.o ; $(RM) cuda.F90 cuda.o
	$(RRMARFILE) anal.o
	$(MVMODS)
	@printf '[ OK ]\n'

cuda_nocuda.o: $(RLG)(cuda_nocuda.o)

$(RLG)(cuda_nocuda.o): ../spral/cuda_nocuda.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "cuda_nocuda  "
	$(CP) ../spral/cuda_nocuda.F90 $(OBJ)/cuda_nocuda.F90
	cd $(OBJ) ; $(FORTRAN) -o cuda_nocuda.o $(FFLAGSOMP) cuda_nocuda.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o cuda_nocuda.o $(FFLAGSNOMP) cuda_nocuda.F90 )
	cd $(OBJ) ; $(RARR) cuda_nocuda.o ; $(RM) cuda_nocuda.F90 cuda_nocuda.o
	$(RRMARFILE) anal.o
	$(MVMODS)
	@printf '[ OK ]\n'

gpu_subtree.o: $(RLG)(gpu_subtree.o)

$(RLG)(gpu_subtree.o): ../ssids/gpu_subtree.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "gpu_subtree  "
	$(CP) ../ssids/gpu_subtree.F90 $(OBJ)/gpu_subtree.F90
	cd $(OBJ) ; $(FORTRAN) -o gpu_subtree.o $(FFLAGSOMP) gpu_subtree.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o gpu_subtree.o $(FFLAGSNOMP) gpu_subtree.F90 )
	cd $(OBJ) ; $(RARR) gpu_subtree.o ; $(RM) gpu_subtree.F90 gpu_subtree.o
	$(RRMARFILE) anal.o
	$(MVMODS)
	@printf '[ OK ]\n'

assemble.o: $(RLG)(assemble.o)

$(RLG)(assemble.o): ../ssids/assemble.cu
	@printf ' %-9s %-15s\t\t' "Compiling" "assemble  "
	$(CP) ../ssids/assemble.cu $(OBJ)/assemble.cu
	cd $(OBJ) ; $(CUDACOMP) -o assemble.o $(CUDAFLAGS) assemble.cu \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(CUDACOMP) -o assemble.o $(CUDAFLAGSN) \
                    assemble.cu )
	cd $(OBJ) ; $(RARR) assemble.o ; $(RM) assemble.cu assemble.o
#	$(RRMARFILE) anal.o
#	$(RANLIB) $(RLG)
#	$(MVMODS)
	@printf '[ OK ]\n'


dense_factor.o: $(RLG)(dense_factor.o)

$(RLG)(dense_factor.o): ../ssids/dense_factor.cu
	@printf ' %-9s %-15s\t\t' "Compiling" "dense_factor  "
	$(CP) ../ssids/dense_factor.cu $(OBJ)/dense_factor.cu
	cd $(OBJ) ; $(CUDACOMP) -o dense_factor.o \
           $(CUDAFLAGS) dense_factor.cu \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(CUDACOMP) -o dense_factor.o $(CUDAFLAGSN) \
                    dense_factor.cu )
	cd $(OBJ) ; $(RARR) dense_factor.o ; \
                      $(RM) dense_factor.cu dense_factor.o
#	$(RRMARFILE) anal.o
#	$(RANLIB) $(RLG)
#	$(MVMODS)
	@printf '[ OK ]\n'

reorder.o: $(RLG)(reorder.o)

$(RLG)(reorder.o): ../ssids/reorder.cu
	@printf ' %-9s %-15s\t\t' "Compiling" "reorder  "
	$(CP) ../ssids/reorder.cu $(OBJ)/reorder.cu
	cd $(OBJ) ; $(CUDACOMP) -o reorder.o $(CUDAFLAGS) reorder.cu \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(CUDACOMP) -o reorder.o $(CUDAFLAGSN) \
                    reorder.cu )
	cd $(OBJ) ; $(RARR) reorder.o ; $(RM) reorder.cu reorder.o
#	$(RRMARFILE) anal.o
#	$(RANLIB) $(RLG)
#	$(MVMODS)
	@printf '[ OK ]\n'

solve.o: $(RLG)(solve.o)

$(RLG)(solve.o): ../ssids/solve.cu
	@printf ' %-9s %-15s\t\t' "Compiling" "solve  "
	$(CP) ../ssids/solve.cu $(OBJ)/solve.cu
	cd $(OBJ) ; $(CUDACOMP) -o solve.o $(CUDAFLAGS) solve.cu \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(CUDACOMP) -o solve.o $(CUDAFLAGSN) \
                    solve.cu )
	cd $(OBJ) ; $(RARR) solve.o ; $(RM) solve.cu solve.o
#	$(RRMARFILE) anal.o
#	$(RANLIB) $(RLG)
#	$(MVMODS)
	@printf '[ OK ]\n'

syrk.o: $(RLG)(syrk.o)

$(RLG)(syrk.o): ../ssids/syrk.cu
	@printf ' %-9s %-15s\t\t' "Compiling" "syrk  "
	$(CP) ../ssids/syrk.cu $(OBJ)/syrk.cu
	cd $(OBJ) ; $(CUDACOMP) -o syrk.o $(CUDAFLAGS) syrk.cu \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(CUDACOMP) -o syrk.o $(CUDAFLAGSN) \
                    syrk.cu )
	cd $(OBJ) ; $(RARR) syrk.o ; $(RM) syrk.cu syrk.o
#	$(RRMARFILE) anal.o
#	$(RANLIB) $(RLG)
#	$(MVMODS)
	@printf '[ OK ]\n'

gpu_subtree_no_cuda.o: $(RLG)(gpu_subtree_no_cuda.o)

$(RLG)(gpu_subtree_no_cuda.o): ../ssids/gpu_subtree_no_cuda.F90
	@printf ' %-9s %-15s\t' "Compiling" "gpu_subtree_no_cuda  "
	$(CP) ../ssids/gpu_subtree_no_cuda.F90 $(OBJ)/gpu_subtree_no_cuda.F90
	cd $(OBJ) ; $(FORTRAN) -o gpu_subtree_no_cuda.o $(FFLAGSOMP) \
           gpu_subtree_no_cuda.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o gpu_subtree_no_cuda.o $(FFLAGSNOMP) \
             gpu_subtree_no_cuda.F90 )
	cd $(OBJ) ; $(RARR) gpu_subtree_no_cuda.o ; \
          $(RM) gpu_subtree_no_cuda.F90 gpu_subtree_no_cuda.o
	$(RRMARFILE) anal.o
	$(MVMODS)
	@printf '[ OK ]\n'

hw_topology.o: $(RLG)(hw_topology.o)

$(RLG)(hw_topology.o): ../spral/hw_topology.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "hw_topology  "
	$(CP) ../spral/hw_topology.F90 $(OBJ)/hw_topology.F90
	cd $(OBJ) ; $(FORTRAN) -o hw_topology.o $(FFLAGSOMP) hw_topology.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o hw_topology.o $(FFLAGSNOMP) hw_topology.F90 )
	cd $(OBJ) ; $(RARR) hw_topology.o ; $(RM) hw_topology.F90 hw_topology.o
	$(RRMARFILE) ssids.o
	$(MVMODS)
	@printf '[ OK ]\n'

metis4_wrapper.o: $(RLG)(metis4_wrapper.o)

$(RLG)(metis4_wrapper.o): ../spral/metis4_wrapper.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "metis4_wrapper  "
	$(CP) ../spral/metis4_wrapper.F90 $(OBJ)/metis4_wrapper.F90
	cd $(OBJ) ; $(FORTRAN) -o metis4_wrapper.o $(FFLAGSOMP) \
           metis4_wrapper.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o metis4_wrapper.o $(FFLAGSNOMP) \
           metis4_wrapper.F90 )
	cd $(OBJ) ; $(RARR) metis4_wrapper.o ; \
          $(RM) metis4_wrapper.F90 metis4_wrapper.o
	$(RRMARFILE) match_order.o
	$(MVMODS)
	@printf '[ OK ]\n'

match_order.o: $(RLG)(match_order.o)

$(RLG)(match_order.o): ../spral/match_order.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "match_order  "
	$(CP) ../spral/match_order.F90 $(OBJ)/match_order.F90
	cd $(OBJ) ; $(FORTRAN) -o match_order.o $(FFLAGSOMP) match_order.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o match_order.o $(FFLAGSNOMP) match_order.F90 )
	cd $(OBJ) ; $(RARR) match_order.o ; $(RM) match_order.F90 match_order.o
	$(RRMARFILE) ssids.o
	$(MVMODS)
	@printf '[ OK ]\n'

matrix_util.o: $(RLG)(matrix_util.o)

$(RLG)(matrix_util.o): ../spral/matrix_util.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "matrix_util  "
	$(CP) ../spral/matrix_util.F90 $(OBJ)/matrix_util.F90
	cd $(OBJ) ; $(FORTRAN) -o matrix_util.o $(FFLAGSOMP) matrix_util.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o matrix_util.o $(FFLAGSNOMP) matrix_util.F90 )
	cd $(OBJ) ; $(RARR) matrix_util.o ; $(RM) matrix_util.F90 matrix_util.o
	$(RRMARFILE) scaling.o
	$(MVMODS)
	@printf '[ OK ]\n'

scaling.o: $(RLG)(scaling.o)

$(RLG)(scaling.o): ../spral/scaling.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "scaling  "
	$(CP) ../spral/scaling.F90 $(OBJ)/scaling.F90
	cd $(OBJ) ; $(FORTRAN) -o scaling.o $(FFLAGSOMP) scaling.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o scaling.o $(FFLAGSNOMP) scaling.F90 )
	cd $(OBJ) ; $(RARR) scaling.o ; $(RM) scaling.F90 scaling.o
	$(RRMARFILE) ssids.o
	$(MVMODS)
	@printf '[ OK ]\n'

datatypes.o: $(RLG)(datatypes.o)

$(RLG)(datatypes.o): ../ssids/datatypes.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "datatypes  "
	$(CP) ../ssids/datatypes.F90 $(OBJ)/datatypes.F90
	cd $(OBJ) ; $(FORTRAN) -o datatypes.o $(FFLAGSOMP) datatypes.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o datatypes.o $(FFLAGSNOMP) datatypes.F90 )
	cd $(OBJ) ; $(RARR) datatypes.o ; $(RM) datatypes.F90 datatypes.o
	$(RRMARFILE) cpu_subtree.o
	$(RRMARFILE) gpu_alloc.o
	$(MVMODS)
	@printf '[ OK ]\n'

$(RLG)(gpu_alloc.o): ../ssids/gpu_alloc.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "gpu_alloc  "
	$(CP) ../ssids/gpu_alloc.F90 $(OBJ)/gpu_alloc.F90
	cd $(OBJ) ; $(FORTRAN) -o gpu_alloc.o $(FFLAGSOMP) gpu_alloc.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o gpu_alloc.o $(FFLAGSNOMP) gpu_alloc.F90 )
	cd $(OBJ) ; $(RARR) gpu_alloc.o ; $(RM) gpu_alloc.F90 gpu_alloc.o
	$(MVMODS)
	@printf '[ OK ]\n'

$(RLG)(cpu_solve.o): ../ssids/cpu_solve.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "cpu_solve  "
	$(CP) ../ssids/cpu_solve.F90 $(OBJ)/cpu_solve.F90
	cd $(OBJ) ; $(FORTRAN) -o cpu_solve.o $(FFLAGSOMP) cpu_solve.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o cpu_solve.o $(FFLAGSNOMP) cpu_solve.F90 )
	cd $(OBJ) ; $(RARR) cpu_solve.o ; $(RM) cpu_solve.F90 cpu_solve.o
#	$(RRMARFILE) ssids.o
	$(MVMODS)
	@printf '[ OK ]\n'

$(RLG)(gpu_datatypes.o): ../ssids/gpu_datatypes.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "gpu_datatypes  "
	$(CP) ../ssids/gpu_datatypes.F90 $(OBJ)/gpu_datatypes.F90
	cd $(OBJ) ; $(FORTRAN) -o gpu_datatypes.o $(FFLAGSOMP) \
           gpu_datatypes.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o gpu_datatypes.o $(FFLAGSNOMP) \
                       gpu_datatypes.F90 )
	cd $(OBJ) ; $(RARR) gpu_datatypes.o ; \
          $(RM) gpu_datatypes.F90 gpu_datatypes.o
#	$(RRMARFILE) ssids.o
	$(MVMODS)
	@printf '[ OK ]\n'

$(RLG)(gpu_interfaces.o): ../ssids/gpu_interfaces.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "gpu_interfaces  "
	$(CP) ../ssids/gpu_interfaces.F90 $(OBJ)/gpu_interfaces.F90
	cd $(OBJ) ; $(FORTRAN) -o gpu_interfaces.o $(FFLAGSOMP) \
           gpu_interfaces.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o gpu_interfaces.o $(FFLAGSNOMP) \
                       gpu_interfaces.F90 )
	cd $(OBJ) ; $(RARR) gpu_interfaces.o ; \
          $(RM) gpu_interfaces.F90 gpu_interfaces.o
#	$(RRMARFILE) ssids.o
	$(MVMODS)
	@printf '[ OK ]\n'

$(RLG)(gpu_dense_factor.o): ../ssids/gpu_dense_factor.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "gpu_dense_factor  "
	$(CP) ../ssids/gpu_dense_factor.F90 $(OBJ)/gpu_dense_factor.F90
	cd $(OBJ) ; $(FORTRAN) -o gpu_dense_factor.o $(FFLAGSOMP) \
           gpu_dense_factor.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o gpu_dense_factor.o $(FFLAGSNOMP) \
                       gpu_dense_factor.F90 )
	cd $(OBJ) ; $(RARR) gpu_dense_factor.o ; \
          $(RM) gpu_dense_factor.F90 gpu_dense_factor.o
#	$(RRMARFILE) ssids.o
	$(MVMODS)
	@printf '[ OK ]\n'

$(RLG)(gpu_solve.o): ../ssids/gpu_solve.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "gpu_solve  "
	$(CP) ../ssids/gpu_solve.F90 $(OBJ)/gpu_solve.F90
	cd $(OBJ) ; $(FORTRAN) -o gpu_solve.o $(FFLAGSOMP) gpu_solve.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o gpu_solve.o $(FFLAGSNOMP) gpu_solve.F90 )
	cd $(OBJ) ; $(RARR) gpu_solve.o ; $(RM) gpu_solve.F90 gpu_solve.o
#	$(RRMARFILE) ssids.o
	$(MVMODS)
	@printf '[ OK ]\n'

$(RLG)(gpu_smalloc.o): ../ssids/gpu_smalloc.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "gpu_smalloc  "
	$(CP) ../ssids/gpu_smalloc.F90 $(OBJ)/gpu_smalloc.F90
	cd $(OBJ) ; $(FORTRAN) -o gpu_smalloc.o $(FFLAGSOMP) gpu_smalloc.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o gpu_smalloc.o $(FFLAGSNOMP) gpu_smalloc.F90 )
	cd $(OBJ) ; $(RARR) gpu_smalloc.o ; $(RM) gpu_smalloc.F90 gpu_smalloc.o
#	$(RRMARFILE) ssids.o
	$(MVMODS)
	@printf '[ OK ]\n'

$(RLG)(gpu_factor.o): ../ssids/gpu_factor.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "gpu_factor  "
	$(CP) ../ssids/gpu_factor.F90 $(OBJ)/gpu_factor.F90
	cd $(OBJ) ; $(FORTRAN) -o gpu_factor.o $(FFLAGSOMP) gpu_factor.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o gpu_factor.o $(FFLAGSNOMP) gpu_factor.F90 )
	cd $(OBJ) ; $(RARR) gpu_factor.o ; $(RM) gpu_factor.F90 gpu_factor.o
#	$(RRMARFILE) ssids.o
	$(MVMODS)
	@printf '[ OK ]\n'

core_analyse.o: $(RLG)(core_analyse.o)

$(RLG)(core_analyse.o): ../spral/core_analyse.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "core_analyse  "
	$(CP) ../spral/core_analyse.F90 $(OBJ)/core_analyse.F90
	cd $(OBJ) ; $(FORTRAN) -o core_analyse.o $(FFLAGSOMP) core_analyse.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                  $(FORTRAN) -o core_analyse.o $(FFLAGSNOMP) core_analyse.F90 )
	cd $(OBJ) ; $(RARR) core_analyse.o ; \
          $(RM) core_analyse.F90 core_analyse.o
	$(RRMARFILE) anal.o
	$(MVMODS)
	@printf '[ OK ]\n'

pgm.o: $(RLG)(pgm.o)

$(RLG)(pgm.o): ../spral/pgm.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "pgm  "
	$(CP) ../spral/pgm.F90 $(OBJ)/pgm.F90
	cd $(OBJ) ; $(FORTRAN) -o pgm.o $(FFLAGSOMP) pgm.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o pgm.o $(FFLAGSNOMP) pgm.F90 )
	cd $(OBJ) ; $(RARR) pgm.o ; $(RM) pgm.F90 pgm.o
	$(RRMARFILE) anal.o
	$(MVMODS)
	@printf '[ OK ]\n'

inform.o: $(RLG)(inform.o)

$(RLG)(inform.o): ../ssids/inform.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "inform  "
	$(CP) ../ssids/inform.F90 $(OBJ)/inform.F90
	cd $(OBJ) ; $(FORTRAN) -o inform.o $(FFLAGSOMP) inform.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o inform.o $(FFLAGSNOMP) inform.F90 )
	cd $(OBJ) ; $(RARR) inform.o ; $(RM) inform.F90 inform.o
	$(RRMARFILE) cpu_subtree.o
	$(RRMARFILE) akeep.o
	$(MVMODS)
	@printf '[ OK ]\n'

contrib.o: $(RLG)(contrib.o)

$(RLG)(contrib.o): ../ssids/contrib.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "contrib  "
	$(CP) ../ssids/contrib.F90 $(OBJ)/contrib.F90
	cd $(OBJ) ; $(FORTRAN) -o contrib.o $(FFLAGSOMP) contrib.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o contrib.o $(FFLAGSNOMP) contrib.F90 )
	cd $(OBJ) ; $(RARR) contrib.o ; $(RM) contrib.F90 contrib.o
	$(RRMARFILE) cpu_subtree.o
	$(RRMARFILE) subtree.o
	$(MVMODS)
	@printf '[ OK ]\n'

subtree.o: $(RLG)(subtree.o)

$(RLG)(subtree.o): ../ssids/subtree.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "subtree  "
	$(CP) ../ssids/subtree.F90 $(OBJ)/subtree.F90
	cd $(OBJ) ; $(FORTRAN) -o subtree.o $(FFLAGSOMP) subtree.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o subtree.o $(FFLAGSNOMP) subtree.F90 )
	cd $(OBJ) ; $(RARR) subtree.o ; $(RM) subtree.F90 subtree.o
	$(RRMARFILE) cpu_subtree.o
	$(RRMARFILE) akeep.o
	$(MVMODS)
	@printf '[ OK ]\n'

blas_iface.o: $(RLG)(blas_iface.o)

$(RLG)(blas_iface.o): ../ssids/blas_iface.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "blas_iface  "
	$(CP) ../ssids/blas_iface.F90 $(OBJ)/blas_iface.F90
	cd $(OBJ) ; $(FORTRAN) -o blas_iface.o $(FFLAGSOMP) blas_iface.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o blas_iface.o $(FFLAGSNOMP) blas_iface.F90 )
	cd $(OBJ) ; $(RARR) blas_iface.o ; $(RM) blas_iface.F90 blas_iface.o
	$(RRMARFILE) cpu_iface.o
	$(MVMODS)
	@printf '[ OK ]\n'

lapack_iface.o: $(RLG)(lapack_iface.o)

$(RLG)(lapack_iface.o): ../ssids/lapack_iface.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "lapack_iface  "
	$(CP) ../ssids/lapack_iface.F90 $(OBJ)/lapack_iface.F90
	cd $(OBJ) ; $(FORTRAN) -o lapack_iface.o $(FFLAGSOMP) lapack_iface.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                  $(FORTRAN) -o lapack_iface.o $(FFLAGSNOMP) lapack_iface.F90 )
	cd $(OBJ) ; $(RARR) lapack_iface.o ; \
          $(RM) lapack_iface.F90 lapack_iface.o
	$(RRMARFILE) cpu_iface.o
	$(MVMODS)
	@printf '[ OK ]\n'

cpu_iface.o: $(RLG)(cpu_iface.o)

$(RLG)(cpu_iface.o): ../ssids/cpu_iface.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "cpu_iface  "
	$(CP) ../ssids/cpu_iface.F90 $(OBJ)/cpu_iface.F90
	cd $(OBJ) ; $(FORTRAN) -o cpu_iface.o $(FFLAGSOMP) cpu_iface.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o cpu_iface.o $(FFLAGSNOMP) cpu_iface.F90 )
	cd $(OBJ) ; $(RARR) cpu_iface.o ; $(RM) cpu_iface.F90 cpu_iface.o
	$(RRMARFILE) cpu_subtree.o
	$(MVMODS)
	@printf '[ OK ]\n'

cpu_subtree.o: $(RLG)(cpu_subtree.o)

$(RLG)(cpu_subtree.o): ../ssids/cpu_subtree.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "cpu_subtree  "
	$(CP) ../ssids/cpu_subtree.F90 $(OBJ)/cpu_subtree.F90
	cd $(OBJ) ; $(FORTRAN) -o cpu_subtree.o $(FFLAGSOMP) cpu_subtree.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o cpu_subtree.o $(FFLAGSNOMP) cpu_subtree.F90 )
	cd $(OBJ) ; $(RARR) cpu_subtree.o ; $(RM) cpu_subtree.F90 cpu_subtree.o
	$(RRMARFILE) anal.o
	$(MVMODS)
	@printf '[ OK ]\n'

akeep.o: $(RLG)(akeep.o)

$(RLG)(akeep.o): ../ssids/akeep.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "akeep  "
	$(CP) ../ssids/akeep.F90 $(OBJ)/akeep.F90
	cd $(OBJ) ; $(FORTRAN) -o akeep.o $(FFLAGSOMP) akeep.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o akeep.o $(FFLAGSNOMP) akeep.F90 )
	cd $(OBJ) ; $(RARR) akeep.o ; $(RM) akeep.F90 akeep.o
	$(RRMARFILE) anal.o
	$(MVMODS)
	@printf '[ OK ]\n'

anal.o: $(RLG)(anal.o)

$(RLG)(anal.o): ../ssids/anal.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "anal  "
	$(CP) ../ssids/anal.F90 $(OBJ)/anal.F90
	cd $(OBJ) ; $(FORTRAN) -o anal.o $(FFLAGSOMP) anal.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o anal.o $(FFLAGSNOMP) anal.F90 )
	cd $(OBJ) ; $(RARR) anal.o ; $(RM) anal.F90 anal.o
	$(RRMARFILE) ssids.o
	$(MVMODS)
	@printf '[ OK ]\n'

profile_iface.o: $(RLG)(profile_iface.o)

$(RLG)(profile_iface.o): ../ssids/profile_iface.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "profile_iface  "
	$(CP) ../ssids/profile_iface.F90 $(OBJ)/profile_iface.F90
	cd $(OBJ) ; $(FORTRAN) -o profile_iface.o $(FFLAGSOMP) \
          profile_iface.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o profile_iface.o $(FFLAGSNOMP) \
                      profile_iface.F90 )
	cd $(OBJ) ; $(RARR) profile_iface.o ; \
           $(RM) profile_iface.F90 profile_iface.o
	$(RRMARFILE) fkeep.o
	$(MVMODS)
	@printf '[ OK ]\n'

fkeep.o: $(RLG)(fkeep.o)

$(RLG)(fkeep.o): ../ssids/fkeep.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "fkeep  "
	$(CP) ../ssids/fkeep.F90 $(OBJ)/fkeep.F90
	cd $(OBJ) ; $(FORTRAN) -o fkeep.o $(FFLAGSOMP) fkeep.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o fkeep.o $(FFLAGSNOMP) fkeep.F90 )
	cd $(OBJ) ; $(RARR) fkeep.o ; $(RM) fkeep.F90 fkeep.o
	$(RRMARFILE) ssids.o
	$(MVMODS)
	@printf '[ OK ]\n'

random.o: $(RLG)(random.o)

$(RLG)(random.o): ../spral/random.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "random  "
	$(CP) ../spral/random.F90 $(OBJ)/random.F90
	cd $(OBJ) ; $(FORTRAN) -o random.o $(FFLAGSOMP) \
           random.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o random.o $(FFLAGSNOMP) \
           random.F90 )
	cd $(OBJ) ; $(RARR) random.o ; \
          $(RM) random.F90 random.o
	$(RRMARFILE) ssids.o
	$(MVMODS)
	@printf '[ OK ]\n'

rutherford_boeing.o: $(RLG)(rutherford_boeing.o)

$(RLG)(rutherford_boeing.o): ../spral/rutherford_boeing.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "rutherford_boeing  "
	$(CP) ../spral/rutherford_boeing.F90 $(OBJ)/rutherford_boeing.F90
	cd $(OBJ) ; $(FORTRAN) -o rutherford_boeing.o $(FFLAGSOMP) \
           rutherford_boeing.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o rutherford_boeing.o $(FFLAGSNOMP) \
           rutherford_boeing.F90 )
	cd $(OBJ) ; $(RARR) rutherford_boeing.o ; \
          $(RM) rutherford_boeing.F90 rutherford_boeing.o
	$(RRMARFILE) ssids.o
	$(MVMODS)
	@printf '[ OK ]\n'

ssids.o: $(RLG)(ssids.o)

$(RLG)(ssids.o): ../ssids/ssids.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "ssids  "
	$(CP) ../ssids/ssids.F90 $(OBJ)/ssids.F90
	cd $(OBJ) ; $(FORTRAN) -o ssids.o $(FFLAGSOMP) ssids.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o ssids.o $(FFLAGSNOMP) ssids.F90 )
	cd $(OBJ) ; $(RARR) ssids.o ; $(RM) ssids.F90 ssids.o
	$(RMARFILE) sls.o
	$(MVMODS)
	@printf '[ OK ]\n'

contrib_free.o: $(RLG)(contrib_free.o)

$(RLG)(contrib_free.o): ../ssids/contrib_free.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "contrib_free  "
	$(CP) ../ssids/contrib_free.F90 $(OBJ)/contrib_free.F90
	cd $(OBJ) ; $(FORTRAN) -o contrib_free.o $(FFLAGSOMP) \
                     contrib_free.F90 \
                 || ( printf ' %-26s' "=> Disabling optimization " ; \
                    $(FORTRAN) -o contrib_free.o $(FFLAGSNOMP) \
                       contrib_free.F90 )
	cd $(OBJ) ; $(RARR) contrib_free.o ; \
          $(RM) contrib_free.F90 contrib_free.o
#	$(RANLIB) $(RLG)
	$(MVMODS)
	@printf '[ OK ]\n'

#  C interface

ssids_ciface.o: $(CLG)(ssids_ciface.o)

$(CLG)(ssids_ciface.o): ../ssids/C/ssids_ciface.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "ssids_ciface"
	$(CP) ../ssids/C/ssids_ciface.F90 $(OBJ)/ssids_ciface.F90
	cd $(OBJ) ; $(FORTRAN) -o ssids_ciface.o $(FFLAGSOMP) \
                      ssids_ciface.F90
	cd $(OBJ) ; $(CARR) ssids_ciface.o ; \
                    $(RM) ssids_ciface.F90 ssids_ciface.o
	$(CRMARFILE) sls_ciface.o
	$(MVMODS)
	@printf '[ OK ]\n'

#  test programs

ssidss.o: $(OBJ)/ssidss.o

$(OBJ)/ssidss.o: ../ssids/ssidss.f90
	@printf ' %-9s %-15s\t\t' "Compiling" "ssidss  "
	$(SED) -f $(SEDS) ../ssids/ssidss.f90 > $(OBJ)/ssidss.f90
	cd $(OBJ) ; $(FORTRAN) -o ssidss.o $(FFLAGSOMP) ssidss.f90
	rm $(OBJ)/*.f90
	@printf '[ OK ]\n'

ssidst.o: $(OBJ)/ssidst.o

$(OBJ)/ssidst.o: ../ssids/ssidst.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "ssidst  "
	$(CP) ../ssids/ssidst.F90 $(OBJ)/ssidst.F90
	cd $(OBJ) ; $(FORTRAN) -o ssidst.o $(FFLAGSS) ssidst.F90
	rm $(OBJ)/*.F90
	@printf '[ OK ]\n'

#  book keeping

clean:
	@printf ' %-9s %-15s\t\t' "Cleaning $(PRECIS) precision spral"
	$(RM) $(LGS) $(LGD) $(OBJ)/ssids*.o $(OBJ)/libgalahad_spral.a \
                            $(MOD)/spral*
	@printf '[ OK ]\n'

cleanall:
	@printf ' %-14s\t\t' \
          "Removing all $(PRECIS) precision object and module files"
	$(RM) -r $(OBJ)/* $(MOD)/*
	@printf '[ OK ]\n'

rmssids:
	@printf ' %-9s %-15s\t\t' "Removing" "ssids from archive "
	$(RRMARFILE) ssids.o
	@printf '[ OK ]\n'
