#  Main body of the installation makefile for the MA48 packages

#  Nick Gould, for GALAHAD production
#  This version: 2022-12-19

#  include standard GALAHAD HSL makefile definitions

include $(GALAHAD)/src/makedefs/hsl_definitions

#  compilation order

MA48S = zd11 $(HLGS)(mc71s.o) $(HLGS)(hsl_zb01s.o) \
        $(HLGS)(hsl_zb01i.o) $(HLGS)(hsl_ma48s.o)
MA48D = zd11 $(HLGD)(mc71d.o) $(HLGD)(hsl_zb01d.o) \
        $(HLGD)(hsl_zb01i.o) $(HLGD)(hsl_ma48d.o)
MA48CS = $(MA48S) $(HCLGS)(hsl_ma48s_ciface.o)
MA48CD = $(MA48D) $(HCLGD)(hsl_ma48d_ciface.o)

#  compilation agenda

ma48: ma48_$(PRECIS)
	@printf ' %-21s\n' "HSL MA48 routines ($(PRECIS) $(SUCC)"
ma48_silent: ma48_$(PRECIS)
ma48_single: $(MA48S)
ma48_double: $(MA48D)

ma48_ciface: ma48_ciface_$(PRECIS)
	@printf ' %-21s\n' "HSL MA48 C routines ($(PRECIS) $(SUCC)"
ma48_ciface_silent: ma48_ciface_$(PRECIS)
ma48_ciface_single: $(MA48CS)
ma48_ciface_double: $(MA48CD)

ma48s = blas $(HLGS)(mc71s.o) \
        $(HLGS)(mc13s.o) $(HLGS)(mc21s.o)
#       $(HLGS)(ma50s.o) $(HLGS)(ma48s.o) # $(HLG)(btf.o)
ma48d = blas $(HLGD)(mc71d.o) \
        $(HLGD)(mc13d.o) $(HLGD)(mc21d.o)
#       $(HLGD)(ma50d.o) $(HLGD)(ma48d.o) # $(HLG)(btf.o)

ma51s = $(ma48s) $(HLGS)(ma51s.o)
ma51d = $(ma48d) $(HLGD)(ma51d.o)

RMA48S = $(OBJS)/ma48ss.o -L$(OBJS) $(LAPACK) $(BLAS)
RMA48D = $(OBJD)/ma48ds.o -L$(OBJD) $(LAPACK) $(BLAS)

RHSLMA48S = $(OBJS)/ma48ss.o -L$(OBJS) $(LAPACK) $(BLAS)
RHSLMA48D = $(OBJD)/ma48ds.o -L$(OBJD) $(LAPACK) $(BLAS)

all: ma48
test: test_ma

ma48ss: $(ma48s) $(OBJS)/ma48ss.o
	$(FORTRAN) $(RUNFFLAGS) $(SPECIAL) -o ./run_ma48 $(RMA48S)
	- ./run_ma48 < ./ma48s.data > ma48s.output 2>&1
	cat ma48s.output
	rm ./run_ma48

ma48ds: $(ma48d) $(OBJD)/ma48ds.o
	$(FORTRAN) $(RUNFFLAGS) $(SPECIAL) -o ./run_ma48 $(RMA48D)
	- ./run_ma48 < ./ma48s.data > ma48s.output 2>&1
	cat ma48s.output
	rm ./run_ma48

#  lapack packages

blas:
	( cd ../../general ; $(MAKE) -f $(GALAHAD)/makefiles/$(VERSION) \
            blas_silent PRECIS=$(PRECIS) PWD=$(PWD)/../../general )

#  hsl packages

zd11:
	( cd ../../zd11 ; $(MAKE) -f $(GALAHAD)/makefiles/$(VERSION) \
            zd11_silent PRECIS=$(PRECIS) PWD=$(PWD)/../../zd11 )

#  main compilations

#  machine constants etc

fd15s.o: $(HLG)(fd15s.o)

$(HLG)(fd15s.o): $(MA48)/fd15s.f
	@printf ' %-9s %-15s\t\t' "Compiling" "fd15s"
	$(CP) $(MA48)/fd15s.f $(OBJ)/fd15s.f90
	cd $(OBJ); $(FORTRAN) $(FFLAGS77) fd15s.f90
	cd $(OBJ); $(HARR) fd15s.o ; $(RM) fd15s.f90 fd15s.o
	@printf '[ OK ]\n'

fd15d.o: $(HLG)(fd15d.o)

$(HLG)(fd15d.o): $(MA48)/fd15d.f
	@printf ' %-9s %-15s\t\t' "Compiling" "fd15d "
	$(CP) $(MA48)/fd15d.f $(OBJ)/fd15d.f90
	cd $(OBJ); $(FORTRAN) $(FFLAGS77) fd15d.f90
	cd $(OBJ); $(HARR) fd15d.o ; $(RM) fd15d.f90 fd15d.o
	@printf '[ OK ]\n'

mc71s.o: $(HLG)(mc71s.o)

$(HLG)(mc71s.o): $(MA48)/mc71s.f
	@printf ' %-9s %-15s\t\t' "Compiling" "mc71s"
	$(CP) $(MA48)/mc71s.f $(OBJ)/mc71s.f90
	cd $(OBJ); $(FORTRAN) $(FFLAGS77) mc71s.f90
	cd $(OBJ); $(HARR) mc71s.o ; $(RM) mc71s.f90 mc71s.o
	@printf '[ OK ]\n'

mc71d.o: $(HLG)(mc71d.o)

$(HLG)(mc71d.o): $(MA48)/mc71d.f
	@printf ' %-9s %-15s\t\t' "Compiling" "mc71d"
	$(CP) $(MA48)/mc71d.f $(OBJ)/mc71d.f90
	cd $(OBJ); $(FORTRAN) $(FFLAGS77) mc71d.f90
	cd $(OBJ); $(HARR) mc71d.o ; $(RM) mc71d.f90 mc71d.o
	@printf '[ OK ]\n'

#  ma48 and its dependencies

#mc13s.o: $(HLG)(mc13s.o)

#$(HLG)(mc13s.o): $(MA48)/mc13s.f
#	@printf ' %-9s %-15s\t\t' "Compiling" "mc13s"
#	$(CP) $(MA48)/mc13s.f $(OBJ)/mc13s.f90
#	cd $(OBJ) ; $(FORTRAN) $(FFLAGS77) mc13s.f90
#	cd $(OBJ) ; $(HARR) mc13s.o ; $(RM) mc13s.f90 mc13s.o
#	@printf '[ OK ]\n'

#mc13d.o: $(HLG)(mc13d.o)

#$(HLG)(mc13d.o): $(MA48)/mc13d.f
#	@printf ' %-9s %-15s\t\t' "Compiling" "mc13d"
#	$(CP) $(MA48)/mc13d.f $(OBJ)/mc13d.f90
#	cd $(OBJ) ; $(FORTRAN) $(FFLAGS77) mc13d.f90
#	cd $(OBJ) ; $(HARR) mc13d.o ; $(RM) mc13d.f90 mc13d.o
#	@printf '[ OK ]\n'

#mc21s.o: $(HLG)(mc21s.o)

#$(HLG)(mc21s.o): $(MA48)/mc21s.f
#	@printf ' %-9s %-15s\t\t' "Compiling" "mc21s"
#	$(CP) $(MA48)/mc21s.f $(OBJ)/mc21s.f90
#	cd $(OBJ) ; $(FORTRAN) $(FFLAGS77) mc21s.f90
#	cd $(OBJ) ; $(HARR) mc21s.o ; $(RM) mc21s.f90 mc21s.o
#	@printf '[ OK ]\n'

#mc21d.o: $(HLG)(mc21d.o)

#$(HLG)(mc21d.o): $(MA48)/mc21d.f
#	@printf ' %-9s %-15s\t\t' "Compiling" "mc21d"
#	$(CP) $(MA48)/mc21d.f $(OBJ)/mc21d.f90
#	cd $(OBJ) ; $(FORTRAN) $(FFLAGS77) mc21d.f90
#	cd $(OBJ) ; $(HARR) mc21d.o ; $(RM) mc21d.f90 mc21d.o
#	@printf '[ OK ]\n'

mc13s.o: $(HLG)(mc13s.o)

$(HLG)(mc13s.o): ../ma33/mc13s.f
	@printf ' %-9s %-15s\t\t' "Compiling" "mc13s"
	$(CP) ../ma33/mc13s.f $(OBJ)/mc13s.f90
	cd $(OBJ) ; $(FORTRAN) $(FFLAGS77) mc13s.f90
	cd $(OBJ) ; $(HARR) mc13s.o ; $(RM) mc13s.f90 mc13s.o
	@printf '[ OK ]\n'

mc13d.o: $(HLG)(mc13d.o)

$(HLG)(mc13d.o): ../ma33/mc13d.f
	@printf ' %-9s %-15s\t\t' "Compiling" "mc13d"
	$(CP) ../ma33/mc13d.f $(OBJ)/mc13d.f90
	cd $(OBJ) ; $(FORTRAN) $(FFLAGS77) mc13d.f90
	cd $(OBJ) ; $(HARR) mc13d.o ; $(RM) mc13d.f90 mc13d.o
	@printf '[ OK ]\n'

mc21s.o: $(HLG)(mc21s.o)

$(HLG)(mc21s.o): ../ma33/mc21s.f
	@printf ' %-9s %-15s\t\t' "Compiling" "mc21s"
	$(CP) ../ma33/mc21s.f $(OBJ)/mc21s.f90
	cd $(OBJ) ; $(FORTRAN) $(FFLAGS77) mc21s.f90
	cd $(OBJ) ; $(HARR) mc21s.o ; $(RM) mc21s.f90 mc21s.o
	@printf '[ OK ]\n'

mc21d.o: $(HLG)(mc21d.o)

$(HLG)(mc21d.o): ../ma33/mc21d.f
	@printf ' %-9s %-15s\t\t' "Compiling" "mc21d"
	$(CP) ../ma33/mc21d.f $(OBJ)/mc21d.f90
	cd $(OBJ) ; $(FORTRAN) $(FFLAGS77) mc21d.f90
	cd $(OBJ) ; $(HARR) mc21d.o ; $(RM) mc21d.f90 mc21d.o
	@printf '[ OK ]\n'

ma50s.o: $(HLG)(ma50s.o)

$(HLG)(ma50s.o): $(MA48)/ma50s.f
	@printf ' %-9s %-15s\t\t' "Compiling" "ma50s"
	$(CP) $(MA48)/ma50s.f $(OBJ)/ma50s.f90
	cd $(OBJ); $(FORTRAN) $(FFLAGS77) ma50s.f90
	cd $(OBJ); $(HARR) ma50s.o ; $(RM) ma50s.f90 ma50s.o
	@printf '[ OK ]\n'

ma50d.o: $(HLG)(ma50d.o)

$(HLG)(ma50d.o): $(MA48)/ma50d.f
	@printf ' %-9s %-15s\t\t' "Compiling" "ma50d "
	$(CP) $(MA48)/ma50d.f $(OBJ)/ma50d.f90
	cd $(OBJ); $(FORTRAN) $(FFLAGS77) ma50d.f90
	cd $(OBJ); $(HARR) ma50d.o ; $(RM) ma50d.f90 ma50d.o
	@printf '[ OK ]\n'

ma48s.o: $(HLG)(ma48s.o)

$(HLG)(ma48s.o): $(MA48)/ma48s.f
	@printf ' %-9s %-15s\t\t' "Compiling" "ma48s"
	$(CP) $(MA48)/ma48s.f $(OBJ)/ma48s.f90
	cd $(OBJ); $(FORTRAN) $(FFLAGS77) ma48s.f90
	cd $(OBJ); $(HARR) ma48s.o ; $(RM) ma48s.f90 ma48s.o
	@printf '[ OK ]\n'

ma48d.o: $(HLG)(ma48d.o)

$(HLG)(ma48d.o): $(MA48)/ma48d.f
	@printf ' %-9s %-15s\t\t' "Compiling" "ma48d "
	$(CP) $(MA48)/ma48d.f $(OBJ)/ma48d.f90
	cd $(OBJ); $(FORTRAN) $(FFLAGS77) ma48d.f90
	cd $(OBJ); $(HARR) ma48d.o ; $(RM) ma48d.f90 ma48d.o
	@printf '[ OK ]\n'

#  hsl_ma48 and its dependencies

hsl_zb01s.o: $(HLG)(hsl_zb01s.o)

$(HLG)(hsl_zb01s.o): $(MA48)/hsl_zb01s.f90
	@printf ' %-9s %-15s\t\t' "Compiling" "hsl_zb01s "
	$(CP) $(MA48)/hsl_zb01s.f90 $(OBJ)/hsl_zb01s.f90
	cd $(OBJ); $(FORTRAN) $(FFLAGS) hsl_zb01s.f90
	cd $(OBJ); $(HARR) hsl_zb01s.o ; $(RM) hsl_zb01s.f90 hsl_zb01s.o
	$(HRMARFILE) hsl_ma48s.o
	$(RANLIB) $(HLG)
	@printf '[ OK ]\n'

hsl_zb01d.o: $(HLG)(hsl_zb01d.o)

$(HLG)(hsl_zb01d.o): $(MA48)/hsl_zb01d.f90
	@printf ' %-9s %-15s\t\t' "Compiling" "hsl_zb01d "
	$(CP) $(MA48)/hsl_zb01d.f90 $(OBJ)/hsl_zb01d.f90
	cd $(OBJ); $(FORTRAN) $(FFLAGS) hsl_zb01d.f90
	cd $(OBJ); $(HARR) hsl_zb01d.o ; $(RM) hsl_zb01d.f90 hsl_zb01d.o
	$(HRMARFILE) hsl_ma48d.o
	$(RANLIB) $(HLG)
	@printf '[ OK ]\n'

hsl_zb01i.o: $(HLG)(hsl_zb01i.o)

$(HLG)(hsl_zb01i.o): $(MA48)/hsl_zb01i.f90
	@printf ' %-9s %-15s\t\t' "Compiling" "hsl_zb01i "
	$(CP) $(MA48)/hsl_zb01i.f90 $(OBJ)/hsl_zb01i.f90
	cd $(OBJ); $(FORTRAN) $(FFLAGS) hsl_zb01i.f90
	cd $(OBJ); $(HARR) hsl_zb01i.o ; $(RM) hsl_zb01i.f90 hsl_zb01i.o
	$(HRMARFILE) hsl_ma48s.o
	$(HRMARFILE) hsl_ma48d.o
	$(RANLIB) $(HLG)
	@printf '[ OK ]\n'

hsl_ma48s.o: $(HLG)(hsl_ma48s.o)

$(HLG)(hsl_ma48s.o): $(MA48)/hsl_ma48s.f90
	@printf ' %-9s %-15s\t\t' "Compiling" "hsl_ma48s"
	$(CP) $(MA48)/hsl_ma48s.f90 $(OBJ)/hsl_ma48s.f90
	cd $(OBJ); $(FORTRAN) $(FFLAGS) hsl_ma48s.f90
	cd $(OBJ); $(HARR) hsl_ma48s.o ; $(RM) hsl_ma48s.f90 hsl_ma48s.o
	$(RMARFILE) sbls.o
	$(RANLIB) $(HLG)
	@printf '[ OK ]\n'

hsl_ma48d.o: $(HLG)(hsl_ma48d.o)

$(HLG)(hsl_ma48d.o): $(MA48)/hsl_ma48d.f90
	@printf ' %-9s %-15s\t\t' "Compiling" "hsl_ma48d "
	$(CP) $(MA48)/hsl_ma48d.f90 $(OBJ)/hsl_ma48d.f90
	cd $(OBJ); $(FORTRAN) $(FFLAGS) hsl_ma48d.f90
	cd $(OBJ); $(HARR) hsl_ma48d.o ; $(RM) hsl_ma48d.f90 hsl_ma48d.o
	$(RMARFILE) sbls.o
	$(RANLIB) $(HLG)
	@printf '[ OK ]\n'

hsl_ma48s_ciface.o: $(HCLG)(hsl_ma48s_ciface.o)

$(HCLG)(hsl_ma48s_ciface.o): $(MA48)/C/hsl_ma48s_ciface.f90
	@printf ' %-9s %-15s\t\t' "Compiling" "hsl_ma48s_ciface"
	$(CP) $(MA48)/C/hsl_ma48s_ciface.f90 $(OBJ)/hsl_ma48s_ciface.f90
	cd $(OBJ) ; $(FORTRAN) -o hsl_ma48s_ciface.o $(FFLAGS) \
                      hsl_ma48s_ciface.f90
	cd $(OBJ) ; $(HCARR) hsl_ma48s_ciface.o ; \
                    $(RM) hsl_ma48s_ciface.f90 hsl_ma48s_ciface.o
	$(CRMARFILE) uls_ciface.o
	$(MVMODS)
	$(RANLIB) $(HCLG)
	@printf '[ OK ]\n'

hsl_ma48d_ciface.o: $(HCLG)(hsl_ma48d_ciface.o)

$(HCLG)(hsl_ma48d_ciface.o): $(MA48)/C/hsl_ma48d_ciface.f90
	@printf ' %-9s %-15s\t\t' "Compiling" "hsl_ma48d_ciface"
	$(CP) $(MA48)/C/hsl_ma48d_ciface.f90 $(OBJ)/hsl_ma48d_ciface.f90
	cd $(OBJ) ; $(FORTRAN) -o hsl_ma48d_ciface.o $(FFLAGS) \
                      hsl_ma48d_ciface.f90
	cd $(OBJ) ; $(HCARR) hsl_ma48d_ciface.o ; \
                    $(RM) hsl_ma48d_ciface.f90 hsl_ma48d_ciface.o
	$(CRMARFILE) uls_ciface.o
	$(MVMODS)
	$(RANLIB) $(HCLG)
	@printf '[ OK ]\n'

#  ma51

ma51s.o: $(HLG)(ma51s.o)

$(HLG)(ma51s.o): $(MA48)/ma51s.f
	@printf ' %-9s %-15s\t\t' "Compiling" "ma51s"
	$(CP) $(MA48)/ma51s.f $(OBJ)/ma51s.f90
	cd $(OBJ); $(FORTRAN) $(FFLAGS77) ma51s.f90
	cd $(OBJ); $(HARR) ma51s.o ; $(RM) ma51s.f90 ma51s.o
	@printf '[ OK ]\n'

ma51d.o: $(HLG)(ma51d.o)

$(HLG)(ma51d.o): $(MA48)/ma51d.f
	@printf ' %-9s %-15s\t\t' "Compiling" "ma51d "
	$(CP) $(MA48)/ma51d.f $(OBJ)/ma51d.f90
	cd $(OBJ); $(FORTRAN) $(FFLAGS77) ma51d.f90
	cd $(OBJ); $(HARR) ma51d.o ; $(RM) ma51d.f90 ma51d.o
	@printf '[ OK ]\n'
# btf

btf.o: $(HLG)(btf.o)

$(HLG)(btf.o): ../btf/btf.f
	@printf ' %-9s %-15s\t\t' "Compiling" "btf "
	$(CP) ../btf/btf.f $(OBJ)/btf.f90
	cd $(OBJ); $(FORTRAN) $(FFLAGS77) btf.f90
	cd $(OBJ); $(HARR) btf.o ; $(RM) btf.f90 btf.o
	@printf '[ OK ]\n'

#  test programs

$(OBJS)/hsl_ma48ss.o: $(MA48)/hsl_ma48ss.f90
	@printf ' %-9s %-15s\t\t' "Compiling" "hsl_ma48ss "
	$(CP) $(MA48)/hsl_ma48ss.f90 $(OBJ)/hsl_ma48ss.f90
	cd $(OBJ); $(FORTRAN) $(FFLAGS) hsl_ma48ss.f90
	@printf '[ OK ]\n'

$(OBJD)/hsl_ma48ds.o: $(MA48)/hsl_ma48ds.f90
	@printf ' %-9s %-15s\t\t' "Compiling" "hsl_ma48ds "
	$(CP) $(MA48)/hsl_ma48ds.f90 $(OBJ)/hsl_ma48ds.f90
	cd $(OBJ); $(FORTRAN) $(FFLAGS) hsl_ma48ds.f90
	@printf '[ OK ]\n'

#  book keeping

clean: cleanall

cleanall:
	@printf ' %-14s\t\t' "Removing all $(PRECIS) precision object and module files"
	$(RM) -r $(OBJ)/* $(MOD)/*
	@printf '[ OK ]\n'
