#  Main body of the installation makefile for the MUMPS stub

#  N. Gould, D. Orban and Ph. L. Toint.
#  This version: 27 III 2021

SHELL = /bin/$(BINSHELL)

ifeq "$(PRECIS)" "single"
 DPREC = -DGALAHAD_SINGLE
else
 DPREC = -DGALAHAD_DOUBLE
endif

#  compiler flags

FFLAGS    = $(BASIC) $(OPTIMIZATION) $(DEBUG) $(MODULES) $(F90) $(USUAL) \
              $(DPREC) -I $(GALAHAD)/include
FFLAGSS   = $(BASIC) $(OPTIMIZATION) $(DEBUG) $(MODULES) $(F90) $(SPECIAL) \
              $(DPREC) -I $(GALAHAD)/include
FFLAGSN   = $(BASIC) $(NOOPTIMIZATION) $(DEBUG) $(MODULES) $(F90) \
              $(DPREC) -I $(GALAHAD)/include
FFLAGS77  = $(BASIC) $(OPTIMIZATION) $(DEBUG) $(MODULES) $(F77) $(USUAL) \
              $(DPREC) -I $(GALAHAD)/include
FFLAGS77S = $(BASIC) $(OPTIMIZATION) $(DEBUG) $(MODULES) $(F77) $(SPECIAL) \
              $(DPREC) -I $(GALAHAD)/include

#  linking and run flags

RUNFFLAGS =    $(OPTIMIZATION) $(DEBUG) $(MODULES)
RUNFFLAGSOMP = $(OPTIMIZATION) $(DEBUG) $(MODULES) $(OPENMP)

#  names of random libraries

LG  = $(OBJ)/libgalahad.a
LGS = $(OBJS)/libgalahad.a
LGD = $(OBJD)/libgalahad.a

BLG  = $(OBJ)/libgalahad_blas.a
BLGS = $(OBJS)/libgalahad_blas.a
BLGD = $(OBJD)/libgalahad_blas.a

LLG  = $(OBJ)/libgalahad_lapack.a
LLGS = $(OBJS)/libgalahad_lapack.a
LLGD = $(OBJD)/libgalahad_lapack.a

DLG  = $(OBJ)/libgalahad_dummy.a
DLGS = $(OBJS)/libgalahad_dummy.a
DLGD = $(OBJD)/libgalahad_dummy.a

MLG  = $(OBJ)/libgalahad_mumps.a
MLGS = $(OBJS)/libgalahad_mumps.a
MLGD = $(OBJD)/libgalahad_mumps.a

#  Libraries used

LIBS = -lgalahad $(MUMPS) $(MPI) $(LAPACK) $(BLAS)
PLIBS = $(LIBS) -lgalahad_problem

#  Archive manipulation strings

ARR = $(AR) $(ARREPFLAGS) $(LG)

MARR = $(AR) $(ARREPFLAGS) $(MLG)
MRMARFILE = $(GALAHAD)/bin/rmarfile $(AR) $(GREP) $(MLG)

#  compilation agenda

BASICZ = blas lapack symbols dummy blas_interface lapack_interface

MUMPSS = $(BASICSZ) $(LGS)(mumps_types.o) $(MLGS)(mumps.o)
MUMPSD = $(BASICSZ) $(LGD)(mumps_types.o) $(MLGD)(mumps.o)

MUMPSDT = $(MUMPSD) $(OBJD)/mumpst.o
MUMPSST = $(MUMPSS) $(OBJS)/mumpst.o

RMUMPSDT = $(OBJD)/mumpst.o -L$(OBJD) $(LIBS)
RMUMPSST = $(OBJS)/mumpst.o -L$(OBJS) $(LIBS)

SUCC = precision version) compiled successfully

#  mumps

mumps_silent: mumps_$(PRECIS)
mumps: mumps_$(PRECIS)
	@printf ' %-21s\n' "GALAHAD: $(MUMPS) ($(PRECIS) $(SUCC)"
mumps_single: $(MUMPSS)
	$(RANLIB) $(MLGS)
mumps_double: $(MUMPSD)
	$(RANLIB) $(MLGD)

#  tests

mumpsdt: $(MUMPSDT)
	echo " Exhaustive test of subroutine interface to mumps"
	cd ../mumps ; $(FORTRAN) $(RUNFFLAGSOMP) $(SPECIAL) -o run_mumps \
                         $(RMUMPSDT)
#	- ../mumps/run_mumps > ../mumps/mumpsdt.output 2>&1
#	cat ../mumps/mumpsdt.output
	- ../mumps/run_mumps
	rm ../mumps/run_mumps

mumpsst: $(MUMPSST)
	echo " Exhaustive test of subroutine interface to mumps"
	cd ../mumps ; $(FORTRAN) $(RUNFFLAGSOMP) $(SPECIAL) -o run_mumps \
                         $(RMUMPSST)
	- ../mumps/run_mumps > ../mumps/mumpst.output 2>&1
	cat ../mumps/mumpst.output
	rm ../mumps/run_mumps

#  blas and lapack generic packages and interfaces

blas:
	( cd ../../general ; $(MAKE) -f $(GALAHAD)/makefiles/$(VERSION) \
            blas_silent PRECIS=$(PRECIS) PWD=$(PWD)/../../general )

lapack:
	( cd ../../general ; $(MAKE) -f $(GALAHAD)/makefiles/$(VERSION) \
            lapack_silent PRECIS=$(PRECIS) PWD=$(PWD)/../../general )

symbols:
	( cd ../../general ; $(MAKE) -f $(GALAHAD)/makefiles/$(VERSION) \
            symbols_silent PRECIS=$(PRECIS) PWD=$(PWD)/../../general )

dummy:
	( cd ../../general ; $(MAKE) -f $(GALAHAD)/makefiles/$(VERSION) \
            dummy_silent PRECIS=$(PRECIS) PWD=$(PWD)/../../general )

blas_interface:
	( cd ../../general ; $(MAKE) -f $(GALAHAD)/makefiles/$(VERSION) \
            blas_interface_silent PRECIS=$(PRECIS) PWD=$(PWD)/../../general )

lapack_interface:
	( cd ../../general ; $(MAKE) -f $(GALAHAD)/makefiles/$(VERSION) \
            lapack_interface_silent PRECIS=$(PRECIS) PWD=$(PWD)/../../general )

#  individual compilations

mumps_types.o: $(LG)(mumps_types.o)

$(LG)(mumps_types.o): ../mumps/mumps_types.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "mumps_types  "
	$(CP) ../mumps/mumps_types.F90 $(OBJ)/mumps_types.F90
	cd $(OBJ); $(FORTRAN) -o mumps_types.o $(FFLAGS) mumps_types.F90 \
                     -I $(MUMPSINCLUDE)
	cd $(OBJ); $(ARR) mumps_types.o ; $(RM) mumps_types.F90 mumps_types.o
	$(MRMARFILE) $(mumps).o
	$(MVMODS)
	@printf '[ OK ]\n'

mumps.o: $(MLG)(mumps.o)

$(MLG)(mumps.o): ../../dum/mumps.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "mumps  "
	$(CP) ../../dum/mumps.F90 $(OBJ)/mumps.F90
	cd $(OBJ); $(FORTRAN) -o mumps.o $(FFLAGS) mumps.F90
	cd $(OBJ); $(MARR) mumps.o ; $(RM) mumps.F90 mumps.o
	$(RANLIB) $(MLG)
	@printf '[ OK ]\n'

#  test programs

mumpst.o: $(OBJ)/mumpst.o

$(OBJ)/mumpst.o: ../mumps/mumpst.F90
	@printf ' %-9s %-15s\t\t' "Compiling" "mumpst  "
	$(CP) ../mumps/mumpst.F90 $(OBJ)/mumpst.F90
	cd $(OBJ) ; $(FORTRAN) -o mumpst.o $(FFLAGSS) mumpst.F90
	@printf '[ OK ]\n'

#  book keeping

clean:
	@printf ' %-9s\t\t' "Cleaning"
	$(RM) $(MLG) $(OBJ)/mumpss.o $(OBJ)/mumpst.o
	@printf '[ OK ]\n'

cleanall:
	@printf ' %-14s\t\t' "Removing all $(PRECIS) precision object and module files"
	$(RM) -r $(OBJ)/* $(MOD)/*
	@printf '[ OK ]\n'
