! THIS VERSION: GALAHAD 2.1 - 22/03/2007 AT 09:00 GMT.
   PROGRAM GALAHAD_QPC_EXAMPLE
   USE GALAHAD_QPC_double         ! double precision version
   IMPLICIT NONE
   INTEGER, PARAMETER :: wp = KIND( 1.0D+0 ) ! set precision
   REAL ( KIND = wp ), PARAMETER :: infinity = 10.0_wp ** 20
   TYPE ( QPT_problem_type ) :: p
   TYPE ( QPC_data_type ) :: data
   TYPE ( QPC_control_type ) :: control
   TYPE ( QPC_inform_type ) :: info
   INTEGER :: s, i
!! INTEGER, PARAMETER :: n = 4, m = 1, h_ne = 4, a_ne = 4
!  INTEGER, PARAMETER :: n = 4, m = 1, h_ne = 2, a_ne = 4
   INTEGER, PARAMETER :: n = 4, m = 0, h_ne = 2, a_ne = 0
   INTEGER, ALLOCATABLE, DIMENSION( : ) :: C_stat, B_stat
! start problem data
   ALLOCATE( p%G( n ), p%X_l( n ), p%X_u( n ) )
   ALLOCATE( p%C( m ), p%C_l( m ), p%C_u( m ) )
   ALLOCATE( p%X( n ), p%Y( m ), p%Z( n ) )
   ALLOCATE( B_stat( n ), C_stat( m ) )
   p%new_problem_structure = .TRUE.           ! new structure
   p%n = n ; p%m = m ; p%f = 1.640825205D+0 ! dimensions & objective constant
  p%X_l = (/ -1.16956150D-02, -1.16956150D-02, 0.0D0, 0.0D0 /)
  p%X_u = (/ 1.16956150D-02, 1.16956150D-02, 1.0D25, 1.0D25 /)
! p%C_l = (/ 1.915028794D-01 /)
! p%C_l = (/ 1.9150287939999999D-01 /)
! p%C_u = (/ 1.915028794D-01 /)
! p%G = 0.0_wp
  p%G = (/ -2.561893991D+0, 0.0D0, 5.0D3, 5.0D3 /)
  p%X = 0.0_wp ; p%Y = 0.0_wp ; p%Z = 0.0_wp ! start from zero
p%X = (/  1.1696D-02,  1.1696D-02,  8.8298D-03,  0.0000D+00 /)
!p%Y(1)=5.0D+3

!  p%Z = (/1.47D+02, 1.5D+02 /)
!  sparse co-ordinate storage format
   CALL SMT_put( p%H%type, 'COORDINATE', s )     ! Specify co-ordinate
!  CALL SMT_put( p%H%type, 'DIAGONAL', s )     ! Specify co-ordinate
   CALL SMT_put( p%A%type, 'COORDINATE', s )     ! storage for H and A
   ALLOCATE( p%H%val( h_ne ), p%H%row( h_ne ), p%H%col( h_ne ) )
!  ALLOCATE( p%H%val( h_ne ) )
   ALLOCATE( p%A%val( a_ne ), p%A%row( a_ne ), p%A%col( a_ne ) )

!  p%H%val = (/ 1.0D0, 1.0D0, 0.0D0, 0.0D0 /)
   p%H%val = (/ 1.0D0, 1.0D0 /)
   p%H%row = (/ 1, 2 /) ; p%H%col = (/ 1, 1 /)
!  p%A%val = (/ 5.6189399062D+0, 1.0D+01, 1.0D0, - 1.0D0 /)
!  p%A%row = (/ 1, 1, 1, 1 /) ;  p%A%col = (/ 1, 2, 3, 4 /)
   p%A%ne = a_ne ; p%H%ne = h_ne

! problem data complete
   CALL QPC_initialize( data, control )       ! Initialize control parameters
   control%infinity = infinity                ! Set infinity
 control%print_level = 1
!control%no_qpa = .TRUE.
 control%QPA_control%print_level = 1
 control%QPB_control%print_level = 1
 control%QPB_control%stop_p = 0.0000001_wp
 control%QPB_control%stop_d = 0.0000001_wp
 control%QPB_control%itref_max = 2
! control%QPB_control%factor = 2
! control%QPB_control%center = .TRUE.
!control%QPB_control%prfeas = 10.0
!control%QPB_control%dufeas = 10.0
!control%QPB_control%LSQP_control%prfeas = control%QPB_control%prfeas
!control%QPB_control%LSQP_control%dufeas = control%QPB_control%dufeas
 control%QPB_control%muzero = 0.3_wp
 control%QPB_control%LSQP_control%muzero = control%QPB_control%muzero

   CALL QPC_solve( p,  C_stat, B_stat, data, control, info )    ! Solve problem
   IF ( info%status == 0 ) THEN               !  Successful return
     WRITE( 6, "( ' QPC: ', I0, ' QPA and ', I0, ' QPB iterations  ', /,       &
    &     ' Optimal objective value =',                                        &
    &       ES12.4, /, ' Optimal solution = ', ( 5ES12.4 ) )" )                &
     info%QPA_inform%iter, info%QPB_inform%iter, info%obj, p%X
   ELSE                                       !  Error returns
     WRITE( 6, "( ' QPC_solve exit status = ', I6 ) " ) info%status
   END IF
write(6, "( ' c_stat ', 4I4 )" )  C_stat
write(6,"(  '   lower        value        upper    multiplier ' )" )
do i = 1, m
write(6, "( 4ES12.4 )" ) p%C_l( i ), p%C( i ), p%C_u( i ), p%Y( i )
end do
   CALL QPC_terminate( data, control, info )  !  delete internal workspace
   END PROGRAM GALAHAD_QPC_EXAMPLE


