Search.setIndex({"docnames": ["arc", "bco", "bgo", "blls", "bqp", "bqpb", "cqp", "cro", "dgo", "dps", "dqp", "eqp", "fdc", "glrt", "gls", "gltr", "go", "index", "l2rt", "lp", "lpa", "lpb", "ls", "lsqp", "lsrt", "lstr", "nls", "psls", "qp", "qpa", "qpb", "reg", "rqs", "sbls", "sils", "sls", "sys", "trb", "trs", "tru", "uco", "ugo", "uls", "wcp"], "filenames": ["arc.rst", "bco.rst", "bgo.rst", "blls.rst", "bqp.rst", "bqpb.rst", "cqp.rst", "cro.rst", "dgo.rst", "dps.rst", "dqp.rst", "eqp.rst", "fdc.rst", "glrt.rst", "gls.rst", "gltr.rst", "go.rst", "index.rst", "l2rt.rst", "lp.rst", "lpa.rst", "lpb.rst", "ls.rst", "lsqp.rst", "lsrt.rst", "lstr.rst", "nls.rst", "psls.rst", "qp.rst", "qpa.rst", "qpb.rst", "reg.rst", "rqs.rst", "sbls.rst", "sils.rst", "sls.rst", "sys.rst", "trb.rst", "trs.rst", "tru.rst", "uco.rst", "ugo.rst", "uls.rst", "wcp.rst"], "titles": ["ARC", "Bound-constrained Optimization", "BGO", "BLLS", "BQP", "BQPB", "CQP", "CRO", "DGO", "DPS", "DQP", "EQP", "FDC", "GLRT", "GLS", "GLTR", "Global Optimization", "GALAHAD Python Interfaces", "L2RT", "Linear Programming", "LPA", "LPB", "Least-Squares", "LSQP", "LSRT", "LSTR", "NLS", "PSLS", "Quadratic Programming", "QPA", "QPB", "Regularization subproblems", "RQS", "SBLS", "SILS", "SLS", "Linear Systems", "TRB", "TRS", "TRU", "Unconstrained Optimization", "UGO", "ULS", "WCP"], "terms": {"The": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "us": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43], "regular": [0, 3, 4, 5, 6, 9, 10, 13, 17, 18, 20, 21, 22, 23, 24, 26, 30, 32, 40, 43], "method": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 43], "find": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 43], "local": [0, 1, 2, 8, 17, 22, 26, 29, 30, 37, 39, 40, 41], "minim": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 18, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 37, 38, 39, 41, 43], "differenti": [0, 2, 8, 26, 37, 39, 41], "object": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 18, 20, 21, 23, 24, 25, 26, 29, 30, 31, 32, 37, 38, 39, 41, 43], "f": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 18, 20, 21, 23, 24, 26, 29, 30, 32, 35, 37, 38, 39, 41, 43], "x": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "mani": [0, 2, 3, 4, 5, 6, 8, 10, 12, 20, 21, 23, 26, 29, 30, 33, 37, 39, 41, 43], "variabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 35, 37, 38, 39, 40, 41, 43], "offer": [0, 2, 3, 4, 5, 6, 8, 10, 20, 21, 23, 26, 30, 37, 39, 43], "choic": [0, 2, 3, 4, 5, 6, 8, 10, 12, 20, 21, 23, 26, 27, 30, 32, 34, 37, 38, 39, 43], "direct": [0, 2, 3, 4, 5, 6, 8, 10, 11, 20, 21, 23, 26, 29, 30, 35, 37, 39, 43], "iter": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "solut": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "kei": [0, 2, 3, 4, 5, 6, 8, 10, 20, 21, 23, 26, 27, 30, 35, 37, 39, 42, 43], "subproblem": [0, 2, 3, 4, 5, 6, 8, 9, 10, 15, 17, 20, 21, 23, 25, 26, 30, 37, 38, 39, 43], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "most": [0, 3, 4, 5, 6, 7, 9, 10, 11, 15, 20, 21, 23, 26, 29, 30, 32, 37, 38, 39, 43], "suitabl": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 37, 38, 39, 43], "larg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 35, 36, 37, 39, 40, 41, 42, 43], "problem": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "first": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 20, 21, 23, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "deriv": [0, 2, 8, 23, 26, 30, 37, 39, 41], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "requir": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "second": [0, 2, 8, 13, 22, 26, 29, 30, 33, 37, 39, 41], "can": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "calcul": [0, 2, 8, 10, 26, 27, 37, 39], "thei": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "exploit": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39], "see": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "section": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "4": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "galahad": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "doc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "pdf": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "brief": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "descript": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "emploi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "other": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "detail": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "symmetr": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 17, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42], "n": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43], "h": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41], "nabla": [0, 2, 8, 26, 37, 39], "2_": [0, 2, 8, 37, 39], "xx": [0, 2, 8, 26, 37, 39], "mai": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43], "present": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 42, 43], "store": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "varieti": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 20, 21, 23, 26, 27, 29, 30, 31, 32, 33, 35, 37, 38, 39, 42, 43], "format": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "But": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39], "crucial": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39], "symmetri": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39], "onli": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 42, 43], "valu": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43], "from": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "lower": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "triangular": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 14, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42], "part": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42], "e": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "those": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "entri": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 42, 43], "lie": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 15, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 43], "below": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "lead": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39], "diagon": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 23, 24, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42], "dens": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 42, 43], "compact": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "row": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 42, 43], "each": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "turn": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "order": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 42, 43], "within": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 37, 38, 39, 41, 42, 43], "an": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43], "appropri": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "real": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 42, 43], "one": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "dimension": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "arrai": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "sinc": [0, 2, 4, 5, 6, 8, 9, 10, 11, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39], "h_": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 26, 29, 30, 32, 33, 37, 38, 39], "ij": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 42, 43], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "j": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "need": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "held": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 43], "In": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "case": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 42, 43], "triangl": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39], "should": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 20, 21, 23, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "compon": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 42, 43], "2": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "h_val": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 26, 29, 30, 32, 33, 37, 38, 39], "hold": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "ji": [0, 2, 4, 5, 6, 8, 9, 10, 11, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39], "spars": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 42, 43], "co": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "ordin": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "nonzero": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "matric": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "For": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "l": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43], "th": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "ne": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "its": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "index": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 17, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "column": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "integ": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 42, 43], "h_row": [0, 2, 4, 5, 6, 8, 9, 10, 11, 26, 29, 30, 32, 33, 37, 38, 39], "h_col": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 26, 29, 30, 32, 33, 37, 38, 39], "respect": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "while": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 20, 21, 23, 24, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "number": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "record": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "h_ne": [0, 2, 4, 5, 6, 8, 9, 10, 11, 26, 29, 30, 32, 33, 37, 38, 39], "note": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "wise": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "again": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "time": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "so": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "appear": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "directli": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "befor": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "h_ptr": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 26, 29, 30, 32, 33, 37, 38, 39], "posit": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 36, 37, 38, 39, 42, 43], "total": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "plu": [], "indic": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "scheme": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "almost": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "alwai": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "less": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "than": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "predecessor": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "initi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "set": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "default": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "option": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "privat": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "data": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "return": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "dict": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "dictionari": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "contain": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "control": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "error": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "int": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "warn": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "diagnost": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "occur": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "stream": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "out": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "gener": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "output": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "print_level": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "level": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "possibl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "line": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "summari": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "everi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 18, 20, 21, 23, 24, 25, 26, 29, 30, 32, 37, 38, 39, 41, 43], "improv": [0, 2, 8, 20, 26, 27, 29, 37, 39, 41], "3": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "increasingli": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "verbos": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "debug": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "start_print": [0, 3, 4, 5, 6, 8, 10, 18, 20, 21, 23, 24, 25, 26, 29, 30, 37, 39, 41, 43], "ani": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43], "print": [0, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 33, 35, 37, 39, 41, 42, 43], "start": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "stop_print": [0, 3, 4, 5, 6, 8, 10, 18, 20, 21, 23, 24, 25, 26, 29, 30, 37, 39, 41, 43], "stop": [0, 3, 4, 5, 6, 8, 9, 10, 13, 15, 18, 20, 21, 23, 24, 25, 26, 29, 30, 32, 35, 37, 38, 39, 41, 42, 43], "print_gap": [0, 3, 4, 8, 10, 18, 24, 25, 26, 37, 39, 41], "between": [0, 3, 4, 5, 6, 7, 8, 10, 18, 20, 21, 23, 24, 25, 26, 29, 30, 37, 39, 41, 43], "maxit": [0, 2, 3, 4, 5, 6, 8, 10, 14, 20, 21, 23, 26, 29, 30, 37, 39, 41, 43], "maximum": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "perform": [0, 2, 3, 4, 5, 6, 7, 8, 10, 18, 20, 21, 23, 24, 25, 26, 29, 30, 32, 34, 35, 37, 38, 39, 41, 42, 43], "alive_unit": [0, 2, 8, 26, 37, 39, 41], "remov": [0, 2, 5, 6, 8, 10, 11, 12, 21, 23, 26, 27, 29, 30, 33, 37, 39, 41, 43], "file": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 15, 18, 20, 21, 23, 24, 25, 26, 29, 30, 32, 35, 37, 38, 39, 41], "alive_fil": [0, 2, 8, 26, 37, 39, 41], "unit": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "termin": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "execut": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 15, 18, 20, 21, 23, 24, 25, 26, 29, 30, 35, 37, 39, 41, 43], "str": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "more_toraldo": [0, 37, 39], "give": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "more": [0, 10, 14, 23, 26, 27, 33, 34, 35, 37, 39, 41], "toraldo": [0, 37, 39], "project": [0, 2, 3, 4, 8, 10, 17, 22, 28, 33, 35, 37, 39], "search": [0, 2, 3, 5, 6, 10, 11, 14, 17, 21, 23, 26, 29, 30, 35, 37, 39, 41, 43], "upon": [0, 14, 34, 37, 39], "cauchi": [0, 10, 37, 39], "point": [0, 2, 5, 6, 7, 8, 10, 11, 17, 19, 20, 21, 23, 26, 28, 29, 30, 35, 37, 39, 41, 43], "anyth": [0, 3, 14, 26, 34, 37, 39], "els": [0, 3, 26, 37, 39], "standard": [0, 29, 37, 39], "add": [0, 37, 39], "cg": [0, 3, 4, 10, 11, 26, 29, 30, 33, 37, 39], "non_monoton": [0, 26, 37, 39], "non": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20, 21, 23, 24, 26, 27, 28, 29, 30, 33, 35, 37, 39, 41, 42], "monoton": [0, 26, 37, 39], "strategi": [0, 2, 10, 26, 29, 37, 39, 43], "histori": [0, 26, 32, 37, 38, 39], "length": [0, 3, 8, 13, 15, 18, 24, 25, 26, 27, 37, 39], "model": [0, 9, 26, 29, 30, 37, 39], "dynam": [0, 26, 35, 37, 39], "yet": [0, 26, 35, 37, 39], "implement": [0, 26, 27, 35, 37, 39], "hessian": [0, 2, 4, 5, 6, 8, 9, 10, 11, 23, 26, 29, 30, 32, 37, 38, 39, 41], "exact": [0, 3, 4, 10, 26, 37, 39], "bare": [0, 26, 37, 39], "ident": [0, 4, 5, 6, 9, 10, 11, 12, 13, 15, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39], "secant": [0, 37, 39], "sparsiti": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "base": [0, 11, 14, 34, 35, 37, 39, 42], "5": [0, 2, 5, 6, 7, 8, 10, 11, 12, 15, 18, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 37, 39, 42, 43], "limit": [0, 2, 3, 4, 5, 6, 8, 10, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 37, 38, 39, 41, 43], "memori": [0, 26, 27, 35, 37, 39], "bfg": [0, 26, 37, 39], "lbfgs_vector": [0, 26, 37, 39], "6": [0, 8, 12, 13, 26, 27, 35, 37, 39], "sr1": [0, 37, 39], "norm": [0, 2, 3, 4, 8, 9, 10, 11, 12, 13, 15, 17, 18, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 37, 38, 39], "defin": [0, 2, 5, 6, 7, 8, 13, 15, 18, 19, 20, 21, 24, 25, 26, 29, 30, 32, 34, 37, 38, 39, 41, 43], "via": [0, 2, 3, 8, 26, 27, 35, 37, 39, 41, 42], "v": [0, 3, 9, 10, 13, 15, 18, 24, 25, 26, 37, 39], "t": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "p": [0, 2, 6, 8, 9, 10, 13, 18, 20, 21, 23, 24, 26, 27, 29, 30, 32, 33, 35, 37, 39], "precondition": [0, 3, 11, 26, 27, 29, 30, 33, 36, 37, 39], "user": [0, 2, 3, 8, 10, 20, 26, 34, 35, 37, 39, 41, 42], "own": [0, 26, 35, 37, 39], "euclidan": [0, 26, 37, 39], "two": [0, 3, 6, 10, 11, 20, 21, 23, 26, 29, 30, 33, 37, 39, 43], "automat": [0, 11, 20, 23, 26, 27, 29, 30, 32, 33, 37, 38, 39, 43], "diag": [0, 3, 26, 27, 33, 37, 39], "max": [0, 3, 4, 8, 9, 10, 11, 13, 15, 18, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 42], "min_diagon": [0, 11, 26, 27, 33, 37, 39], "band": [0, 11, 26, 27, 29, 30, 33, 35, 37, 39], "semi": [0, 4, 5, 6, 7, 11, 26, 27, 29, 30, 33, 35, 37, 39], "bandwidth": [0, 11, 26, 27, 29, 30, 33, 35, 37, 39], "semi_bandwidth": [0, 11, 26, 27, 33, 35, 37, 39], "re": [0, 26, 27, 35, 37, 39], "A": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "full": [0, 7, 8, 11, 12, 14, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 42], "factor": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43], "schnabel": [0, 26, 27, 37, 39], "eskow": [0, 26, 27, 37, 39], "modif": [0, 26, 27, 34, 35, 37, 39], "gmp": [0, 26, 37, 39], "incomplet": [0, 26, 27, 37, 39], "lin": [0, 26, 27, 37, 39], "7": [0, 2, 4, 5, 6, 8, 11, 13, 20, 21, 23, 26, 27, 29, 30, 37, 39, 41], "hsl_mi28": [0, 26, 27, 37, 39], "8": [0, 12, 26, 27, 37, 39], "munskgaard": [0, 26, 27, 37, 39], "9": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 43], "expand": [0, 26, 37, 39, 41], "specifi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "vector": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 42, 43], "max_dxg": [0, 37, 39], "icfs_vector": [0, 27, 37, 39], "mi28_lsiz": [0, 27, 37, 39], "fill": [0, 27, 37, 39, 42], "comput": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 33, 35, 37, 39, 41, 42, 43], "increas": [0, 2, 3, 7, 8, 10, 12, 14, 26, 27, 29, 34, 35, 37, 39, 42, 43], "qualiti": [0, 27, 37, 39], "appli": [0, 7, 12, 13, 15, 27, 33, 35, 37, 39], "treat": [0, 5, 6, 10, 21, 23, 26, 27, 29, 30, 37, 39, 43], "mi28_rsiz": [0, 27, 37, 39], "strictli": [0, 9, 10, 15, 18, 24, 25, 27, 32, 37, 38, 39], "r": [0, 9, 13, 15, 18, 24, 25, 26, 27, 32, 35, 37, 39], "rank": [0, 7, 11, 14, 27, 33, 34, 35, 37, 39, 42, 43], "size": [0, 5, 6, 7, 8, 10, 14, 20, 21, 23, 27, 29, 30, 34, 35, 37, 39, 42], "alloc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "intern": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "thu": [0, 11, 27, 29, 33, 37, 39], "amount": [0, 7, 12, 27, 35, 37, 39, 43], "well": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 19, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "work": [0, 3, 4, 13, 15, 18, 24, 25, 27, 29, 35, 37, 39], "involv": [0, 3, 4, 5, 6, 7, 10, 11, 12, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 33, 35, 37, 39, 43], "depend": [0, 5, 6, 7, 10, 11, 12, 21, 23, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 43], "higher": [0, 27, 37, 39], "choos": [0, 12, 27, 37, 39, 43], "recommend": [0, 27, 30, 37, 39], "advanced_start": [0, 37, 39], "try": [0, 2, 5, 6, 21, 33, 35, 39, 41, 42], "pick": [0, 23, 39], "good": [0, 16, 35, 39, 42], "weight": [0, 3, 5, 6, 9, 10, 11, 13, 18, 20, 21, 23, 24, 26, 29, 32], "variant": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 42, 43], "sartena": [0, 37, 39], "sisc": [0, 37, 39], "18": [0, 2, 3, 4, 5, 6, 8, 10, 13, 15, 18, 20, 21, 23, 24, 25, 26, 29, 30, 37, 39, 41, 43], "1990": [0, 37, 39], "1788": [0, 37, 39], "1803": [0, 37, 39], "stop_g_absolut": [0, 26, 39], "float": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "overal": [0, 5, 6, 21, 23, 26, 30, 37, 39, 41, 43], "converg": [0, 26, 34, 37, 39, 41], "toler": [0, 7, 12, 14, 20, 26, 30, 33, 34, 37, 39, 41], "when": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "gradient": [0, 2, 3, 4, 8, 10, 11, 13, 15, 17, 22, 26, 28, 29, 30, 37, 39, 41], "smaller": [0, 3, 4, 5, 6, 7, 8, 10, 11, 13, 15, 20, 21, 23, 25, 26, 29, 30, 35, 37, 39, 41, 42, 43], "stop_g_rel": [0, 26, 39], "step": [0, 3, 5, 6, 10, 11, 13, 18, 21, 23, 24, 26, 29, 30, 34, 35, 37, 39, 41, 43], "stop_": [0, 26, 37, 39], "stop_pg_rel": [0, 37, 39], "initial_weight": [0, 26], "regularis": 0, "ve": [0, 2, 3, 4, 5, 6, 8, 10, 11, 13, 15, 18, 20, 21, 23, 24, 25, 26, 29, 30, 32, 37, 38, 39, 41, 43], "g_0": [0, 26], "minimum_weight": [0, 26], "minimum": [0, 1, 14, 18, 24, 25, 26, 27, 33, 34, 35, 40, 42], "permit": [0, 3, 4, 7, 10, 11, 12, 23, 26, 27, 29, 30, 33, 35, 37, 39, 42, 43], "reduce_gap": [0, 26], "expert": [0, 26], "paramet": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "suggest": [0, 26], "gould": [0, 1, 16, 17, 19, 22, 26, 27, 28, 31, 36, 40], "porcelli": [0, 26], "toint": [0, 1, 15, 16, 17, 19, 22, 26, 27, 28, 31, 36, 40], "updat": [0, 26, 27, 37, 39], "adapt": [0, 26], "cubic": [0, 26], "algorithm": [0, 5, 6, 21, 23, 26, 30, 43], "ral": [0, 26], "tr": [0, 17, 18, 24, 25, 26, 31, 37, 39], "2011": [0, 26, 35, 42], "007": [0, 26], "rutherford": [0, 26], "appleton": [0, 26], "laboratori": [0, 26], "england": [0, 26], "http": [0, 14, 20, 26, 34, 35, 42], "epub": [0, 26], "stfc": [0, 26], "ac": [0, 14, 20, 26, 34, 35, 42], "uk": [0, 14, 20, 26, 34, 35, 42], "bitstream": [0, 26], "6181": [0, 26], "denot": [0, 26], "beta": [0, 26, 30], "epsilon_chi": [0, 26], "alpha_max": [0, 3, 26], "paper": [0, 26, 35], "tiny_gap": [0, 26], "large_root": [0, 26], "eta_success": [0, 26, 37, 39], "potenti": [0, 5, 6, 10, 20, 21, 23, 26, 37, 39], "accept": [0, 5, 6, 11, 21, 26, 29, 30, 37, 39, 43], "actual": [0, 8, 26, 27, 35, 37, 39, 42], "decreas": [0, 2, 3, 26, 30, 37, 39], "x_new": [0, 26, 37, 39], "larger": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 20, 21, 23, 26, 29, 30, 37, 39, 43], "predict": [0, 26, 35, 37, 39, 42], "quadrat": [0, 4, 5, 6, 7, 9, 10, 11, 13, 15, 17, 20, 21, 23, 24, 25, 26, 29, 30, 31, 32, 37, 38, 39], "rel": [0, 3, 5, 6, 10, 12, 20, 21, 26, 33, 35, 37, 39], "greater": [0, 14, 26, 34, 35, 37, 39, 42], "eta_very_success": [0, 26, 37, 39], "eta_too_success": [0, 26, 37, 39], "eta": 0, "porcel": 0, "weight_decrease_min": [0, 26], "veri": [0, 26, 37, 39], "success": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "reduc": [0, 5, 6, 13, 14, 18, 21, 23, 24, 26, 27, 30, 34, 43], "weight_decreas": [0, 26], "unsuccess": [0, 33], "weight_increas": [0, 26], "weight_increase_max": [0, 26], "delta_1": [0, 26], "delta_2": [0, 26], "delta3": [0, 26], "delta_max": [0, 26], "obj_unbound": [0, 2, 5, 6, 8, 21, 29, 30, 37, 39], "smallest": [0, 2, 5, 6, 8, 9, 10, 12, 13, 15, 18, 21, 23, 24, 25, 30, 35, 37, 39, 43], "take": [0, 2, 8, 22, 37, 39, 40], "mark": [0, 2, 8, 11, 37, 39], "unbound": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 20, 21, 23, 29, 30, 37, 39, 41, 43], "cpu_time_limit": [0, 2, 3, 4, 5, 6, 8, 10, 20, 21, 23, 26, 29, 30, 32, 37, 38, 39, 41, 43], "cpu": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 29, 30, 32, 33, 35, 37, 38, 39, 41, 43], "allow": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "mean": [0, 2, 5, 6, 8, 10, 18, 20, 21, 23, 24, 25, 26, 29, 30, 37, 39, 41, 43], "infinit": [0, 2, 3, 4, 5, 6, 7, 8, 10, 18, 20, 21, 23, 24, 25, 26, 29, 30, 37, 39, 41, 42, 43], "clock_time_limit": [0, 2, 5, 6, 8, 10, 20, 21, 23, 26, 29, 30, 37, 39, 41, 43], "elaps": [0, 2, 5, 6, 8, 10, 18, 20, 21, 23, 24, 25, 26, 29, 30, 37, 39, 41, 43], "clock": [0, 2, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 43], "hessian_avail": [0, 2, 8, 26, 37, 39], "bool": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "avail": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "access": [0, 2, 8, 26, 35, 37, 39, 41], "product": [0, 2, 8, 13, 15, 18, 24, 25, 26, 37, 39], "subproblem_direct": [0, 26, 37, 39], "precondit": [0, 3, 4, 10, 11, 13, 17, 22, 26, 27, 28, 29, 30, 33, 36, 37, 39], "renormalize_weight": [0, 26], "renorm": [0, 26, 37, 39], "account": [0, 26, 37, 39], "chang": [0, 3, 4, 5, 6, 9, 10, 11, 12, 20, 21, 23, 26, 27, 32, 33, 34, 35, 37, 38, 39], "quadratic_ratio_test": 0, "test": [0, 7, 43], "space_crit": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 37, 38, 39, 41, 43], "true": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "effort": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 15, 18, 20, 21, 23, 24, 25, 26, 29, 30, 37, 39, 41, 43], "made": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 37, 38, 39, 41, 43], "littl": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 15, 18, 20, 21, 23, 24, 25, 26, 29, 30, 37, 39, 41, 43], "space": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 43], "result": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "longer": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 15, 18, 20, 21, 23, 24, 25, 26, 29, 30, 37, 39, 41, 43], "deallocate_error_fat": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 37, 38, 39, 41, 43], "pointer": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 15, 18, 20, 21, 23, 24, 25, 26, 29, 30, 37, 39, 41, 43], "dealloc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "otherwis": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 15, 18, 20, 21, 23, 24, 25, 26, 29, 30, 32, 33, 37, 38, 39, 41, 43], "continu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 36, 37, 39, 40, 41, 43], "prefix": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "all": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "string": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "quot": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "g": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "word": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "quto": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "trs_option": [0, 37, 39], "gltr_option": [0, 10, 11, 30, 37, 39], "gltr": [0, 10, 11, 17, 26, 30, 31, 37, 38, 39], "dp": [0, 17, 31], "psls_option": [0, 26, 37, 39], "psl": [0, 17, 26, 36, 37, 39], "lms_option": [0, 37, 39], "lm": [0, 37, 39], "lms_prec_opt": [0, 37, 39], "sec_opt": 0, "sec": 0, "sha_opt": [0, 37, 39], "sha": [0, 37, 39], "load": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 18, 20, 21, 23, 24, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "h_type": [0, 2, 4, 5, 6, 8, 9, 10, 11, 26, 29, 30, 32, 33, 37, 38, 39], "none": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "import": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "prior": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "It": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "coordin": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "sparse_by_row": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "absent": [0, 2, 8, 26, 37, 39], "latter": [0, 2, 8, 20, 33, 37, 39], "upper": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "three": [0, 2, 8, 16, 19, 26, 37, 39], "ndarrai": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "either": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "solv": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43], "eval_f": [0, 2, 8, 37, 39], "eval_g": [0, 2, 8, 37, 39], "eval_h": [0, 2, 8, 26, 37, 39], "approxim": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 18, 20, 21, 23, 24, 25, 26, 29, 30, 32, 33, 35, 37, 38, 39, 41, 43], "given": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "subject": [2, 3, 4, 5, 6, 7, 8, 10, 11, 20, 21, 23, 29, 30, 32, 37], "simpl": [2, 3, 4, 5, 6, 7, 8, 10, 20, 21, 22, 23, 29, 30, 37, 43], "bound": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 37, 38, 39, 41, 43], "trust": [2, 8, 9, 15, 17, 23, 25, 28, 30, 37, 38, 39, 40], "region": [2, 8, 9, 15, 17, 23, 25, 28, 30, 37, 38, 39, 40], "optim": [0, 2, 5, 6, 8, 10, 11, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 41, 43], "callabl": [0, 2, 8, 26, 37, 39, 41], "must": [0, 2, 7, 8, 12, 13, 15, 18, 24, 25, 26, 27, 35, 37, 39, 41, 42], "have": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 37, 38, 39, 41, 43], "signatur": [0, 2, 8, 26, 37, 39, 41], "evalu": [0, 2, 5, 6, 8, 21, 23, 26, 30, 37, 39, 41], "assign": [0, 2, 3, 4, 8, 26, 37, 39, 41], "same": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "pattern": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 43], "global": [0, 2, 8, 9, 13, 15, 17, 18, 24, 25, 29, 30, 31, 32, 37, 38, 39, 41], "after": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "call": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "inform": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "provid": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43], "statu": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "run": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 43], "wa": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 43], "succes": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 43], "messag": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "offend": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 43], "written": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 43], "name": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "alloc_statu": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "bad_alloc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "restrict": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "type": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 43], "relev": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 43], "ha": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "been": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "violat": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 43], "analysi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 43], "phase": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 43], "fail": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 37, 38, 39, 43], "factor_statu": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 37, 38, 39, 43], "10": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 43], "11": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 20, 21, 23, 26, 29, 30, 32, 33, 37, 38, 39, 43], "linear": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43], "equat": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 17, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43], "16": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 29, 30, 32, 37, 38, 39, 43], "ill": [0, 2, 4, 5, 6, 8, 9, 10, 20, 21, 23, 26, 29, 30, 32, 33, 37, 38, 39, 43], "condit": [0, 2, 4, 5, 6, 7, 8, 9, 10, 20, 21, 23, 26, 29, 30, 32, 33, 34, 35, 37, 38, 39, 43], "further": [0, 2, 4, 5, 6, 8, 9, 10, 13, 15, 18, 20, 21, 23, 24, 25, 26, 29, 30, 32, 35, 37, 38, 39, 42, 43], "progress": [0, 2, 4, 5, 6, 7, 8, 9, 10, 12, 20, 21, 23, 26, 29, 30, 32, 33, 37, 38, 39, 43], "imposs": [0, 2, 4, 5, 6, 8, 9, 10, 20, 21, 23, 26, 29, 30, 32, 37, 38, 39, 43], "too": [0, 2, 3, 4, 5, 6, 8, 10, 14, 20, 21, 23, 26, 29, 30, 32, 34, 35, 37, 38, 39, 41, 42, 43], "happen": [0, 2, 3, 4, 5, 6, 8, 10, 13, 20, 21, 23, 26, 29, 30, 32, 37, 38, 39, 41, 43], "small": [0, 2, 3, 4, 5, 6, 8, 10, 14, 20, 21, 23, 26, 27, 29, 30, 32, 34, 35, 37, 38, 39, 41, 42, 43], "also": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "symptomat": [0, 2, 3, 4, 5, 6, 8, 10, 20, 21, 23, 26, 29, 30, 32, 37, 38, 39, 41, 43], "badli": [0, 2, 3, 4, 5, 6, 8, 10, 20, 21, 23, 26, 29, 30, 32, 37, 38, 39, 41, 43], "scale": [0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 16, 17, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "19": [0, 2, 3, 4, 5, 6, 8, 10, 20, 21, 23, 26, 29, 30, 32, 37, 38, 39, 41, 43], "reach": [0, 2, 3, 4, 5, 6, 8, 10, 20, 21, 23, 26, 29, 30, 32, 37, 38, 39, 41, 43], "82": [0, 2, 8, 26, 37, 39], "forc": [0, 2, 8, 26, 37, 39, 41], "solver": [0, 2, 7, 8, 9, 10, 12, 26, 29, 32, 33, 37, 38, 39, 41], "last": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "attempt": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "which": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "ocur": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "cg_iter": [0, 3, 4, 10, 11, 26, 29, 30, 37, 39], "f_eval": [0, 2, 8, 37, 39, 41], "g_eval": [0, 2, 8, 37, 39, 41], "h_eval": [0, 2, 8, 26, 37, 39, 41], "factorization_max": [0, 26, 37, 39], "sub": [0, 8, 26, 27, 33, 37, 39], "factorization_statu": [0, 4, 5, 6, 10, 12, 21, 23, 26, 29, 30, 37, 39, 43], "max_entries_factor": [0, 26, 32, 37, 38, 39], "factorization_integ": [0, 5, 6, 10, 11, 12, 21, 23, 26, 27, 29, 30, 33, 37, 39, 43], "workspac": [0, 5, 6, 10, 11, 12, 14, 21, 23, 26, 29, 30, 33, 34, 35, 37, 39, 42, 43], "factorization_r": [0, 5, 6, 10, 11, 12, 21, 23, 26, 27, 29, 30, 33, 37, 39, 43], "obj": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 15, 18, 20, 21, 23, 24, 26, 29, 30, 32, 37, 38, 39, 43], "best": [0, 2, 5, 6, 8, 10, 11, 20, 21, 23, 26, 29, 30, 37, 39, 43], "estim": [0, 2, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "determin": [0, 2, 5, 6, 8, 10, 11, 12, 21, 23, 26, 29, 30, 33, 35, 37, 39, 43], "norm_g": [0, 26, 39], "current": [0, 1, 3, 4, 5, 6, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 39, 40, 42, 43], "spent": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 43], "preprocess": [0, 5, 6, 10, 11, 20, 21, 23, 26, 29, 30, 33, 37, 39, 43], "analys": [0, 3, 4, 5, 6, 7, 9, 10, 12, 21, 23, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 43], "clock_tot": [0, 2, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 43], "clock_preprocess": [0, 5, 6, 10, 20, 21, 23, 26, 29, 30, 37, 39, 43], "clock_analys": [0, 5, 6, 7, 9, 10, 12, 21, 23, 26, 27, 29, 30, 32, 35, 37, 38, 39, 43], "clock_factor": [0, 5, 6, 7, 9, 10, 11, 12, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 43], "clock_solv": [0, 5, 6, 7, 9, 10, 11, 21, 23, 26, 27, 29, 30, 32, 35, 37, 38, 39, 43], "trs_inform": [0, 37, 39], "gltr_inform": [0, 10, 11, 30, 37, 39], "dps_inform": 0, "psls_inform": [0, 26, 37, 39], "lms_inform": [0, 37, 39], "lms_prec_inform": [0, 37, 39], "sec_inform": 0, "sha_inform": [0, 37, 39], "releas": [1, 16, 17, 19, 22, 27, 28, 31, 36, 40], "date": [1, 16, 17, 19, 22, 28, 31, 36, 40], "07": [1, 16, 40], "march": [1, 16, 17, 19, 22, 28, 31, 36, 40], "2023": [1, 16, 17, 19, 22, 28, 31, 36, 40], "author": [1, 16, 17, 19, 22, 28, 31, 36, 40], "jaroslav": [1, 16, 17, 19, 22, 28, 31, 36, 40], "fowk": [1, 16, 17, 19, 22, 28, 31, 36, 40], "nick": [1, 16, 17, 19, 22, 28, 31, 36, 40], "suit": [1, 9, 16, 17, 19, 22, 28, 31, 32, 36, 38, 40], "open": [1, 16, 17, 19, 22, 28, 31, 36, 40], "sourc": [1, 16, 17, 19, 22, 28, 31, 36, 40], "routin": [1, 16, 17, 19, 22, 26, 28, 31, 33, 35, 36, 40], "singl": [1, 22, 35, 41], "design": [1, 16, 19, 22, 28, 31, 36, 40], "function": [1, 16, 17, 22, 31, 40], "whose": [1, 12, 20, 22, 26, 29, 40], "box": [1, 8, 16, 17, 37], "trb": [1, 2, 8, 17], "smooth": [1, 16, 17, 40], "m": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 40, 42, 43], "orban": [1, 16, 17, 19, 22, 28, 31, 36, 40], "d": [1, 8, 11, 16, 17, 19, 22, 28, 31, 33, 35, 36, 40], "ph": [1, 16, 17, 19, 22, 27, 28, 30, 31, 36, 40], "2003": [1, 16, 17, 19, 22, 28, 31, 36, 40], "librari": [1, 16, 17, 19, 22, 28, 31, 35, 36, 40], "thread": [1, 5, 6, 10, 16, 17, 19, 21, 22, 28, 31, 36, 40], "safe": [1, 16, 17, 19, 22, 28, 31, 36, 40], "fortran": [1, 14, 16, 17, 19, 22, 27, 28, 31, 34, 35, 36, 40, 41, 42], "90": [1, 16, 17, 19, 22, 28, 31, 36, 40], "nonlinear": [1, 16, 17, 19, 22, 27, 28, 31, 36, 40], "acm": [1, 16, 17, 19, 22, 27, 28, 31, 35, 36, 40], "transact": [1, 16, 17, 19, 22, 27, 28, 31, 35, 36, 40], "mathemat": [1, 16, 17, 19, 22, 27, 28, 31, 35, 36, 40], "softwar": [1, 16, 17, 19, 22, 27, 28, 31, 35, 36, 40], "tom": [1, 16, 17, 19, 22, 28, 31, 36, 40], "29": [1, 16, 17, 19, 22, 27, 28, 31, 35, 36, 40, 42], "353": [1, 16, 17, 19, 22, 28, 31, 36, 40], "372": [1, 16, 17, 19, 22, 28, 31, 36, 40], "multi": 2, "u": [2, 3, 8, 14, 18, 24, 25, 29, 34, 35, 37, 41, 42], "here": [2, 8, 33], "found": [2, 5, 6, 8, 9, 10, 11, 12, 13, 15, 18, 21, 23, 24, 25, 29, 30, 32, 33, 35, 37, 38, 42, 43], "themselv": [2, 8, 27, 35, 42], "both": [2, 35, 42], "random": [2, 20, 29], "probe": 2, "locat": 2, "There": 2, "theoret": [2, 8], "guarante": [2, 8, 33], "unless": [2, 27, 41], "sampl": 2, "huge": [2, 3, 4], "realist": 2, "dimens": [2, 8, 11, 27, 29, 30, 32, 33, 35, 38], "nonconvex": [2, 8], "attempts_max": 2, "far": 2, "max_ev": [2, 8], "sampling_strategi": 2, "uniformli": [2, 41], "spread": 2, "latin": 2, "hypercub": 2, "hypercube_discret": 2, "hyper": 2, "cube": 2, "discret": 2, "stategi": 2, "infin": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 20, 21, 23, 29, 30, 35, 37, 43], "modulu": [2, 3, 4, 5, 6, 7, 8, 10, 20, 21, 23, 29, 30, 37, 42, 43], "regard": [2, 3, 4, 5, 6, 7, 8, 10, 11, 20, 21, 23, 29, 30, 37, 43], "random_multistart": 2, "multistart": [2, 8], "oppos": 2, "ugo_opt": [2, 8], "ugo": [2, 8, 16, 17], "lhs_option": 2, "lh": 2, "trb_option": [2, 8], "x_l": [2, 3, 4, 5, 6, 7, 8, 10, 20, 21, 23, 29, 30, 37, 41, 43], "x_u": [2, 3, 4, 5, 6, 7, 8, 10, 20, 21, 23, 29, 30, 37, 41, 43], "norm_pg": [2, 3, 4, 8, 37], "univariate_glob": [2, 8], "univari": [2, 8, 16, 17, 41], "multivariate_loc": [2, 8], "multivari": [2, 8, 16, 17], "clock_univariate_glob": [2, 8], "clock_multivariate_loc": [2, 8], "ugo_inform": [2, 8], "lhs_inform": [2, 8], "trb_inform": [2, 8], "determinist": [8, 16, 17], "partit": 8, "although": [8, 27], "altern": [8, 10, 20, 29, 33, 35, 42], "bgo": [8, 16, 17], "sometim": 8, "prefer": [3, 8, 23, 29, 32, 38], "dictionary_s": 8, "hash": 8, "lipschitz_lower_bound": [8, 41], "constant": [4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 20, 21, 23, 29, 30, 32, 38, 41, 43], "1e": 8, "ensur": [8, 9, 12, 26, 27, 29, 30, 32, 33, 35, 38, 43], "estimt": 8, "lipschitz": [8, 41], "lipschitz_reli": 8, "reliabl": [8, 41], "lipschiz": 8, "largest": [3, 8, 12, 14, 18, 20, 24, 34, 35, 43], "observ": 8, "lipschitz_control": 8, "stop_length": [8, 41], "delta": [8, 9, 15, 25, 38], "origin": [8, 27, 34], "delta_0": 8, "stop_f": 8, "gap": 8, "prune": 8, "cannot": 8, "consider": 8, "perform_local_optim": 8, "impov": 8, "judici": 8, "hash_opt": 8, "91": 8, "tabl": [8, 27, 35, 42], "vertic": 8, "room": 8, "length_ratio": 8, "ratio": [3, 4, 8, 14, 27, 29], "final": [5, 6, 8, 10, 14, 20, 21, 23, 26, 30, 34], "f_gap": 8, "lowest": 8, "why_stop": 8, "why": 8, "did": [8, 13, 15], "wil": 8, "enough": 8, "optima": 16, "least": [3, 5, 6, 10, 11, 13, 15, 16, 17, 18, 21, 23, 24, 25, 26, 30, 31, 43], "them": [3, 16, 41], "over": [5, 6, 16, 17, 21, 23, 29, 30, 41, 43], "interv": [16, 17, 29, 41, 43], "stochast": [16, 17], "dgo": [16, 17], "abov": [3, 4, 5, 6, 7, 10, 13, 15, 17, 20, 21, 23, 29, 30, 35, 42, 43], "modul": 17, "link": [17, 27, 35, 42], "transpar": 17, "underli": 17, "unconstrain": [0, 17, 22, 26, 39], "arc": [3, 5, 6, 10, 13, 17, 21, 40], "tru": [17, 40], "nl": [17, 22], "constrain": [3, 4, 5, 11, 17, 22, 23, 28, 29], "page": 17, "sum": [5, 6, 14, 18, 21, 22, 23, 24, 25, 26], "squar": [3, 13, 15, 17, 24, 25, 26, 31, 42], "mathbf": 29, "frac": [3, 4, 5, 6, 7, 9, 10, 11, 13, 15, 18, 23, 24, 25, 26, 29, 30, 32, 38], "sum_": [5, 6, 10, 11, 23, 26, 29], "w_i": 26, "c_i": [26, 29], "equiv": 26, "c": [3, 6, 7, 10, 11, 13, 20, 21, 23, 26, 27, 29, 30, 33, 41, 43], "2_w": 26, "ldot": [3, 6, 7, 10, 11, 12, 20, 21, 23, 26, 29, 30, 32, 33, 38, 42, 43], "residu": [3, 5, 6, 7, 10, 11, 12, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 33, 35, 42, 43], "nabla_x": 26, "partial": [26, 42], "x_i": [26, 43], "nabla_": 26, "x_j": [5, 6, 10, 11, 23, 26, 29], "signific": 26, "proport": 26, "univers": 26, "zero": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34, 35, 38, 41, 42, 43], "x_k": 26, "trial": 26, "s_k": 26, "sought": 26, "correct": [7, 26, 33], "chosen": [26, 27, 32, 33, 34, 35, 38, 41], "m_k": 26, "": [5, 6, 10, 11, 20, 23, 26, 27, 33, 34, 35, 42], "built": 26, "around": [26, 43], "basic": [7, 17, 26, 27, 28], "t_k": 26, "anoth": 26, "rho": [10, 26], "_r": 26, "term": [4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 20, 21, 23, 26, 29, 30, 32, 38, 43], "sigma_k": 26, "_": [9, 13, 14, 15, 26, 27, 32, 34, 35, 38, 42], "power": [9, 13, 18, 24, 26, 32], "sqrt": [9, 13, 15, 18, 24, 25, 26, 32, 35, 38], "definit": [4, 5, 6, 7, 9, 10, 17, 23, 26, 27, 29, 30, 32, 33, 34, 35, 36, 38], "includ": [10, 20, 26, 29, 35, 42], "prevent": 26, "adjust": [4, 5, 6, 10, 11, 23, 26, 29, 30, 43], "truncat": 26, "taylor": [5, 6, 9, 21, 23, 26, 30, 32, 38], "seri": [5, 6, 21, 23, 26, 27, 30], "reli": [14, 26, 35, 42], "being": [26, 29], "abl": 26, "variou": [26, 28, 29], "differ": 26, "we": [10, 26, 30, 33], "jacobian": [3, 6, 10, 11, 20, 21, 23, 26, 29, 30, 43], "mbox": [3, 6, 7, 10, 20, 21, 23, 26, 29, 30, 43], "y": [5, 6, 7, 10, 11, 20, 21, 23, 26, 29, 30, 32, 33, 35, 38, 42, 43], "ell": 26, "y_": 26, "where": [3, 4, 5, 6, 7, 9, 10, 11, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 42, 43], "c_": 26, "h_1": 26, "h_m": 26, "w": [3, 5, 6, 7, 10, 11, 21, 23, 26], "gauss": 26, "newton": [18, 24, 25, 26, 41], "tensor": 26, "cdot": 26, "shorthand": 26, "scalar": [4, 5, 6, 7, 9, 10, 11, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 38, 43], "h_i": 26, "unsymmetr": [3, 6, 7, 10, 11, 12, 14, 17, 20, 21, 23, 26, 29, 30, 32, 33, 35, 36, 38, 42, 43], "conveni": [3, 6, 10, 11, 20, 21, 23, 26, 29, 30, 32, 33, 35, 38, 42, 43], "input": [3, 4, 5, 6, 7, 10, 11, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 38, 42, 43], "let": 26, "ast": [3, 5, 6, 10, 11, 20, 21, 23, 26, 29, 30, 32, 33, 38, 42, 43], "a_val": [3, 6, 7, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 38, 42, 43], "a_": [3, 6, 7, 10, 11, 12, 14, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34, 35, 38, 42, 43], "leq": [3, 4, 5, 6, 7, 9, 10, 11, 12, 15, 20, 21, 23, 25, 26, 27, 29, 30, 32, 33, 35, 38, 42, 43], "a_row": [3, 6, 10, 11, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 38, 42, 43], "a_col": [3, 6, 7, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 38, 42, 43], "a_n": [3, 6, 10, 11, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 38, 42, 43], "a_ptr": [3, 6, 7, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 38, 42, 43], "onc": [3, 6, 10, 11, 15, 20, 21, 23, 25, 26, 29, 30, 32, 33, 38, 42, 43], "columnsar": [3, 6, 10, 11, 20, 21, 23, 26, 29, 30, 32, 33, 38, 42, 43], "As": [3, 6, 7, 10, 11, 20, 21, 23, 26, 29, 30, 32, 33, 38, 42, 43], "If": [4, 5, 6, 9, 10, 11, 14, 20, 21, 23, 26, 27, 29, 30, 32, 33, 34, 35, 38, 43], "neq": [4, 5, 6, 9, 10, 11, 26, 27, 29, 30, 32, 33, 35, 38, 42], "ii": [4, 5, 6, 9, 10, 11, 26, 27, 29, 30, 32, 33, 35, 38], "purpos": [4, 5, 6, 9, 10, 11, 26, 27, 29, 30, 32, 33, 35, 38], "multipl": [4, 5, 6, 9, 10, 11, 26, 27, 29, 30, 32, 33, 35, 38], "alpha": [4, 5, 6, 9, 10, 11, 26, 27, 29, 30, 32, 33, 35, 38], "suffic": [3, 4, 5, 6, 9, 10, 11, 23, 26, 27, 29, 30, 32, 33, 35, 38], "inner": [3, 4, 5, 6, 9, 10, 11, 13, 15, 18, 20, 21, 23, 24, 25, 26, 29, 30, 32, 38, 43], "jacobian_avail": 26, "geq": [9, 12, 13, 18, 24, 26, 32], "transit": 26, "mode": [15, 26], "tj": 26, "weight_update_strategi": 26, "reset": [3, 4, 5, 6, 10, 11, 13, 14, 18, 20, 21, 23, 24, 25, 26, 29, 30, 34, 35, 41, 42, 43], "imit": 26, "gpt": 26, "stop_c_absolut": 26, "_2": [3, 18, 24, 25, 26], "stop_c_rel": 26, "x_": 26, "satisfi": [7, 9, 15, 20, 25, 26, 29, 32, 37, 38, 43], "g_": [26, 33], "accord": [3, 4, 26], "initial_inner_weight": 26, "gn": 26, "decrea": 26, "unsucc": [26, 37, 39], "switch_to_newton": 26, "newto": 26, "switch": [5, 6, 10, 14, 21, 26, 34, 35, 42], "soon": [3, 4, 5, 6, 10, 21, 23, 26, 35, 42, 43], "magic_step": 26, "magic": 26, "print_obj": 26, "rather": [3, 4, 9, 20, 23, 26, 27, 29, 30, 35, 37, 42], "subproblem_opt": 26, "len": 26, "trim": 26, "enclos": 26, "rqs_option": [0, 26], "rq": [9, 17, 26, 31], "glrt_option": 26, "glrt": [17, 26, 31, 32], "bsc_option": 26, "bsc": 26, "roots_opt": [5, 6, 21, 26], "root": [5, 6, 21, 26], "j_type": 26, "j_ne": 26, "j_row": 26, "j_col": 26, "j_ptr": 26, "p_type": 26, "p_ne": 26, "p_row": 26, "p_col": 26, "p_ptr": 26, "follow": [26, 27, 35, 42, 43], "argument": [20, 26, 35], "sparse_by_column": [3, 6, 10, 11, 20, 21, 23, 26, 29, 30, 32, 33, 38, 42, 43], "dense_by_column": [3, 6, 10, 11, 20, 21, 23, 26, 29, 30, 32, 33, 38, 42, 43], "intent": [26, 29], "ad": [3, 5, 6, 26], "some": [0, 2, 4, 5, 6, 8, 10, 11, 12, 13, 18, 20, 21, 23, 24, 26, 27, 29, 30, 33, 35, 37, 39, 41, 42], "p_": 26, "presum": 26, "eval_c": 26, "eval_j": 26, "eval_hprod": 26, "eval_": 26, "producr": 26, "15": [5, 6, 10, 11, 13, 15, 21, 23, 26, 32, 33, 35, 38], "bad_ev": 26, "suppli": [3, 10, 11, 26], "c_eval": 26, "j_eval": 26, "long": [5, 6, 10, 11, 12, 21, 23, 26, 27, 29, 30, 32, 33, 35, 38, 42, 43], "factorization_averag": 26, "averag": [3, 4, 5, 6, 10, 18, 20, 21, 23, 24, 25, 26, 30, 43], "per": [3, 4, 10, 18, 24, 25, 26, 37], "nls_solv": 26, "norm_c": 26, "_w": [3, 26], "subproblem_inform": 26, "rqs_inform": 26, "glrt_inform": 26, "bsc_inform": 26, "roots_inform": [5, 6, 21, 26], "stop_pg_absolut": 37, "initial_radiu": [30, 37, 39], "radiu": [9, 11, 15, 25, 30, 37, 38, 39], "maximum_radiu": [37, 39], "stop_rel_cg": 37, "reduct": [3, 10, 14, 35, 37, 43], "resuidu": 37, "radius_increas": [37, 39], "radius_reduc": [37, 39], "radius_reduce_max": [37, 39], "retrospective_trust_region": [37, 39], "retrospect": [37, 39], "renormalize_radiu": [37, 39], "two_norm_tr": 37, "ellipsoid": [9, 15, 17, 31, 37, 38], "exact_gcp": 37, "accurate_bqp": 37, "intersect": [37, 38], "feasibl": [4, 5, 6, 7, 10, 11, 19, 20, 21, 23, 29, 30, 37, 43], "prescrib": [33, 37], "accuraci": [3, 4, 5, 6, 10, 20, 21, 23, 30, 33, 37, 43], "much": [5, 6, 9, 10, 11, 21, 23, 29, 30, 32, 33, 37, 38, 43], "cheaper": 37, "cg_maxit": [3, 4, 10, 11, 29, 30, 37], "n_free": 37, "free": [10, 37], "trb_solv": 37, "pair": [3, 4, 5, 6, 10, 20, 21, 23, 30, 32, 38, 40, 43], "aim": [3, 4, 5, 6, 9, 10, 11, 13, 15, 18, 20, 21, 23, 24, 25, 29, 30, 32, 38, 41, 43], "twice": 41, "finit": [19, 41], "subroutin": [3, 41], "advantag": [12, 29, 33, 41], "initial_point": [41, 43], "storage_incr": 41, "incremenet": 41, "storag": [13, 14, 15, 18, 24, 25, 34, 41], "1000": [2, 8, 41], "buffer": 41, "core": [27, 35, 41, 42], "write": [3, 4, 5, 6, 9, 10, 11, 13, 15, 18, 20, 21, 23, 24, 25, 29, 30, 32, 35, 38, 41, 42], "lipschitz_estimate_us": 41, "what": 41, "sort": [33, 41], "contant": 41, "costant": 41, "next_interval_select": 41, "how": [3, 4, 5, 6, 9, 10, 11, 12, 21, 23, 29, 30, 32, 33, 38, 41, 43], "next": 41, "examin": [11, 33, 41], "tradit": 41, "local_improv": 41, "refine_with_newton": 41, "vacin": 41, "small_g_for_newton": 41, "absolut": [5, 6, 9, 10, 11, 12, 21, 23, 29, 30, 33, 41, 43], "small_g": 41, "end": [32, 33, 38, 41], "necessari": [35, 41], "obj_suffici": 41, "global_lipschitz_const": 41, "unknown": [3, 4, 5, 6, 7, 10, 11, 12, 20, 21, 23, 30, 35, 41, 42, 43], "reliability_paramet": 41, "boost": 41, "insuffici": 41, "whether": [5, 6, 10, 12, 21, 23, 29, 30, 35, 41, 43], "second_derivative_avail": 41, "request": [27, 35, 41], "effect": 41, "doubl": 41, "eval_fgh": 41, "addit": [27, 34, 35, 41, 42], "second_derivatives_avail": 41, "40": [9, 20, 27, 35, 41], "tim": 41, "esidu": [], "y_l": [], "h_l": [], "yyi": [], "constraint": [3, 4, 5, 6, 7, 9, 10, 11, 12, 15, 20, 21, 23, 25, 29, 30, 32, 33, 38, 43], "c_l": [3, 5, 6, 7, 10, 20, 21, 23, 29, 30, 43], "c_u": [3, 5, 6, 7, 10, 20, 21, 23, 29, 30, 43], "a_typ": [3, 6, 10, 11, 20, 21, 23, 27, 29, 30, 32, 33, 35, 38, 42, 43], "scaled_ident": [4, 5, 6, 9, 10, 11, 12, 23, 27, 29, 30, 32, 33, 35, 38], "now": [4, 5, 6, 7, 9, 10, 11, 27, 29, 30, 32, 33, 34, 35, 38], "AS": [], "ax": [3, 6, 7, 10, 12, 18, 20, 21, 23, 24, 25, 29, 30, 35, 42, 43], "minu": [3, 4, 5, 6, 7, 10, 20, 21, 23, 29, 30, 43], "primal": [4, 5, 6, 7, 10, 20, 21, 23, 30, 43], "dual": [3, 4, 5, 6, 7, 10, 17, 20, 21, 23, 28, 29, 30, 43], "interior": [5, 6, 7, 17, 19, 20, 21, 23, 28, 30, 43], "infeas_max": [5, 6, 21, 23, 30, 43], "infeas": [3, 4, 5, 6, 10, 11, 20, 21, 23, 29, 30, 43], "reduce_infea": [5, 6, 21, 23, 30], "flag": [5, 6, 14, 21, 23, 29, 30, 34, 43], "muzero_fix": [5, 6, 21, 23], "barrier": [5, 6, 11, 21, 23, 29, 30, 43], "restore_problem": [5, 6, 10, 21, 23, 29, 30, 43], "restor": [5, 6, 10, 21, 23, 29, 30, 43], "noth": [5, 6, 10, 21, 23, 29, 30, 43], "indicator_typ": [5, 6, 21, 23, 30], "activ": [5, 6, 7, 10, 17, 21, 23, 28, 29, 30], "distanc": [5, 6, 10, 11, 21, 23, 30], "nearest": [5, 6, 21, 23, 30, 43], "indicator_p_tol": [5, 6, 21, 23, 30], "indicator_tol_pd": [5, 6, 21, 23, 30], "correspond": [5, 6, 15, 21, 23, 25, 27, 29, 30, 32, 38, 43], "multipli": [5, 6, 7, 9, 10, 11, 13, 14, 15, 18, 20, 21, 23, 24, 25, 29, 30, 32, 34, 38, 43], "indicator_tol_tapia": [5, 6, 21, 23, 30], "previou": [5, 6, 9, 13, 15, 18, 21, 23, 24, 25, 29, 30, 32, 38], "trajectori": [5, 6, 21], "zhang": [5, 6, 21], "zhao": [5, 6, 21], "sun": [5, 6, 21], "ultim": [5, 6, 21, 29], "mix": [5, 6, 21], "series_ord": [5, 6, 21], "puiseux": [5, 6, 21, 23, 30], "fit": [5, 6, 21, 23, 30], "path": [5, 6, 21, 23, 30], "sif_file_devic": [3, 4, 5, 6, 10, 11, 20, 21, 23, 29, 30], "sif": [3, 4, 5, 6, 10, 11, 20, 21, 23, 29, 30], "describ": [3, 4, 5, 6, 10, 11, 12, 20, 21, 23, 27, 29, 30, 33, 35, 42], "qplib_file_devic": [5, 6, 10, 20, 21], "qplib": [5, 6, 10, 20, 21], "stop_abs_p": [5, 6, 10, 21], "stop_rel_p": [5, 6, 10, 21], "stop_abs_d": [5, 6, 10, 21], "stop_rel_d": [5, 6, 10, 21], "stop_abs_c": [5, 6, 10, 21], "complementar": [5, 6, 10, 21, 23, 30, 43], "stop_rel_c": [5, 6, 10, 21], "perturb_h": [5, 6], "prfea": [5, 6, 21, 23, 30, 43], "closer": [3, 4, 5, 6, 10, 20, 21, 23, 27, 30, 43], "dufea": [5, 6, 21, 23, 30, 43], "muzero": [5, 6, 21, 23, 30], "tau": [5, 6, 21], "attach": [5, 6, 21], "compar": [5, 6, 10, 21], "complementa": [5, 6], "assess": [5, 6, 21, 33], "gamma_c": [5, 6, 21], "individu": [5, 6, 21], "gamma_f": [5, 6, 21], "potential_unbound": [5, 6, 21, 23], "side": [5, 6, 21, 23, 27, 33, 35, 42], "analyt": [5, 6, 21, 23, 30], "center": [5, 6, 17, 19, 21, 23, 30, 35, 43], "identical_bounds_tol": [3, 4, 5, 6, 10, 20, 21, 23, 30, 43], "mu_lung": [5, 6, 21], "extrapol": [5, 6, 21, 23, 30], "mu": [5, 6, 18, 21, 23, 30, 43], "indicator_tol_p": [5, 6, 21, 23, 30], "deem": [5, 6, 21, 23, 30], "remove_depend": [5, 6, 10, 11, 21, 23, 30, 33, 43], "equal": [5, 6, 7, 10, 11, 17, 21, 23, 28, 29, 30, 33, 38, 43], "treat_zero_bounds_as_gener": [5, 6, 10, 21, 23, 29, 30, 43], "were": [5, 6, 9, 10, 21, 23, 29, 30, 43], "treat_separable_as_gener": [5, 6], "just_feas": [5, 6, 21, 23, 43], "separ": [5, 6, 17, 23, 27, 28, 35, 42], "structur": [5, 6, 11, 14, 27, 33, 35, 42], "ignor": [5, 6, 32, 35, 38], "getdua": [5, 6, 21, 23], "advanc": [3, 5, 6, 21, 23], "obtain": [5, 6, 13, 14, 15, 18, 20, 21, 23, 24, 25, 27, 30, 33, 34, 35, 42], "decid": [5, 6, 21, 23, 30], "every_ord": [5, 6, 21], "up": [5, 6, 21, 35], "feasol": [5, 6, 21, 23, 30], "perturb": [5, 6, 20, 21, 23, 27, 29, 30, 33, 35, 43], "close": [5, 6, 21, 23, 30], "move": [5, 6, 21, 23, 27, 30], "onto": [5, 6, 21, 23, 30], "balance_initial_complentar": [5, 6, 21, 23], "complemetar": [5, 6, 21, 23, 43], "balanc": [5, 6, 21, 23, 43], "crossov": [5, 6, 7, 17, 21, 28], "cross": [5, 6, 21], "linearli": [5, 6, 10, 11, 12, 17, 21, 23, 29, 30, 36, 43], "independ": [5, 6, 12, 17, 21, 36], "generate_sif_fil": [3, 4, 5, 6, 10, 11, 20, 21, 23, 29, 30], "generate_qplib_fil": [5, 6, 10, 20, 21], "sif_file_nam": [3, 4, 5, 6, 10, 11, 20, 21, 23, 29, 30], "qplib_file_nam": [5, 6, 10, 20, 21], "fdc_control": [], "fdc": [5, 6, 10, 11, 17, 21, 23, 30, 36, 43], "sbls_control": [], "sbl": [3, 4, 5, 6, 7, 9, 10, 11, 17, 21, 23, 30, 32, 36, 38, 43], "fit_control": [], "roots_control": [], "cro_control": [], "cro": [5, 6, 17, 21, 28], "nfact": [5, 6, 10, 21, 23, 29, 30, 43], "nbact": [5, 6, 21, 23, 30], "wast": [5, 6, 21, 23, 30], "dure": [3, 5, 6, 18, 21, 23, 24, 25, 27, 29, 30, 42], "linesearch": [5, 6, 10, 21, 23, 30], "cqp_solv": 6, "primal_infeas": [5, 6, 10, 20, 21], "dual_infeas": [5, 6, 10, 21], "complementary_slack": [5, 6, 10, 21], "complementari": [4, 5, 6, 10, 21], "slack": [4, 5, 6, 10, 21, 43], "init_primal_infeas": [5, 6, 21], "ccqp": 6, "init_dual_infeas": [5, 6, 21], "init_complementary_slack": [5, 6, 21], "logarithm": [5, 6, 21, 23], "log": [5, 6, 21, 23], "boundari": [5, 6, 15, 21, 23, 25, 38, 43], "non_negligible_pivot": [5, 6, 10, 12, 21, 23, 30, 43], "pivot": [5, 6, 10, 11, 12, 14, 15, 20, 21, 23, 27, 29, 30, 33, 34, 35, 42, 43], "judg": [5, 6, 10, 12, 21, 23, 30, 43], "detect": [5, 6, 10, 11, 12, 21, 23, 29, 30, 34, 35, 43], "checkpointsit": [5, 6, 10, 21], "17": [27, 29, 30, 43], "critic": [5, 6, 9, 10, 12, 21, 27, 29, 30, 32, 33, 38], "measur": [5, 6, 10, 21], "fall": [5, 6, 10, 21, 35, 42], "achiev": [5, 6, 10, 21, 27], "checkpointstim": [5, 6, 10, 21], "find_depend": [5, 6, 10, 11, 21, 23, 30, 43], "clock_find_depend": [5, 6, 10, 11, 21, 23, 30, 43], "fdc_inform": [5, 6, 10, 11, 21, 23, 30, 43], "sbls_inform": [3, 4, 5, 6, 7, 10, 11, 21, 23, 30, 43], "fit_inform": [5, 6, 21, 30], "cro_inform": [5, 6, 21], "rpd_inform": [5, 6, 10, 20, 21], "rpd": [5, 6, 10, 20, 21], "09": [], "program": [4, 5, 6, 7, 10, 11, 17, 20, 21, 23, 29, 30], "cqp": [10, 17, 23, 28], "convex": [4, 5, 6, 7, 10, 11, 17, 20, 21, 23, 28, 29, 30], "inconsist": [3, 4, 5, 6, 7, 10, 11, 12, 20, 21, 23, 29, 30, 43], "23": [4, 5, 6, 9, 10, 23, 29, 30, 31, 32, 35, 38], "strict": [4, 5, 6, 9, 10, 23, 27, 29, 30, 32, 35, 38, 43], "postiv": [4, 5, 6, 7, 10], "q": [3, 4, 5, 6, 7, 9, 10, 11, 15, 20, 21, 25, 29, 30, 38], "shift": [5, 6, 10, 11, 18, 23, 43], "w_j": [5, 6, 10, 11, 23], "c_stat": [6, 7, 10, 20, 21, 23, 29, 30, 43], "neg": [3, 4, 5, 6, 7, 10, 13, 15, 18, 20, 21, 23, 24, 25, 27, 29, 30, 34, 35, 43], "_i": [6, 7, 10, 20, 21, 23, 29, 30, 43], "li": [3, 4, 5, 6, 7, 10, 15, 20, 21, 23, 25, 29, 30, 43], "x_stat": [3, 4, 5, 6, 7, 10, 20, 21, 23, 29, 30, 43], "solve_sdlqp": [], "x0": [5, 6, 10, 11, 23], "xstat": [6, 10, 23], "stricli": 10, "dual_starting_point": 10, "simplifi": 10, "costraint": 10, "fix": 10, "max_sc": [10, 29], "schur": [7, 10, 11, 23, 27, 29, 30, 33, 43], "complement": [7, 10, 11, 23, 27, 29, 30, 33, 43], "refactor": [7, 10, 20, 29], "fredholm": [10, 35], "cauchy_onli": 10, "subspac": [10, 13, 15, 18, 24, 25], "taken": [10, 12, 29, 33], "arc_search_maxit": 10, "revert": [3, 4, 10], "explore_optimal_subspac": 10, "investig": 10, "ordinari": 10, "penalti": [10, 29], "enforc": 10, "explicitli": [10, 33], "instead": [10, 14, 29, 38], "explicit": [10, 33, 35], "infeasibili": 10, "stop_cg_rel": [3, 4, 10], "stop_cg_absolut": [3, 4, 10], "cg_zero_curvatur": 10, "threshold": [4, 10, 11, 14, 20, 23, 29, 30, 34, 35, 42, 43], "curvatur": [4, 10, 13, 15], "max_growth": 10, "growth": [10, 20], "without": [10, 12, 20, 27, 33, 34], "initial_perturb": 10, "dlp": 10, "perturbation_reduct": 10, "final_perturb": 10, "factor_optimal_matrix": 10, "augment": [10, 11, 23, 29, 30, 33, 43], "exact_arc_search": [3, 10], "piecewis": [3, 10], "ineaxt": 10, "backtrac": 10, "armijo": 10, "subspace_direct": 10, "fals": [3, 4, 10, 13, 15, 18, 24, 27, 35, 42], "conjug": [3, 10, 11, 29, 30], "subspace_altern": 10, "overrid": 10, "subspace_arc_search": 10, "along": [10, 13, 27], "firstconstraint": 10, "encount": [10, 13, 15, 25], "symmetric_linear_solv": [7, 9, 10, 11, 12, 29, 32, 33, 38], "indefinit": [4, 5, 7, 9, 10, 12, 13, 15, 27, 29, 30, 32, 33, 35, 38], "definite_linear_solv": [10, 11, 27, 29, 32, 33, 38], "unsymmetric_linear_solv": [7, 10, 12, 33], "sls_control": [], "sl": [7, 9, 10, 12, 17, 27, 29, 32, 33, 34, 36, 38], "gltr_control": [], "20": [4, 5, 10, 27, 33, 35], "dqp_solv": 10, "clock_search": 10, "sls_inform": [7, 9, 10, 12, 27, 29, 32, 33, 38], "scu_statu": [7, 10], "scu": [7, 10, 27], "scu_inform": [7, 10], "dqp": [17, 28], "lagrang": [6, 7, 9, 10, 11, 15, 20, 21, 23, 25, 29, 30, 32, 38, 43], "associ": [3, 4, 5, 6, 7, 9, 10, 11, 20, 21, 23, 29, 30, 32, 38, 43], "z": [3, 4, 5, 6, 7, 10, 13, 15, 20, 21, 23, 29, 30, 43], "qpb": [17, 28, 29], "rectangular": [30, 42], "itref_max": [11, 23, 29, 30, 33, 43], "refin": [7, 11, 20, 23, 29, 30, 33, 34, 35, 42, 43], "system": [9, 11, 14, 17, 23, 27, 29, 30, 32, 33, 34, 35, 38, 42, 43], "pssibl": 30, "toth": 30, "track": [23, 30], "central": [23, 30], "never": [23, 30], "major": [23, 29, 30], "path_histori": [23, 30], "max_col": [11, 23, 27, 29, 30, 33, 43], "indmin": [11, 12, 23, 29, 30, 33, 43], "guess": [11, 23, 29, 30, 43], "valmin": [11, 12, 23, 29, 30, 33, 43], "precon": [29, 30], "nsemib": [29, 30], "path_deriv": [23, 30], "fit_ord": [23, 30], "stop_p": [4, 23, 30, 43], "stop_d": [3, 4, 23, 30, 43], "stop_c": [4, 23, 30, 43], "theta_d": 30, "99": 30, "theta_c": 30, "pivot_tol": [11, 12, 23, 29, 30, 33, 43], "document": [11, 23, 27, 29, 30, 35, 42, 43], "pivot_tol_for_depend": [23, 29, 30, 43], "zero_pivot": [11, 12, 23, 29, 30, 33, 43], "inner_stop_rel": [11, 29, 30], "consid": [11, 13, 14, 15, 20, 29, 30, 34, 35, 42], "invers": [11, 13, 15, 29, 30, 32, 38], "inner_stop_absolut": [11, 29, 30], "mu_min": [23, 30], "inner_fraction_opt": [11, 30], "place": [13, 15, 18, 24, 25, 30], "array_syntax_worse_than_do_loop": [23, 29, 30], "f77": [23, 29, 30], "style": [23, 29, 30], "do": [23, 27, 29, 30, 33, 35, 42, 43], "loop": [23, 29, 30], "f90": [23, 29, 30], "syntax": [23, 29, 30], "oper": [14, 23, 29, 30, 34, 35], "lsqp_control": [], "lsqp": [17, 28, 30], "make": [29, 30, 43], "nmod": [29, 30], "modifi": [9, 29, 30], "qpb_solv": [11, 30], "factorizatio": [29, 30], "phase1_tot": 30, "phase1_analys": 30, "init": 30, "phase1_factor": 30, "phase1_solv": 30, "factorizat": [7, 29, 30], "clock_phase1_tot": 30, "clock_phase1_analys": 30, "clock_phase1_factor": 30, "poi": 30, "clock_phase1_solv": 30, "lsqp_inform": 30, "qpa": [17, 28], "guis": 29, "ell_1": 29, "rho_g": 29, "rho_b": 29, "v_g": 29, "v_b": 29, "a_i": [12, 29], "bmc": [], "coeffici": [12, 29, 33], "similarli": 29, "capabl": 29, "howev": [29, 30], "procedur": [29, 30], "weak": [29, 30], "b": [3, 12, 14, 18, 20, 24, 25, 27, 29, 33, 34, 35, 42], "faster": 29, "obsolet": [11, 12, 29, 33, 43], "infeas_check_interv": 29, "check": [12, 29], "infeas_g_improved_by_factor": 29, "infeas_b_improved_by_factor": 29, "full_max_fil": 29, "refer": [27, 29, 35, 42], "itself": [14, 29], "exce": [20, 29, 42], "select": [20, 29, 33, 35, 42], "deletion_strategi": 29, "delet": [27, 29], "lifo": 29, "k": [27, 29, 33, 35], "monitor_residu": 29, "frequenc": [13, 18, 24, 29], "monitor": [14, 29, 34], "cold_start": [3, 4, 29], "cold": 29, "warm": [3, 4, 20, 29], "b_stat": [4, 29], "feas_tol": [20, 29], "increase_rho_g_factor": 29, "solve_qp": [4, 5, 6, 10, 11, 23, 29, 30], "drop": [14, 29, 42], "fac": 29, "increase_rho_b_factor": 29, "solve_within_boun": 29, "boun": 29, "multiplier_tol": 29, "multiplier_t": 29, "outsid": [29, 43], "prob": [3, 4, 29], "solve_within_bound": 29, "quantiti": 29, "stage": 29, "process": [27, 29, 35, 42], "help": 29, "degener": 29, "each_interv": 29, "specif": [29, 35, 42], "parametr": 29, "major_it": 29, "num_g_infea": 29, "num_b_infea": 29, "qpa_solv": 29, "infeas_g": 29, "infeas_b": 29, "merit": 29, "solve_l1qp": 29, "solve_bcl1qp": 29, "len_ulsmin": [11, 33], "ul": [7, 11, 12, 14, 17, 33, 36], "new_a": [11, 32, 33, 38], "new_h": [9, 11, 32, 33, 38], "pivot_tol_for_basi": [11, 33], "ba": 11, "appropriat": 11, "eqp_solv": 11, "max_infeasibility_rel": 11, "believ": 11, "deffici": [11, 33, 43], "typic": 11, "max_infeasibility_absolut": 11, "inner_stop_int": 11, "find_basis_by_transpos": [11, 33], "implicit": [11, 33, 43], "basi": [11, 20, 33], "transpos": [11, 33, 42], "resolve_qp": 11, "resolv": 11, "12": [7, 11, 12, 28, 33], "13": [7, 11, 12, 33], "14": [7, 11, 12, 19, 22], "wrong": [11, 33], "inertia": [11, 33], "unsuit": [11, 33], "unsatisfactori": [7, 11, 12], "25": [11, 18, 24, 25], "cg_iter_int": 11, "solve_int": 11, "eqp": [17, 28], "ratio_cg_vs_sd": [3, 4], "steepest": [3, 4, 20], "descent": [3, 4, 13], "change_max": [3, 4], "dentical_bounds_tol": 4, "zero_curvatur": 4, "exact_arcsearch": 4, "arcsearch": [3, 4], "30": [3, 4, 15], "charact": [3, 4, 35], "solve_bqp": [], "solve_sldqp": [5, 6, 10, 11], "bqp": [17, 28], "bqpb": [17, 28], "bqpb_solv": 5, "galahad_ccqp": 5, "matrix": [13, 14, 15, 17, 18, 24, 25, 31, 34], "special": 23, "modern": [14, 23, 27, 34], "similar": 23, "often": 23, "unus": [23, 34], "tha": [21, 23, 43], "use_corrector": [23, 43], "corrector": [23, 43], "lsqp_solve_qp": 23, "lpb": [17, 19, 20], "solve_lp": [20, 21], "lpb_solv": 21, "bg": 21, "galahad_clpb": 21, "lpa": [17, 19], "simplex": [17, 19, 20], "simpli": 20, "sophist": 20, "interfac": [14, 20, 34, 35, 42], "hsl": [14, 20, 27, 34, 35, 42], "la04": 20, "charg": 20, "recognis": 20, "academ": 20, "www": [20, 35, 42], "rl": [14, 20, 34, 35, 42], "catalogu": 20, "html": [20, 35], "unavail": [20, 27, 35, 42], "enabl": 20, "max_iterative_refin": [20, 35, 42], "min_real_factor_s": [20, 35, 42], "min_integer_factor_s": [20, 35, 42], "random_number_se": 20, "seed": 20, "tol_data": 20, "relative_pivot_toler": [20, 35, 42], "element": 20, "exclud": 20, "candid": 20, "growth_limit": 20, "upat": 20, "zero_toler": [20, 35, 42], "change_toler": 20, "warm_start": 20, "steepest_edg": 20, "edg": 20, "detetrmin": 20, "leav": 20, "la04_job": 20, "job": 20, "la04_job_info": 20, "extra": [13, 15, 18, 20, 24, 25, 27], "unsuccesful": 20, "rinfo": 20, "35": 20, "dlp_solv": [], "galahad_cdlp": [], "wcp": [17, 19], "polyhedr": [17, 19, 43], "inequ": [19, 43], "eight": [28, 31], "kind": 28, "polyhedron": 43, "defini": 43, "identifi": 43, "required_infeas_reduct": 43, "required_infeas_reducti": 43, "perturbation_strategi": 43, "relax": 43, "superlinear": 43, "mu_target": 43, "target": [22, 35, 43], "mu_accept_fract": 43, "complemtari": 43, "z_i": 43, "margin": 43, "mu_increase_factor": 43, "implicit_tol": 43, "perturb_start": 43, "subsequ": [14, 27, 43], "alpha_scal": 43, "reduce_perturb_factor": 43, "pertub": 43, "insufficiently_feas": 43, "reduce_perturb_multipli": 43, "perturbation_smal": 43, "deduc": 43, "balance_initial_complementar": 43, "record_x_statu": 43, "x_statu": 43, "report": [27, 33, 35, 42, 43], "exit": [9, 12, 13, 15, 18, 24, 25, 27, 32, 33, 34, 35, 38, 43], "record_c_statu": 43, "c_statu": 43, "find_wcp": 43, "impact": 43, "c_implicit": 43, "x_implicit": 43, "y_implicit": 43, "z_implicit": 43, "wcp_solv": 43, "mu_final_target_max": 43, "ever": [7, 12], "max_schur_compl": 7, "feasibility_toler": 7, "kkt": 7, "check_io": 7, "fulli": [7, 27, 34, 35], "consist": [7, 12, 35, 42], "refine_solut": 7, "accur": 7, "uls_control": [], "ir_control": [], "ir": [7, 14, 32, 38], "crossover_solut": 7, "m_equal": 7, "These": 7, "resudu": [7, 12], "reorder": [7, 9, 27, 32, 33, 35, 38, 42], "uls_inform": [7, 12, 33], "ir_inform": [7, 32, 38], "half": [], "sigma": [3, 9, 13, 18, 24, 32], "euclidean": [3, 17, 18, 24, 25, 31], "normal": 3, "eval_prec": 3, "revers": [3, 13, 15, 18, 24, 25], "commun": [3, 13, 15, 18, 24, 25], "cgl": 3, "arcsearch_max_step": 3, "infini": 3, "probl": 3, "alpha_initi": 3, "inexact": 3, "alpha_reduct": 3, "arcsearch_acceptance_tol": 3, "stabilisation_weight": 3, "stabilis": 3, "direct_subproblem_solv": 3, "arc_search": 3, "convert_control": [], "convert": 3, "solve_l": 3, "constraind": 3, "convert_inform": 3, "bll": [17, 22], "functionsus": [], "miniz": [17, 31], "oriz": [], "lstr": [17, 31], "commonli": [15, 25, 32, 38], "known": [4, 5, 6, 9, 10, 11, 15, 23, 25, 29, 30, 32, 35, 38, 42], "possibli": [], "relat": 38, "ell_2": [18, 24, 25, 32, 38], "form": [13, 14, 15, 18, 24, 25, 27, 32, 33, 35, 38, 42], "lambda": [18, 24, 25, 32, 38], "left": [9, 27, 32, 33, 35, 38], "begin": [32, 33, 38], "cc": [32, 38], "right": [27, 32, 33, 35, 38, 42], "impos": [32, 38], "effici": [9, 27, 32, 33, 35, 38], "dense_factor": [32, 38], "unchang": [9, 13, 15, 32, 33, 38], "new_m": [32, 38], "max_factor": [32, 38], "impli": [32, 38], "inverse_itmax": [32, 38], "mayb": [32, 38], "hard": [9, 13, 15, 32, 38], "taylor_max_degre": [9, 32, 38], "degre": [9, 32, 35, 38], "initial_multipli": [32, 38], "stop_norm": [9, 32, 38], "stop_absolute_norm": [9, 38], "stop_hard": [32, 38], "bracket": [32, 38], "start_invit_tol": [32, 38], "stop_start_invit_tol": [32, 38], "start_invitmax_tol": [32, 38], "stop_start_invitmax_tol": [32, 38], "equality_problem": [15, 38], "use_initial_multipli": [32, 38], "initialize_approx_eigenvector": [32, 38], "eigenvector": [32, 38], "force_newton": 38, "bigger": [9, 12, 27, 32, 33, 38], "problem_fil": [9, 13, 15, 18, 24, 25, 32, 38], "load_m": [32, 38], "m_type": [32, 38], "m_ne": [32, 38], "m_row": [32, 38], "m_col": [32, 38], "m_ptr": [32, 38], "load_a": [32, 38], "solve_problem": [13, 15, 18, 24, 25, 32, 38], "m_val": [32, 38], "doe": [32, 38], "domin": [27, 32, 38], "len_histori": [32, 38], "_m": [9, 13, 15, 32, 38], "x_norm": [9, 18, 24, 25, 32, 38], "pole": [9, 32, 38], "lambda_1": [9, 32, 38], "eigenvalu": [9, 13, 15, 32, 34, 35, 38], "hard_cas": [9, 13, 15, 32, 38], "assembl": [27, 32, 38], "build": [9, 27, 32, 38], "inolv": [32, 33, 38], "clock_assembl": [27, 32, 38], "affin": [32, 33, 38], "moinim": [9, 13, 15, 18, 24, 25, 32, 38], "obj_regular": [9, 13, 32], "krylov": [13, 15, 18, 24, 25], "apprixim": [], "itmax": [13, 15, 18, 24, 25], "lanczos_itmax": 15, "extra_vector": [13, 15, 18, 24, 25], "ritz_printout_devic": [13, 15], "ritz": [13, 15], "stop_rel": [13, 15, 18, 24, 25, 33], "successfulli": [13, 15, 18, 24, 25, 35], "nor": [], "stop_absolut": [13, 15, 18, 24, 25, 33], "fraction_opt": [13, 15, 18, 24, 25], "f_min": 15, "rminvr_zero": [13, 15], "f_0": [13, 15], "unitm": [13, 15, 18, 24], "steihaug_toint": [15, 25], "thought": 15, "print_ritz_valu": [13, 15], "ritz_file_nam": [13, 15], "load_control": [], "restart": [13, 15, 18, 24, 25], "reentri": [13, 15, 18, 24, 25], "recal": [13, 15, 18, 24, 25], "hx": [13, 15], "exceed": [13, 15, 18, 24, 25], "steihaug": 15, "31": [15, 35, 42], "iter_pass2": [13, 15, 18, 24, 25], "pass": [13, 15, 18, 24, 25], "mnormx": 15, "piv": 15, "latest": 15, "choleski": [15, 27], "lanczo": 15, "tridiagona": 15, "curv": 15, "cuurvatur": 15, "rayleigh": 15, "quotient": 15, "leftmost": [13, 15], "pencil": [13, 15], "negative_curvatur": [13, 15], "stopping_rul": [13, 18, 24], "rule": [13, 18, 24], "stoping_rul": [], "freq": [2, 8, 13, 18, 24], "tri": [13, 18, 24], "min": 13, "stop_rul": [], "f0": 13, "impose_desc": 13, "strinctli": 13, "goe": 13, "xpo_norm": 13, "stope": 13, "sphere": [17, 25, 31], "squaresobject": [], "spheric": 25, "itmin": [18, 24, 25], "itmax_on_boundari": 25, "bitmax": [18, 24, 25], "outer": [18, 24, 25], "tr_": [], "time_limit": [18, 24, 25], "biter": [18, 24, 25], "biter_min": [18, 24, 25], "biter_max": [18, 24, 25], "largestt": 25, "r_norm": [18, 24, 25], "atr_norm": [18, 24, 25], "biter_mean": [18, 24, 25], "lsrt": [17, 31], "l2rt": [17, 31], "NOT": [18, 24], "tb": [18, 24], "construct": [9, 33], "induc": 9, "consequ": 9, "eigen_min": 9, "block": [9, 14, 17, 33, 34, 35, 36, 42], "goldfarb": 9, "version": [9, 27, 35, 42], "solve_tr_problem": 9, "solve_rq_problem": 9, "resolve_tr_problem": 9, "resolve_rq_problem": 9, "mod_1by1": 9, "mod_2by2": 9, "diagonalis": [17, 31], "gaussian": [14, 34, 35, 42], "elimin": [14, 34, 35, 42], "b_": 35, "common": [35, 42], "elsewher": [35, 42], "support": 27, "ma27": [27, 34, 35], "sil": [17, 27, 35, 36], "_ma57": [], "_ma77": [], "hsl_ma86": [27, 35], "hsl_ma87": [27, 35], "hsl_ma97": [27, 35], "ssid": [27, 35], "spral": 35, "mump": [27, 35], "technologi": 35, "pardiso": [27, 35], "intel": 35, "mkl": 35, "pastix": [27, 35], "inria": 35, "wsmp": [27, 35], "ibm": 35, "potr": [27, 35], "sytr": [10, 11, 12, 27, 33, 35], "sbtr": 35, "lapack": [27, 35, 42], "except": [27, 35, 42], "netlib": [27, 35, 42], "code": 14, "dummi": [27, 35, 42], "instanc": [27, 35, 42], "flexibl": [27, 35, 42], "statist": [27, 34, 35], "print_level_solv": [35, 42], "extern": 41, "bit": 35, "architectur": 35, "block_size_kernel": 35, "blocksiz": 35, "kernel": 35, "block_size_elimin": 35, "parallel": [27, 35, 42], "blas_block_size_factor": [35, 42], "blas_block_size_solv": [35, 42], "node_amalgam": 35, "child": 35, "node": 35, "merg": 35, "parent": 35, "fewer": 35, "initial_pool_s": 35, "task": 35, "pool": 35, "max_real_factor_s": 35, "max_integer_factor_s": 35, "max_in_core_stor": 35, "array_increase_factor": [35, 42], "array_decrease_factor": [35, 42], "previous": [14, 34, 35, 42], "pivot_control": [35, 42], "numer": [27, 34, 35], "No": [34, 35], "immedi": [34, 35], "sign": [34, 35], "perm": 35, "amd": [34, 35], "provis": 35, "col": 35, "nest": 35, "disect": 35, "combin": 35, "1x1": 35, "2x2": [34, 35], "profil": [27, 35], "wavefront": [27, 35], "characterist": 34, "full_row_threshold": 35, "regist": [34, 35], "percentag": [34, 35], "100": [13, 34, 35], "defa": 35, "row_search_indefinit": 35, "mc64": [34, 35], "mc77": 35, "scale_maxit": 35, "scale_thresh": 35, "minimum_pivot_toler": 35, "absolute_pivot_toler": [35, 42], "zero_pivot_toler": 35, "sol": [33, 35], "negative_pivot_toler": 35, "static_pivot_toler": 35, "static": [34, 35], "static_level_switch": 35, "consistency_toler": 35, "seek": 35, "acceptable_residual_rel": [35, 42], "ceas": [35, 42], "acceptable_residual_absolut": [35, 42], "multiple_rh": 35, "hand": [27, 33, 35, 42], "generate_matrix_fil": 35, "matrix_file_devic": 35, "matrix_file_nam": 35, "out_of_core_directori": 35, "directori": 35, "out_of_core_integer_factor_fil": 35, "superfil": 35, "out_of_core_real_factor_fil": 35, "out_of_core_real_work_fil": 35, "out_of_core_indefinite_fil": 35, "out_of_core_restart_fil": 35, "faulti": [34, 35, 42], "alegedli": [], "permut": [33, 35, 42], "wai": [35, 42], "32": [35, 42], "33": [35, 42], "alter": [27, 35], "41": 35, "sequenc": 35, "42": 35, "43": 35, "50": [18, 24, 35, 42], "info": [14, 27, 34, 35, 42], "101": 35, "more_info": [35, 42], "failur": [14, 33, 34, 35, 42], "out_of_rang": [27, 35, 42], "rang": [13, 14, 18, 24, 27, 34, 35, 42], "duplic": [14, 27, 34, 35, 42], "missing_diagon": [27, 35], "miss": [27, 35], "allegedli": [27, 35], "max_depth_assembly_tre": 35, "depth": 35, "assembli": [34, 35], "tree": 35, "nodes_assembly_tre": 35, "real_size_desir": 35, "desir": [35, 42], "integer_size_desir": 35, "dat": 35, "real_size_necessari": 35, "integer_size_necessari": 35, "real_size_factor": 35, "integer_size_factor": 35, "entries_in_factor": [35, 42], "max_task_pool_s": 35, "max_front_s": 35, "forecast": [34, 35], "front": [34, 35], "compresses_r": 35, "compress": [14, 34, 35, 42], "compresses_integ": 35, "two_by_two_pivot": 35, "delayed_pivot": 35, "delai": [34, 35], "pivot_sign_chang": 35, "static_pivot": 35, "first_modified_pivot": 35, "negative_eigenvalu": 35, "num_zero": 35, "iterative_refin": [35, 42], "flops_assembli": 35, "anticip": [34, 35], "flops_elimin": 35, "flops_bla": 35, "bla": [14, 34, 35], "largest_modified_pivot": 35, "definiten": 35, "minimum_scaling_factor": 35, "maximum_scaling_factor": 35, "condition_number_1": 35, "esim": 35, "categori": [34, 35], "condition_number_2": 35, "backward_error_1": 35, "backward": [34, 35], "backward_error_2": 35, "forward_error": 35, "forward": [34, 35], "yt": 35, "sils_ainfo": 35, "sils_finfo": 35, "sils_sinfo": 35, "ma57_ainfo": 35, "ma57": [27, 34, 35], "ma57_finfo": 35, "ma57_sinfo": 35, "ma77_inform": [], "ma77": [27, 35], "ma86_inform": [], "ma86": [27, 35], "ma87_inform": [], "ma87": [27, 35], "ma97_inform": [], "ma97": [27, 35], "ssids_inform": 35, "mc61_info": [27, 35], "mc61": [27, 35], "mc61_rinfo": [27, 35], "mc64_inform": [], "mc68_inform": [], "mc68": 35, "mc77_info": 35, "mc77_rinfo": 35, "pardiso_error": 35, "pardiso_iparm": 35, "pardiso_dparm": 35, "mkl_pardiso_error": 35, "mkl_pardiso": [27, 35], "mkl_pardiso_iparm": 35, "wsmp_error": 35, "wsmp_iparm": 35, "wsmp_dparm": 35, "lapack_error": [35, 42], "order_extern": 35, "analyse_extern": 35, "factorize_extern": 35, "pha": 35, "solve_extern": 35, "clock_order_extern": 35, "clock_analyse_extern": 35, "clock_factorize_extern": 35, "clock_solve_extern": 35, "seven": 36, "\u00fcbersolv": [17, 36], "gl": [17, 36, 42], "subset": [17, 27, 36], "parallelis": [27, 35, 42], "multifront": [27, 34, 35], "ye": [27, 35], "openmp": [27, 35], "_ma86": [], "look": [27, 35], "_ma87": [], "_ma97": [], "cuda": [27, 35], "mpi": [27, 35], "pbtr": [27, 35], "hsl_ma57": [27, 35], "hsl_ma77": [27, 35], "produc": [35, 42], "thereof": [27, 35], "introduc": 35, "featur": [27, 35, 42], "archiv": [14, 34, 35, 42], "To": [14, 34, 35, 42], "hsl_mc68": 35, "hsl_mc64": 35, "collect": [35, 42], "franc": 35, "suffici": 35, "org": 35, "oneapi": 35, "math": 35, "onemkl": 35, "com": 35, "content": 35, "en": 35, "develop": 35, "tool": 35, "solverstack": 35, "gitlabpag": 35, "fr": 35, "alphawork": 35, "tech": 35, "dpotrf": 35, "dsytrf": 35, "dpbtrf": 35, "machin": [35, 42], "tune": [35, 42], "meti": 35, "karypi": 35, "lab": 35, "glaro": 35, "dtc": 35, "umn": 35, "edu": 35, "gkhome": 35, "view": 35, "subsect": [], "sls_refer": [], "scientif": [27, 35, 42], "agullo": 35, "amestoi": 35, "buttari": 35, "excel": 35, "guermouch": 35, "rouet": 35, "robust": [27, 35], "awar": 35, "map": 35, "siam": [27, 35], "journal": [27, 35], "38": 35, "2016": 35, "c256": 35, "c279": 35, "duff": 35, "koster": 35, "asynchron": 35, "distribut": 35, "schedul": 35, "applic": 35, "2001": 35, "gupta": 35, "watson": 35, "research": 35, "rc": 35, "21886": 35, "ny": 35, "10598": 35, "usa": 35, "2010": 35, "henon": 35, "ramet": 35, "roman": 35, "high": 35, "28": 35, "2002": 35, "301": 35, "321": 35, "hogg": 35, "ovtchinnikov": 35, "scott": [27, 35], "gpu": 35, "2014": [27, 35], "articl": [27, 35], "o": 35, "schenk": 35, "auml": [], "rtner": [], "futur": 35, "2004": 35, "475": 35, "487": 35, "On": 35, "fast": 35, "electron": 35, "2006": 35, "158": 35, "179": 35, "mumps_error": 35, "mumps_info": 35, "mumps_rinfo": 35, "pastix_info": 35, "class": 42, "gartner": 35, "analyse_matrix": 35, "factorize_matrix": [33, 35, 42], "solve_system": [33, 35, 42], "partial_solve_system": 35, "ldu": [], "mx": 35, "pldup": 35, "pl": 35, "handl": 42, "whenev": 42, "ma28": [14, 42], "hsl_ma48": 42, "getr": 42, "he": 42, "p_r": 42, "p_c": 42, "ma33": [14, 42], "dgetrf": 42, "initial_fill_in_factor": 42, "max_factor_s": 42, "rook": 42, "complet": [27, 42], "pivot_search_limit": 42, "minimum_size_for_btf": 42, "stop_if_singular": 42, "singular": [14, 33, 42], "switch_to_full_code_dens": 42, "densiti": [14, 42], "tran": 42, "26": [27, 42], "entries_drop": 42, "workspace_factor": 42, "structural_rank": 42, "gls_ainfo": 42, "gls_finfo": 42, "gls_sinfo": 42, "ma48_ainfo": 42, "ma48": 42, "ma48_finfo": 42, "ma48_sinfo": 42, "77": [14, 34], "expos": [14, 34], "python": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "extend": [14, 34], "icntl": 34, "lp": [14, 20, 21, 34], "wp": [14, 34], "mp": [14, 34], "sp": 34, "ldiag": [14, 34], "la": [14, 34], "nrlnec": 34, "liw": 34, "nirnec": 34, "maxla": [14, 34], "maxliw": 34, "nemin": 34, "factorblock": 34, "solveblock": 34, "thresh": 34, "mc47": 34, "mc50": 34, "degree": 34, "metis_nodend": 34, "At": 34, "moment": 34, "equival": [17, 33, 34, 36], "chnage": 34, "cntl": 34, "static_toler": [33, 34], "static_level": [33, 34], "ainfo": [14, 34], "nstep": 34, "nrltot": 34, "nirtot": 34, "iw": 34, "nrladu": 34, "niradu": 34, "ncmpa": [14, 34], "oor": [14, 34], "dup": [14, 34], "maxfrt": 34, "stat": [14, 27, 34], "legaci": 34, "opsa": 34, "ops": 34, "finfo": [14, 34], "nebdu": 34, "nrlbdu": 34, "nirbdu": 34, "ncmpbr": 34, "ncmpbi": 34, "ntwo": 34, "neig": 34, "signc": 34, "nstatic": 34, "modstep": 34, "opsb": 34, "maxchang": 34, "smin": 34, "smax": 34, "sinfo": [14, 34], "cond": 34, "cat": [], "eq": 34, "cond2": 34, "berr": 34, "berr2": 34, "btf": 14, "avoid": 14, "factor_block": 14, "solve_bla": 14, "la_int": 14, "markowitz": 14, "fill_in": 14, "switch_ful": 14, "cgce": 14, "diagonal_pivot": 14, "struct_abort": 14, "abort": 14, "len_analys": 14, "len_factor": 14, "struc_rank": 14, "lblock": 14, "sblock": 14, "tblock": 14, "tringular": 14, "op": 14, "size_factor": 14, "k_": 33, "tt": 33, "implicitli": 33, "certain": 33, "recours": 33, "particular": 33, "ccc": [], "21": [17, 27, 33, 36], "a_1": 33, "22": 33, "a_2": 33, "invert": 33, "focu": 33, "everyth": 33, "sai": 33, "maxit_pcg": 33, "new_c": 33, "min_diag": 33, "null": 33, "assum": 33, "allow_singular": 33, "perturb_to_make_definit": 33, "succe": 33, "get_norm_residu": [27, 33], "check_basi": 33, "c_type": 33, "c_ne": 33, "c_row": 33, "c_col": 33, "c_ptr": 33, "c_val": 33, "shuld": 33, "rh": 33, "p_g": 33, "24": [27, 33], "sort_statu": 33, "d_plu": 33, "rank_def": 33, "iter_pcg": 33, "norm_residu": [27, 33], "k_g": 33, "clock_form": 33, "clock_appli": 33, "facil": 27, "conn": 27, "1992": 27, "lancelot": 27, "springer": 27, "verlag": 27, "berlin": 27, "icf": 27, "due": 27, "1999": 27, "45": 27, "tuma": 27, "2013": 27, "mi28": 27, "conjunct": 27, "reid": 27, "engin": 27, "1737": 27, "1755": 27, "remain": [12, 27], "like": [27, 41], "forthcom": 27, "replac": 27, "sensibli": 27, "gill": 27, "murrai": 27, "ponceleon": 27, "saunder": 27, "accommod": 27, "newli": 27, "rpw": 27, "new_structur": 27, "get_semi_bandwidth": 27, "submatrix": 27, "omp": 27, "compliant": 27, "compil": 27, "instal": 27, "mi28_control": [], "form_precondition": 27, "form_subset_precondition": 27, "n_sub": 27, "update_precondition": 27, "n_del": 27, "del": 27, "apply_precondition": 27, "px": 27, "psls_update_precondition": 27, "expect": [27, 35], "80": 27, "analyse_statu": 27, "factorize_statu": 27, "solve_statu": 27, "reordered_semi_bandwidth": 27, "semi_bandwidth_us": 27, "neg1": 27, "neg2": 27, "fctoriz": 27, "fill_in_ratio": 27, "clock_upd": 27, "mi28_info": 27, "under": 12, "b_i": 12, "list": 12, "max_infea": 12, "use_sl": [11, 12], "find_dependent_row": 12, "llinear": 12, "m_depen": 12, "depen": 12, "comstraint": 12, "def": [0, 2, 8, 26, 37, 39, 41], "some_funct": [], "interest": [], "highlight": [], "numpi": [0, 2, 4, 5, 6, 8, 10, 11, 12, 13, 18, 20, 21, 23, 24, 26, 27, 29, 30, 33, 35, 37, 39, 41, 42], "np": [0, 2, 4, 5, 6, 8, 10, 11, 12, 13, 18, 20, 21, 23, 24, 26, 27, 29, 30, 33, 35, 37, 39, 41, 42], "inf": [4, 5, 6, 10, 20, 21, 23, 29, 30, 37], "optimum": [0, 2, 4, 5, 6, 8, 10, 11, 20, 21, 23, 26, 29, 30, 37, 39, 41], "qp": [4, 5, 6, 10, 11, 23, 29, 30], "1st": [5, 6, 10, 11, 29, 30], "x_copi": 10, "copi": 10, "c_copi": 10, "y_copi": 10, "z_copi": 10, "x_stat_copi": 10, "c_stat_copi": 10, "get": [0, 2, 4, 5, 6, 8, 10, 11, 13, 18, 20, 21, 23, 24, 26, 27, 29, 30, 33, 35, 37, 39, 41, 42], "shifted_least_dist": [5, 6, 10, 11], "sldqp": [5, 6, 10, 11], "2nd": [5, 6, 10, 11, 29], "sin": [0, 2, 8, 37, 39, 41], "sy": 2, "mag": [2, 8], "g_copi": [], "ref": [], "count": [], "getrefcount": [], "nb": 41, "userdata": 41, "src": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "test_ugo": 41, "py": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "test_arc": 0, "test_bgo": 2, "test_cqp": 6, "test_dgo": 8, "test_dqp": 10, "test_nl": 26, "test_trb": 37, "test_tru": 39, "sbls_option": [3, 4, 5, 6, 7, 10, 11, 21, 23, 30, 43], "convert_opt": 3, "test_bll": 3, "test_bqp": 4, "fdc_option": [5, 6, 10, 11, 21, 23, 30, 43], "fit_opt": [5, 6, 21, 30], "cro_opt": [5, 6, 21], "test_bqpb": 5, "sls_option": [7, 9, 10, 12, 27, 29, 32, 33, 38], "uls_opt": [7, 12, 33], "ir_opt": [7, 32, 38], "test_cro": 7, "test_dp": 9, "test_eqp": 11, "test_fdc": 12, "load_opt": [13, 15, 18, 24, 25], "test_glrt": 13, "test_gltr": 15, "test_l2rt": 18, "test_lpa": 20, "test_lpb": 21, "test_lsqp": 23, "test_lsrt": 24, "test_lstr": 25, "mi28_opt": 27, "test_psl": 27, "test_qpa": 29, "lsqp_option": 30, "test_qpb": 30, "test_rq": 32, "test_sbl": 33, "test_sl": 35, "test_tr": 38, "test_ul": 42, "test_wcp": 43, "ma77_info": 35, "ma86_info": 35, "ma87_info": 35, "ma97_info": 35, "mc64_info": 35, "mc68_info": 35, "aargh": 41, "xt": 42, "xt_copi": [], "00000001": 33, "accordingli": [4, 5, 6, 10, 11, 23, 29, 30], "n_depen": 12, "empti": [13, 18, 24], "hv": 13, "elif": [13, 18, 24], "l1qp": 29, "bcl1qp": 29, "3rd": 29}, "objects": {"galahad": [[0, 0, 0, "-", "arc"], [2, 0, 0, "-", "bgo"], [3, 0, 0, "-", "blls"], [4, 0, 0, "-", "bqp"], [5, 0, 0, "-", "bqpb"], [6, 0, 0, "-", "cqp"], [7, 0, 0, "-", "cro"], [8, 0, 0, "-", "dgo"], [9, 0, 0, "-", "dps"], [10, 0, 0, "-", "dqp"], [11, 0, 0, "-", "eqp"], [12, 0, 0, "-", "fdc"], [13, 0, 0, "-", "glrt"], [14, 0, 0, "-", "gls"], [15, 0, 0, "-", "gltr"], [18, 0, 0, "-", "l2rt"], [20, 0, 0, "-", "lpa"], [21, 0, 0, "-", "lpb"], [23, 0, 0, "-", "lsqp"], [24, 0, 0, "-", "lsrt"], [25, 0, 0, "-", "lstr"], [26, 0, 0, "-", "nls"], [27, 0, 0, "-", "psls"], [29, 0, 0, "-", "qpa"], [30, 0, 0, "-", "qpb"], [32, 0, 0, "-", "rqs"], [33, 0, 0, "-", "sbls"], [34, 0, 0, "-", "sils"], [35, 0, 0, "-", "sls"], [37, 0, 0, "-", "trb"], [38, 0, 0, "-", "trs"], [39, 0, 0, "-", "tru"], [41, 0, 0, "-", "ugo"], [42, 0, 0, "-", "uls"], [43, 0, 0, "-", "wcp"]], "galahad.arc.arc": [[0, 1, 1, "", "initialize"], [0, 1, 1, "", "load"], [0, 1, 1, "", "solve"], [0, 1, 1, "", "terminate"]], "galahad.bgo.bgo": [[2, 1, 1, "", "initialize"], [2, 1, 1, "", "load"], [2, 1, 1, "", "solve"], [2, 1, 1, "", "terminate"]], "galahad.blls.blls": [[3, 1, 1, "", "initialize"], [3, 1, 1, "", "load"], [3, 1, 1, "", "solve_ls"], [3, 1, 1, "", "terminate"]], "galahad.bqp.bqp": [[4, 1, 1, "", "initialize"], [4, 1, 1, "", "load"], [4, 1, 1, "", "solve_qp"], [4, 1, 1, "", "terminate"]], "galahad.bqpb.bqpb": [[5, 1, 1, "", "initialize"], [5, 1, 1, "", "load"], [5, 1, 1, "", "solve_qp"], [5, 1, 1, "", "solve_sldqp"], [5, 1, 1, "", "terminate"]], "galahad.cqp.cqp": [[6, 1, 1, "", "initialize"], [6, 1, 1, "", "load"], [6, 1, 1, "", "solve_qp"], [6, 1, 1, "", "solve_sldqp"], [6, 1, 1, "", "terminate"]], "galahad.cro.cro": [[7, 1, 1, "", "crossover_solution"], [7, 1, 1, "", "initialize"], [7, 1, 1, "", "terminate"]], "galahad.dgo.dgo": [[8, 2, 1, "", "initialize"], [8, 2, 1, "", "load"], [8, 2, 1, "", "solve"], [8, 2, 1, "", "terminate"]], "galahad.dps.dps": [[9, 1, 1, "", "initialize"], [9, 1, 1, "", "load"], [9, 1, 1, "", "resolve_tr_problem"], [9, 1, 1, "", "solve_tr_problem"], [9, 1, 1, "", "terminate"]], "galahad.dps.rqs": [[9, 1, 1, "", "resolve_rq_problem"], [9, 1, 1, "", "solve_rq_problem"]], "galahad.dqp.dqp": [[10, 1, 1, "", "initialize"], [10, 1, 1, "", "load"], [10, 1, 1, "", "solve_qp"], [10, 1, 1, "", "solve_sldqp"], [10, 1, 1, "", "terminate"]], "galahad.eqp.eqp": [[11, 1, 1, "", "initialize"], [11, 1, 1, "", "load"], [11, 1, 1, "", "resolve_qp"], [11, 1, 1, "", "solve_qp"], [11, 1, 1, "", "solve_sldqp"], [11, 1, 1, "", "terminate"]], "galahad.fdc.fdc": [[12, 1, 1, "", "find_dependent_rows"], [12, 1, 1, "", "initialize"], [12, 1, 1, "", "terminate"]], "galahad.glrt.glrt": [[13, 1, 1, "", "initialize"], [13, 1, 1, "", "load_options"], [13, 1, 1, "", "solve_problem"], [13, 1, 1, "", "terminate"]], "galahad.gls.gls": [[14, 1, 1, "", "finalize"], [14, 1, 1, "", "initialize"]], "galahad.gltr.gltr": [[15, 1, 1, "", "initialize"], [15, 1, 1, "", "load_options"], [15, 1, 1, "", "solve_problem"], [15, 1, 1, "", "terminate"]], "galahad.l2rt.l2rt": [[18, 1, 1, "", "initialize"], [18, 1, 1, "", "load_options"], [18, 1, 1, "", "solve_problem"], [18, 1, 1, "", "terminate"]], "galahad.lpa.lpa": [[20, 1, 1, "", "initialize"], [20, 1, 1, "", "load"], [20, 1, 1, "", "solve_lp"], [20, 1, 1, "", "terminate"]], "galahad.lpb.lpb": [[21, 1, 1, "", "initialize"], [21, 1, 1, "", "load"], [21, 1, 1, "", "solve_lp"], [21, 1, 1, "", "terminate"]], "galahad.lsqp.lsqp": [[23, 1, 1, "", "initialize"], [23, 1, 1, "", "load"], [23, 1, 1, "", "solve_qp"], [23, 1, 1, "", "terminate"]], "galahad.lsrt.lsrt": [[24, 1, 1, "", "initialize"], [24, 1, 1, "", "load_options"], [24, 1, 1, "", "solve_problem"], [24, 1, 1, "", "terminate"]], "galahad.lstr.lstr": [[25, 1, 1, "", "initialize"], [25, 1, 1, "", "load_options"], [25, 1, 1, "", "solve_problem"], [25, 1, 1, "", "terminate"]], "galahad.nls.nls": [[26, 1, 1, "", "initialize"], [26, 1, 1, "", "load"], [26, 1, 1, "", "solve"], [26, 1, 1, "", "terminate"]], "galahad.psls.psls": [[27, 1, 1, "", "apply_preconditioner"], [27, 1, 1, "", "form_preconditioner"], [27, 1, 1, "", "form_subset_preconditioner"], [27, 1, 1, "", "initialize"], [27, 1, 1, "", "load"], [27, 1, 1, "", "terminate"], [27, 1, 1, "", "update_preconditioner"]], "galahad.qpa.qpa": [[29, 1, 1, "", "initialize"], [29, 1, 1, "", "load"], [29, 1, 1, "", "solve_bcl1qp"], [29, 1, 1, "", "solve_l1qp"], [29, 1, 1, "", "solve_qp"], [29, 1, 1, "", "terminate"]], "galahad.qpb.qpb": [[30, 1, 1, "", "initialize"], [30, 1, 1, "", "load"], [30, 1, 1, "", "solve_qp"], [30, 1, 1, "", "terminate"]], "galahad.rqs.rqs": [[32, 1, 1, "", "initialize"], [32, 1, 1, "", "load"], [32, 1, 1, "", "load_a"], [32, 1, 1, "", "load_m"], [32, 1, 1, "", "solve_problem"], [32, 1, 1, "", "terminate"]], "galahad.sbls.sbls": [[33, 1, 1, "", "factorize_matrix"], [33, 1, 1, "", "initialize"], [33, 1, 1, "", "load"], [33, 1, 1, "", "solve_system"], [33, 1, 1, "", "terminate"]], "galahad.sils.sils": [[34, 1, 1, "", "finalize"], [34, 1, 1, "", "initialize"]], "galahad.sls.sls": [[35, 1, 1, "", "analyse_matrix"], [35, 1, 1, "", "factorize_matrix"], [35, 1, 1, "", "initialize"], [35, 1, 1, "", "partial_solve_system"], [35, 1, 1, "", "solve_system"], [35, 1, 1, "", "terminate"]], "galahad.trb.trb": [[37, 1, 1, "", "initialize"], [37, 1, 1, "", "load"], [37, 1, 1, "", "solve"], [37, 1, 1, "", "terminate"]], "galahad.trs.trs": [[38, 1, 1, "", "initialize"], [38, 1, 1, "", "load"], [38, 1, 1, "", "load_a"], [38, 1, 1, "", "load_m"], [38, 1, 1, "", "solve_problem"], [38, 1, 1, "", "terminate"]], "galahad.tru.tru": [[39, 1, 1, "", "initialize"], [39, 1, 1, "", "load"], [39, 1, 1, "", "solve"], [39, 1, 1, "", "terminate"]], "galahad.ugo.ugo": [[41, 1, 1, "", "initialize"], [41, 1, 1, "", "load"], [41, 1, 1, "", "solve"], [41, 1, 1, "", "terminate"]], "galahad.uls.uls": [[42, 1, 1, "", "factorize_matrix"], [42, 1, 1, "", "initialize"], [42, 1, 1, "", "solve_system"], [42, 1, 1, "", "terminate"]], "galahad.wcp.wcp": [[43, 1, 1, "", "find_wcp"], [43, 1, 1, "", "initialize"], [43, 1, 1, "", "load"], [43, 1, 1, "", "terminate"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "method", "Python method"]}, "titleterms": {"arc": 0, "matrix": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "storag": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 23, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43], "function": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43], "bound": 1, "constrain": 1, "optim": [1, 16, 40], "content": [1, 16, 17, 19, 22, 28, 31, 36, 40], "refer": [1, 16, 17, 19, 22, 28, 31, 36, 40], "bgo": 2, "dgo": 8, "global": 16, "galahad": 17, "python": 17, "interfac": 17, "nl": 26, "terminologi": [26, 35, 42], "trb": 37, "tru": 39, "unconstrain": 40, "ugo": 41, "nonlinear": [], "least": 22, "squar": 22, "xxx": [], "cqp": 6, "quadrat": 28, "program": [19, 28], "dqp": 10, "qpb": 30, "qpa": 29, "eqp": 11, "bqp": 4, "bqpb": 5, "lsqp": 23, "linear": [19, 36], "lpb": 21, "lpa": 20, "dlp": [], "wcp": 43, "cro": 7, "bll": 3, "regular": 31, "subproblem": 31, "rq": 32, "tr": 38, "gltr": 15, "lstr": 25, "glrt": 13, "l2rt": 18, "lsrt": 24, "dp": 9, "fdc": 12, "gl": 14, "psl": 27, "sbl": 33, "sil": 34, "sl": 35, "system": 36, "ul": 42, "extern": [27, 35, 42], "solver": [27, 35, 42], "characterist": [27, 35, 42], "support": [35, 42], "method": [27, 35, 42], "exampl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43], "code": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 43]}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Bound-constrained Optimization": [[1, "bound-constrained-optimization"]], "Contents": [[1, null], [16, null], [40, null], [28, null], [19, null], [22, null], [17, null], [36, null], [31, null]], "References": [[1, "references"], [16, "references"], [40, "references"], [28, "references"], [19, "references"], [22, "references"], [17, "references"], [36, "references"], [31, "references"]], "Global Optimization": [[16, "global-optimization"]], "Unconstrained Optimization": [[40, "unconstrained-optimization"]], "Quadratic Programming": [[28, "quadratic-programming"]], "Linear Programming": [[19, "linear-programming"]], "Least-Squares": [[22, "least-squares"]], "GALAHAD Python Interfaces": [[17, "galahad-python-interfaces"]], "Linear Systems": [[36, "linear-systems"]], "Regularization subproblems": [[31, "regularization-subproblems"]], "functions": [[15, "functions"], [25, "functions"], [41, "functions"], [0, "functions"], [2, "functions"], [3, "functions"], [4, "functions"], [5, "functions"], [6, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [11, "functions"], [12, "functions"], [13, "functions"], [14, "functions"], [18, "functions"], [20, "functions"], [21, "functions"], [23, "functions"], [24, "functions"], [26, "functions"], [27, "functions"], [29, "functions"], [30, "functions"], [32, "functions"], [33, "functions"], [34, "functions"], [35, "functions"], [37, "functions"], [38, "functions"], [39, "functions"], [42, "functions"], [43, "functions"]], "example code": [[15, "example-code"], [25, "example-code"], [41, "example-code"], [0, "example-code"], [2, "example-code"], [3, "example-code"], [4, "example-code"], [5, "example-code"], [6, "example-code"], [7, "example-code"], [8, "example-code"], [9, "example-code"], [10, "example-code"], [11, "example-code"], [12, "example-code"], [13, "example-code"], [18, "example-code"], [20, "example-code"], [21, "example-code"], [23, "example-code"], [24, "example-code"], [26, "example-code"], [27, "example-code"], [29, "example-code"], [30, "example-code"], [32, "example-code"], [33, "example-code"], [35, "example-code"], [37, "example-code"], [38, "example-code"], [39, "example-code"], [42, "example-code"], [43, "example-code"]], "GLTR": [[15, "module-galahad.gltr"]], "LSTR": [[25, "module-galahad.lstr"]], "UGO": [[41, "module-galahad.ugo"]], "ARC": [[0, "module-galahad.arc"]], "matrix storage": [[0, "matrix-storage"], [2, "matrix-storage"], [3, "matrix-storage"], [4, "matrix-storage"], [5, "matrix-storage"], [6, "matrix-storage"], [7, "matrix-storage"], [8, "matrix-storage"], [9, "matrix-storage"], [10, "matrix-storage"], [11, "matrix-storage"], [12, "matrix-storage"], [20, "matrix-storage"], [21, "matrix-storage"], [23, "matrix-storage"], [26, "matrix-storage"], [27, "matrix-storage"], [29, "matrix-storage"], [30, "matrix-storage"], [32, "matrix-storage"], [33, "matrix-storage"], [35, "matrix-storage"], [37, "matrix-storage"], [38, "matrix-storage"], [39, "matrix-storage"], [42, "matrix-storage"], [43, "matrix-storage"]], "BGO": [[2, "module-galahad.bgo"]], "BLLS": [[3, "module-galahad.blls"]], "BQP": [[4, "module-galahad.bqp"]], "BQPB": [[5, "module-galahad.bqpb"]], "CQP": [[6, "module-galahad.cqp"]], "CRO": [[7, "module-galahad.cro"]], "DGO": [[8, "module-galahad.dgo"]], "DPS": [[9, "module-galahad.dps"]], "DQP": [[10, "module-galahad.dqp"]], "EQP": [[11, "module-galahad.eqp"]], "FDC": [[12, "module-galahad.fdc"]], "GLRT": [[13, "module-galahad.glrt"]], "GLS": [[14, "module-galahad.gls"]], "L2RT": [[18, "module-galahad.l2rt"]], "LPA": [[20, "module-galahad.lpa"]], "LPB": [[21, "module-galahad.lpb"]], "LSQP": [[23, "module-galahad.lsqp"]], "LSRT": [[24, "module-galahad.lsrt"]], "NLS": [[26, "module-galahad.nls"]], "terminology": [[26, "terminology"], [35, "terminology"], [42, "terminology"]], "PSLS": [[27, "module-galahad.psls"]], "method": [[27, "method"], [35, "method"], [42, "method"]], "External solver characteristics": [[27, "id1"], [35, "id1"], [42, "id1"]], "QPA": [[29, "module-galahad.qpa"]], "QPB": [[30, "module-galahad.qpb"]], "RQS": [[32, "module-galahad.rqs"]], "SBLS": [[33, "module-galahad.sbls"]], "SILS": [[34, "module-galahad.sils"]], "SLS": [[35, "module-galahad.sls"]], "supported solvers": [[35, "supported-solvers"], [42, "supported-solvers"]], "TRB": [[37, "module-galahad.trb"]], "TRS": [[38, "module-galahad.trs"]], "TRU": [[39, "module-galahad.tru"]], "ULS": [[42, "module-galahad.uls"]], "WCP": [[43, "module-galahad.wcp"]]}, "indexentries": {"arc.initialize() (in module galahad.arc)": [[0, "galahad.arc.arc.initialize"]], "arc.load() (in module galahad.arc)": [[0, "galahad.arc.arc.load"]], "arc.solve() (in module galahad.arc)": [[0, "galahad.arc.arc.solve"]], "arc.terminate() (in module galahad.arc)": [[0, "galahad.arc.arc.terminate"]], "galahad.arc": [[0, "module-galahad.arc"]], "module": [[0, "module-galahad.arc"], [2, "module-galahad.bgo"], [3, "module-galahad.blls"], [4, "module-galahad.bqp"], [5, "module-galahad.bqpb"], [6, "module-galahad.cqp"], [7, "module-galahad.cro"], [8, "module-galahad.dgo"], [9, "module-galahad.dps"], [10, "module-galahad.dqp"], [11, "module-galahad.eqp"], [12, "module-galahad.fdc"], [13, "module-galahad.glrt"], [14, "module-galahad.gls"], [18, "module-galahad.l2rt"], [20, "module-galahad.lpa"], [21, "module-galahad.lpb"], [23, "module-galahad.lsqp"], [24, "module-galahad.lsrt"], [26, "module-galahad.nls"], [27, "module-galahad.psls"], [29, "module-galahad.qpa"], [30, "module-galahad.qpb"], [32, "module-galahad.rqs"], [33, "module-galahad.sbls"], [34, "module-galahad.sils"], [35, "module-galahad.sls"], [37, "module-galahad.trb"], [38, "module-galahad.trs"], [39, "module-galahad.tru"], [42, "module-galahad.uls"], [43, "module-galahad.wcp"]], "bgo.initialize() (in module galahad.bgo)": [[2, "galahad.bgo.bgo.initialize"]], "bgo.load() (in module galahad.bgo)": [[2, "galahad.bgo.bgo.load"]], "bgo.solve() (in module galahad.bgo)": [[2, "galahad.bgo.bgo.solve"]], "bgo.terminate() (in module galahad.bgo)": [[2, "galahad.bgo.bgo.terminate"]], "galahad.bgo": [[2, "module-galahad.bgo"]], "blls.initialize() (in module galahad.blls)": [[3, "galahad.blls.blls.initialize"]], "blls.load() (in module galahad.blls)": [[3, "galahad.blls.blls.load"]], "blls.solve_ls() (in module galahad.blls)": [[3, "galahad.blls.blls.solve_ls"]], "blls.terminate() (in module galahad.blls)": [[3, "galahad.blls.blls.terminate"]], "galahad.blls": [[3, "module-galahad.blls"]], "bqp.initialize() (in module galahad.bqp)": [[4, "galahad.bqp.bqp.initialize"]], "bqp.load() (in module galahad.bqp)": [[4, "galahad.bqp.bqp.load"]], "bqp.solve_qp() (in module galahad.bqp)": [[4, "galahad.bqp.bqp.solve_qp"]], "bqp.terminate() (in module galahad.bqp)": [[4, "galahad.bqp.bqp.terminate"]], "galahad.bqp": [[4, "module-galahad.bqp"]], "bqpb.initialize() (in module galahad.bqpb)": [[5, "galahad.bqpb.bqpb.initialize"]], "bqpb.load() (in module galahad.bqpb)": [[5, "galahad.bqpb.bqpb.load"]], "bqpb.solve_qp() (in module galahad.bqpb)": [[5, "galahad.bqpb.bqpb.solve_qp"]], "bqpb.solve_sldqp() (in module galahad.bqpb)": [[5, "galahad.bqpb.bqpb.solve_sldqp"]], "bqpb.terminate() (in module galahad.bqpb)": [[5, "galahad.bqpb.bqpb.terminate"]], "galahad.bqpb": [[5, "module-galahad.bqpb"]], "cqp.initialize() (in module galahad.cqp)": [[6, "galahad.cqp.cqp.initialize"]], "cqp.load() (in module galahad.cqp)": [[6, "galahad.cqp.cqp.load"]], "cqp.solve_qp() (in module galahad.cqp)": [[6, "galahad.cqp.cqp.solve_qp"]], "cqp.solve_sldqp() (in module galahad.cqp)": [[6, "galahad.cqp.cqp.solve_sldqp"]], "cqp.terminate() (in module galahad.cqp)": [[6, "galahad.cqp.cqp.terminate"]], "galahad.cqp": [[6, "module-galahad.cqp"]], "cro.crossover_solution() (in module galahad.cro)": [[7, "galahad.cro.cro.crossover_solution"]], "cro.initialize() (in module galahad.cro)": [[7, "galahad.cro.cro.initialize"]], "cro.terminate() (in module galahad.cro)": [[7, "galahad.cro.cro.terminate"]], "galahad.cro": [[7, "module-galahad.cro"]], "galahad.dgo": [[8, "module-galahad.dgo"]], "initialize() (galahad.dgo.dgo method)": [[8, "galahad.dgo.dgo.initialize"]], "load() (galahad.dgo.dgo method)": [[8, "galahad.dgo.dgo.load"]], "solve() (galahad.dgo.dgo method)": [[8, "galahad.dgo.dgo.solve"]], "terminate() (galahad.dgo.dgo method)": [[8, "galahad.dgo.dgo.terminate"]], "dps.initialize() (in module galahad.dps)": [[9, "galahad.dps.dps.initialize"]], "dps.load() (in module galahad.dps)": [[9, "galahad.dps.dps.load"]], "dps.resolve_tr_problem() (in module galahad.dps)": [[9, "galahad.dps.dps.resolve_tr_problem"]], "dps.solve_tr_problem() (in module galahad.dps)": [[9, "galahad.dps.dps.solve_tr_problem"]], "dps.terminate() (in module galahad.dps)": [[9, "galahad.dps.dps.terminate"]], "galahad.dps": [[9, "module-galahad.dps"]], "rqs.resolve_rq_problem() (in module galahad.dps)": [[9, "galahad.dps.rqs.resolve_rq_problem"]], "rqs.solve_rq_problem() (in module galahad.dps)": [[9, "galahad.dps.rqs.solve_rq_problem"]], "dqp.initialize() (in module galahad.dqp)": [[10, "galahad.dqp.dqp.initialize"]], "dqp.load() (in module galahad.dqp)": [[10, "galahad.dqp.dqp.load"]], "dqp.solve_qp() (in module galahad.dqp)": [[10, "galahad.dqp.dqp.solve_qp"]], "dqp.solve_sldqp() (in module galahad.dqp)": [[10, "galahad.dqp.dqp.solve_sldqp"]], "dqp.terminate() (in module galahad.dqp)": [[10, "galahad.dqp.dqp.terminate"]], "galahad.dqp": [[10, "module-galahad.dqp"]], "eqp.initialize() (in module galahad.eqp)": [[11, "galahad.eqp.eqp.initialize"]], "eqp.load() (in module galahad.eqp)": [[11, "galahad.eqp.eqp.load"]], "eqp.resolve_qp() (in module galahad.eqp)": [[11, "galahad.eqp.eqp.resolve_qp"]], "eqp.solve_qp() (in module galahad.eqp)": [[11, "galahad.eqp.eqp.solve_qp"]], "eqp.solve_sldqp() (in module galahad.eqp)": [[11, "galahad.eqp.eqp.solve_sldqp"]], "eqp.terminate() (in module galahad.eqp)": [[11, "galahad.eqp.eqp.terminate"]], "galahad.eqp": [[11, "module-galahad.eqp"]], "fdc.find_dependent_rows() (in module galahad.fdc)": [[12, "galahad.fdc.fdc.find_dependent_rows"]], "fdc.initialize() (in module galahad.fdc)": [[12, "galahad.fdc.fdc.initialize"]], "fdc.terminate() (in module galahad.fdc)": [[12, "galahad.fdc.fdc.terminate"]], "galahad.fdc": [[12, "module-galahad.fdc"]], "galahad.glrt": [[13, "module-galahad.glrt"]], "glrt.initialize() (in module galahad.glrt)": [[13, "galahad.glrt.glrt.initialize"]], "glrt.load_options() (in module galahad.glrt)": [[13, "galahad.glrt.glrt.load_options"]], "glrt.solve_problem() (in module galahad.glrt)": [[13, "galahad.glrt.glrt.solve_problem"]], "glrt.terminate() (in module galahad.glrt)": [[13, "galahad.glrt.glrt.terminate"]], "galahad.gls": [[14, "module-galahad.gls"]], "gls.finalize() (in module galahad.gls)": [[14, "galahad.gls.gls.finalize"]], "gls.initialize() (in module galahad.gls)": [[14, "galahad.gls.gls.initialize"]], "galahad.l2rt": [[18, "module-galahad.l2rt"]], "l2rt.initialize() (in module galahad.l2rt)": [[18, "galahad.l2rt.l2rt.initialize"]], "l2rt.load_options() (in module galahad.l2rt)": [[18, "galahad.l2rt.l2rt.load_options"]], "l2rt.solve_problem() (in module galahad.l2rt)": [[18, "galahad.l2rt.l2rt.solve_problem"]], "l2rt.terminate() (in module galahad.l2rt)": [[18, "galahad.l2rt.l2rt.terminate"]], "galahad.lpa": [[20, "module-galahad.lpa"]], "lpa.initialize() (in module galahad.lpa)": [[20, "galahad.lpa.lpa.initialize"]], "lpa.load() (in module galahad.lpa)": [[20, "galahad.lpa.lpa.load"]], "lpa.solve_lp() (in module galahad.lpa)": [[20, "galahad.lpa.lpa.solve_lp"]], "lpa.terminate() (in module galahad.lpa)": [[20, "galahad.lpa.lpa.terminate"]], "galahad.lpb": [[21, "module-galahad.lpb"]], "lpb.initialize() (in module galahad.lpb)": [[21, "galahad.lpb.lpb.initialize"]], "lpb.load() (in module galahad.lpb)": [[21, "galahad.lpb.lpb.load"]], "lpb.solve_lp() (in module galahad.lpb)": [[21, "galahad.lpb.lpb.solve_lp"]], "lpb.terminate() (in module galahad.lpb)": [[21, "galahad.lpb.lpb.terminate"]], "galahad.lsqp": [[23, "module-galahad.lsqp"]], "lsqp.initialize() (in module galahad.lsqp)": [[23, "galahad.lsqp.lsqp.initialize"]], "lsqp.load() (in module galahad.lsqp)": [[23, "galahad.lsqp.lsqp.load"]], "lsqp.solve_qp() (in module galahad.lsqp)": [[23, "galahad.lsqp.lsqp.solve_qp"]], "lsqp.terminate() (in module galahad.lsqp)": [[23, "galahad.lsqp.lsqp.terminate"]], "galahad.lsrt": [[24, "module-galahad.lsrt"]], "lsrt.initialize() (in module galahad.lsrt)": [[24, "galahad.lsrt.lsrt.initialize"]], "lsrt.load_options() (in module galahad.lsrt)": [[24, "galahad.lsrt.lsrt.load_options"]], "lsrt.solve_problem() (in module galahad.lsrt)": [[24, "galahad.lsrt.lsrt.solve_problem"]], "lsrt.terminate() (in module galahad.lsrt)": [[24, "galahad.lsrt.lsrt.terminate"]], "galahad.nls": [[26, "module-galahad.nls"]], "nls.initialize() (in module galahad.nls)": [[26, "galahad.nls.nls.initialize"]], "nls.load() (in module galahad.nls)": [[26, "galahad.nls.nls.load"]], "nls.solve() (in module galahad.nls)": [[26, "galahad.nls.nls.solve"]], "nls.terminate() (in module galahad.nls)": [[26, "galahad.nls.nls.terminate"]], "galahad.psls": [[27, "module-galahad.psls"]], "psls.apply_preconditioner() (in module galahad.psls)": [[27, "galahad.psls.psls.apply_preconditioner"]], "psls.form_preconditioner() (in module galahad.psls)": [[27, "galahad.psls.psls.form_preconditioner"]], "psls.form_subset_preconditioner() (in module galahad.psls)": [[27, "galahad.psls.psls.form_subset_preconditioner"]], "psls.initialize() (in module galahad.psls)": [[27, "galahad.psls.psls.initialize"]], "psls.load() (in module galahad.psls)": [[27, "galahad.psls.psls.load"]], "psls.terminate() (in module galahad.psls)": [[27, "galahad.psls.psls.terminate"]], "psls.update_preconditioner() (in module galahad.psls)": [[27, "galahad.psls.psls.update_preconditioner"]], "galahad.qpa": [[29, "module-galahad.qpa"]], "qpa.initialize() (in module galahad.qpa)": [[29, "galahad.qpa.qpa.initialize"]], "qpa.load() (in module galahad.qpa)": [[29, "galahad.qpa.qpa.load"]], "qpa.solve_bcl1qp() (in module galahad.qpa)": [[29, "galahad.qpa.qpa.solve_bcl1qp"]], "qpa.solve_l1qp() (in module galahad.qpa)": [[29, "galahad.qpa.qpa.solve_l1qp"]], "qpa.solve_qp() (in module galahad.qpa)": [[29, "galahad.qpa.qpa.solve_qp"]], "qpa.terminate() (in module galahad.qpa)": [[29, "galahad.qpa.qpa.terminate"]], "galahad.qpb": [[30, "module-galahad.qpb"]], "qpb.initialize() (in module galahad.qpb)": [[30, "galahad.qpb.qpb.initialize"]], "qpb.load() (in module galahad.qpb)": [[30, "galahad.qpb.qpb.load"]], "qpb.solve_qp() (in module galahad.qpb)": [[30, "galahad.qpb.qpb.solve_qp"]], "qpb.terminate() (in module galahad.qpb)": [[30, "galahad.qpb.qpb.terminate"]], "galahad.rqs": [[32, "module-galahad.rqs"]], "rqs.initialize() (in module galahad.rqs)": [[32, "galahad.rqs.rqs.initialize"]], "rqs.load() (in module galahad.rqs)": [[32, "galahad.rqs.rqs.load"]], "rqs.load_a() (in module galahad.rqs)": [[32, "galahad.rqs.rqs.load_a"]], "rqs.load_m() (in module galahad.rqs)": [[32, "galahad.rqs.rqs.load_m"]], "rqs.solve_problem() (in module galahad.rqs)": [[32, "galahad.rqs.rqs.solve_problem"]], "rqs.terminate() (in module galahad.rqs)": [[32, "galahad.rqs.rqs.terminate"]], "galahad.sbls": [[33, "module-galahad.sbls"]], "sbls.factorize_matrix() (in module galahad.sbls)": [[33, "galahad.sbls.sbls.factorize_matrix"]], "sbls.initialize() (in module galahad.sbls)": [[33, "galahad.sbls.sbls.initialize"]], "sbls.load() (in module galahad.sbls)": [[33, "galahad.sbls.sbls.load"]], "sbls.solve_system() (in module galahad.sbls)": [[33, "galahad.sbls.sbls.solve_system"]], "sbls.terminate() (in module galahad.sbls)": [[33, "galahad.sbls.sbls.terminate"]], "galahad.sils": [[34, "module-galahad.sils"]], "sils.finalize() (in module galahad.sils)": [[34, "galahad.sils.sils.finalize"]], "sils.initialize() (in module galahad.sils)": [[34, "galahad.sils.sils.initialize"]], "galahad.sls": [[35, "module-galahad.sls"]], "sls.analyse_matrix() (in module galahad.sls)": [[35, "galahad.sls.sls.analyse_matrix"]], "sls.factorize_matrix() (in module galahad.sls)": [[35, "galahad.sls.sls.factorize_matrix"]], "sls.initialize() (in module galahad.sls)": [[35, "galahad.sls.sls.initialize"]], "sls.partial_solve_system() (in module galahad.sls)": [[35, "galahad.sls.sls.partial_solve_system"]], "sls.solve_system() (in module galahad.sls)": [[35, "galahad.sls.sls.solve_system"]], "sls.terminate() (in module galahad.sls)": [[35, "galahad.sls.sls.terminate"]], "galahad.trb": [[37, "module-galahad.trb"]], "trb.initialize() (in module galahad.trb)": [[37, "galahad.trb.trb.initialize"]], "trb.load() (in module galahad.trb)": [[37, "galahad.trb.trb.load"]], "trb.solve() (in module galahad.trb)": [[37, "galahad.trb.trb.solve"]], "trb.terminate() (in module galahad.trb)": [[37, "galahad.trb.trb.terminate"]], "galahad.trs": [[38, "module-galahad.trs"]], "trs.initialize() (in module galahad.trs)": [[38, "galahad.trs.trs.initialize"]], "trs.load() (in module galahad.trs)": [[38, "galahad.trs.trs.load"]], "trs.load_a() (in module galahad.trs)": [[38, "galahad.trs.trs.load_a"]], "trs.load_m() (in module galahad.trs)": [[38, "galahad.trs.trs.load_m"]], "trs.solve_problem() (in module galahad.trs)": [[38, "galahad.trs.trs.solve_problem"]], "trs.terminate() (in module galahad.trs)": [[38, "galahad.trs.trs.terminate"]], "galahad.tru": [[39, "module-galahad.tru"]], "tru.initialize() (in module galahad.tru)": [[39, "galahad.tru.tru.initialize"]], "tru.load() (in module galahad.tru)": [[39, "galahad.tru.tru.load"]], "tru.solve() (in module galahad.tru)": [[39, "galahad.tru.tru.solve"]], "tru.terminate() (in module galahad.tru)": [[39, "galahad.tru.tru.terminate"]], "galahad.uls": [[42, "module-galahad.uls"]], "uls.factorize_matrix() (in module galahad.uls)": [[42, "galahad.uls.uls.factorize_matrix"]], "uls.initialize() (in module galahad.uls)": [[42, "galahad.uls.uls.initialize"]], "uls.solve_system() (in module galahad.uls)": [[42, "galahad.uls.uls.solve_system"]], "uls.terminate() (in module galahad.uls)": [[42, "galahad.uls.uls.terminate"]], "galahad.wcp": [[43, "module-galahad.wcp"]], "wcp.find_wcp() (in module galahad.wcp)": [[43, "galahad.wcp.wcp.find_wcp"]], "wcp.initialize() (in module galahad.wcp)": [[43, "galahad.wcp.wcp.initialize"]], "wcp.load() (in module galahad.wcp)": [[43, "galahad.wcp.wcp.load"]], "wcp.terminate() (in module galahad.wcp)": [[43, "galahad.wcp.wcp.terminate"]]}})