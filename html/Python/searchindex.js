Search.setIndex({"docnames": ["arc", "aux", "bco", "bgo", "blls", "bqp", "bqpb", "bsc", "convert", "cqp", "cro", "dgo", "dps", "dqp", "eqp", "fdc", "fit", "glrt", "gls", "gltr", "go", "hash", "index", "ir", "l2rt", "lhs", "lms", "lp", "lpa", "lpb", "ls", "lsqp", "lsrt", "lstr", "nls", "presolve", "psls", "qp", "qpa", "qpb", "reg", "roots", "rpd", "rqs", "sbls", "scu", "sec", "sha", "sils", "sls", "sys", "trb", "trs", "tru", "uco", "ugo", "uls", "wcp"], "filenames": ["arc.rst", "aux.rst", "bco.rst", "bgo.rst", "blls.rst", "bqp.rst", "bqpb.rst", "bsc.rst", "convert.rst", "cqp.rst", "cro.rst", "dgo.rst", "dps.rst", "dqp.rst", "eqp.rst", "fdc.rst", "fit.rst", "glrt.rst", "gls.rst", "gltr.rst", "go.rst", "hash.rst", "index.rst", "ir.rst", "l2rt.rst", "lhs.rst", "lms.rst", "lp.rst", "lpa.rst", "lpb.rst", "ls.rst", "lsqp.rst", "lsrt.rst", "lstr.rst", "nls.rst", "presolve.rst", "psls.rst", "qp.rst", "qpa.rst", "qpb.rst", "reg.rst", "roots.rst", "rpd.rst", "rqs.rst", "sbls.rst", "scu.rst", "sec.rst", "sha.rst", "sils.rst", "sls.rst", "sys.rst", "trb.rst", "trs.rst", "tru.rst", "uco.rst", "ugo.rst", "uls.rst", "wcp.rst"], "titles": ["ARC", "Auxiliary Procedures", "Bound-constrained Optimization", "BGO", "BLLS", "BQP", "BQPB", "BSC", "CONVERT", "CQP", "CRO", "DGO", "DPS", "DQP", "EQP", "FDC", "FIT", "GLRT", "GLS", "GLTR", "Global Optimization", "HASH", "GALAHAD Python Interfaces", "IR", "L2RT", "LHS", "LMS", "Linear Programming", "LPA", "LPB", "Least-Squares", "LSQP", "LSRT", "LSTR", "NLS", "PRESOLVE", "PSLS", "Quadratic Programming", "QPA", "QPB", "Regularization subproblems", "ROOTS", "RPD", "RQS", "SBLS", "SCU", "SEC", "SHA", "SILS", "SLS", "Linear Systems", "TRB", "TRS", "TRU", "Unconstrained Optimization", "UGO", "ULS", "WCP"], "terms": {"The": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "us": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57], "regular": [0, 4, 5, 6, 9, 12, 13, 17, 22, 24, 28, 29, 30, 31, 32, 34, 39, 43, 54, 57], "method": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57], "find": [0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 17, 19, 20, 22, 24, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 43, 44, 47, 50, 51, 52, 53, 54, 55, 57], "local": [0, 2, 3, 11, 22, 30, 34, 38, 39, 51, 53, 54, 55], "minim": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 19, 24, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 43, 51, 52, 53, 55, 57], "differenti": [0, 3, 11, 34, 51, 53, 55], "object": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 19, 22, 24, 28, 29, 31, 32, 33, 34, 35, 38, 39, 40, 43, 51, 52, 53, 55, 57], "f": [0, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 17, 19, 24, 28, 29, 31, 32, 34, 38, 39, 43, 49, 51, 52, 53, 55], "x": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 23, 24, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 43, 44, 45, 48, 49, 51, 52, 53, 55, 56, 57], "mani": [0, 3, 4, 5, 6, 9, 11, 13, 15, 28, 29, 31, 34, 38, 39, 44, 51, 53, 55, 57], "variabl": [0, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 42, 43, 49, 51, 52, 53, 54, 55, 57], "offer": [0, 3, 4, 5, 6, 9, 11, 13, 28, 29, 31, 34, 39, 51, 53, 57], "choic": [0, 3, 4, 5, 6, 9, 11, 13, 15, 28, 29, 31, 34, 35, 36, 39, 43, 48, 51, 52, 53, 57], "direct": [0, 3, 4, 5, 6, 9, 11, 13, 14, 28, 29, 31, 34, 38, 39, 49, 51, 53, 57], "iter": [0, 1, 3, 4, 5, 6, 9, 11, 12, 13, 14, 17, 18, 19, 22, 23, 24, 28, 29, 31, 32, 33, 34, 37, 38, 39, 40, 43, 44, 47, 48, 49, 51, 52, 53, 55, 56, 57], "solut": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 22, 24, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 44, 45, 47, 49, 51, 52, 53, 55, 56, 57], "kei": [0, 3, 4, 5, 6, 9, 11, 13, 28, 29, 31, 34, 36, 39, 49, 51, 53, 56, 57], "subproblem": [0, 3, 4, 5, 6, 9, 11, 12, 13, 19, 22, 28, 29, 31, 33, 34, 39, 51, 52, 53, 57], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "most": [0, 4, 5, 6, 9, 10, 12, 13, 14, 19, 28, 29, 31, 34, 38, 39, 43, 51, 52, 53, 57], "suitabl": [0, 3, 4, 5, 6, 9, 10, 11, 13, 14, 17, 19, 24, 28, 29, 31, 32, 33, 34, 36, 38, 39, 43, 44, 51, 52, 53, 57], "larg": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 17, 19, 20, 22, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 45, 49, 50, 51, 53, 54, 55, 56, 57], "problem": [0, 1, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 22, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 49, 51, 52, 53, 55, 56, 57], "first": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 19, 28, 29, 31, 33, 34, 35, 36, 38, 39, 43, 44, 48, 49, 51, 52, 53, 55, 56, 57], "deriv": [0, 1, 3, 11, 16, 22, 31, 34, 39, 51, 53, 55], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "requir": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "second": [0, 3, 11, 17, 19, 30, 33, 34, 38, 39, 44, 51, 53, 55], "can": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 17, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "calcul": [0, 3, 11, 13, 34, 36, 51, 53], "thei": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 18, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 48, 49, 51, 52, 53, 55, 56, 57], "exploit": [0, 3, 5, 6, 9, 10, 11, 12, 13, 14, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53], "see": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "section": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "4": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "galahad": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "doc": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "pdf": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "brief": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "descript": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "emploi": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "other": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "detail": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "symmetr": [0, 3, 5, 6, 9, 10, 11, 12, 13, 14, 15, 18, 22, 23, 26, 34, 36, 38, 39, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 56], "n": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57], "h": [0, 3, 5, 6, 9, 10, 11, 12, 13, 14, 17, 19, 31, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55], "nabla": [0, 3, 11, 34, 51, 53], "2_": [0, 3, 11, 51, 53], "xx": [0, 3, 11, 34, 51, 53], "mai": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57], "present": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 28, 29, 31, 34, 36, 38, 39, 43, 44, 48, 49, 51, 52, 53, 56, 57], "store": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 45, 49, 51, 52, 53, 56, 57], "varieti": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 26, 28, 29, 31, 34, 36, 38, 39, 40, 43, 44, 49, 51, 52, 53, 56, 57], "format": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 22, 28, 29, 31, 34, 35, 36, 38, 39, 42, 43, 44, 49, 51, 52, 53, 56, 57], "But": [0, 3, 5, 6, 9, 10, 11, 12, 13, 14, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53], "crucial": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 57], "symmetri": [0, 3, 5, 6, 9, 10, 11, 12, 13, 14, 34, 36, 38, 39, 43, 44, 45, 49, 51, 52, 53], "onli": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 25, 26, 28, 29, 31, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 56, 57], "valu": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57], "from": [0, 1, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57], "lower": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 19, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 56, 57], "triangular": [0, 3, 5, 6, 9, 10, 11, 12, 13, 14, 18, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56], "part": [0, 3, 5, 6, 9, 10, 11, 12, 13, 14, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56], "e": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 43, 44, 46, 47, 49, 51, 52, 53, 55, 56, 57], "those": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 28, 29, 31, 34, 36, 38, 39, 43, 44, 45, 49, 51, 52, 53, 56, 57], "entri": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 24, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 43, 44, 48, 49, 51, 52, 53, 56, 57], "lie": [0, 2, 3, 5, 6, 9, 10, 11, 12, 13, 14, 19, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 57], "below": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 19, 23, 24, 28, 29, 31, 32, 33, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 56, 57], "lead": [0, 3, 5, 6, 9, 10, 11, 12, 13, 14, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53], "diagon": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 24, 31, 32, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56], "dens": [0, 1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 22, 28, 29, 31, 34, 36, 38, 39, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 56, 57], "compact": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "row": [0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 24, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 43, 44, 45, 47, 48, 49, 51, 52, 53, 56, 57], "each": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 19, 24, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 43, 44, 47, 49, 51, 52, 53, 55, 56, 57], "turn": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "order": [0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 18, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 48, 49, 51, 52, 53, 56, 57], "within": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 38, 39, 40, 41, 43, 44, 46, 47, 49, 51, 52, 53, 55, 56, 57], "an": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57], "appropri": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 45, 49, 51, 52, 53, 56, 57], "real": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 18, 22, 28, 29, 31, 34, 35, 36, 38, 39, 41, 43, 44, 45, 48, 49, 51, 52, 53, 56, 57], "one": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 19, 22, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 43, 44, 45, 47, 49, 51, 52, 53, 55, 56, 57], "dimension": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "arrai": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57], "sinc": [0, 3, 5, 6, 7, 9, 11, 12, 13, 14, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 53, 57], "h_": [0, 3, 5, 6, 9, 10, 11, 12, 13, 14, 34, 38, 39, 43, 44, 51, 52, 53], "ij": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 18, 23, 28, 29, 31, 34, 36, 38, 39, 43, 44, 48, 49, 51, 52, 53, 56, 57], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "j": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "need": [0, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 28, 29, 31, 34, 36, 38, 39, 43, 44, 47, 48, 49, 51, 52, 53, 55, 56, 57], "held": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 47, 49, 51, 52, 53, 55, 57], "In": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 56, 57], "thi": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57], "case": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 17, 18, 19, 28, 29, 31, 34, 36, 38, 39, 43, 44, 45, 48, 49, 51, 52, 53, 56, 57], "triangl": [0, 3, 5, 6, 9, 10, 11, 12, 13, 14, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53], "should": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 26, 28, 29, 31, 33, 34, 36, 38, 39, 43, 44, 47, 49, 51, 52, 53, 56, 57], "compon": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 28, 29, 31, 34, 36, 38, 39, 43, 44, 45, 48, 49, 51, 52, 53, 56, 57], "2": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57], "h_val": [0, 3, 5, 6, 9, 10, 11, 12, 13, 14, 34, 38, 39, 43, 44, 51, 52, 53], "hold": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 24, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 43, 44, 48, 49, 51, 52, 53, 55, 56, 57], "ji": [0, 3, 5, 6, 9, 11, 12, 13, 14, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53], "spars": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 22, 23, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 45, 47, 48, 49, 51, 52, 53, 56, 57], "co": [0, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 56, 57], "ordin": [0, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "nonzero": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "matric": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 22, 28, 29, 31, 34, 36, 38, 39, 43, 44, 45, 49, 51, 52, 53, 56, 57], "For": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "l": [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 20, 22, 27, 28, 29, 30, 31, 34, 36, 37, 38, 39, 40, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57], "th": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 28, 29, 31, 34, 36, 38, 39, 43, 44, 47, 49, 51, 52, 53, 56, 57], "ne": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 18, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "its": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 26, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 56, 57], "index": [0, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 22, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "column": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 24, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 43, 44, 45, 49, 51, 52, 53, 56, 57], "integ": [0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 18, 28, 29, 31, 34, 35, 36, 38, 39, 42, 43, 44, 48, 49, 51, 52, 53, 56, 57], "h_row": [0, 3, 5, 6, 9, 11, 12, 13, 14, 34, 38, 39, 43, 44, 51, 52, 53], "h_col": [0, 3, 5, 6, 9, 10, 11, 12, 13, 14, 34, 38, 39, 43, 44, 51, 52, 53], "respect": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 45, 47, 49, 51, 52, 53, 55, 56, 57], "while": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 24, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "number": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57], "record": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 23, 28, 29, 31, 34, 36, 38, 39, 43, 44, 45, 49, 51, 52, 53, 56, 57], "h_ne": [0, 3, 5, 6, 9, 10, 11, 12, 13, 14, 34, 35, 38, 39, 43, 44, 51, 52, 53], "note": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 43, 44, 46, 47, 49, 51, 52, 53, 55, 56, 57], "wise": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "again": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "time": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 47, 48, 49, 51, 52, 53, 55, 56, 57], "so": [0, 1, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 22, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 46, 49, 51, 52, 53, 55, 56, 57], "appear": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 56, 57], "directli": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "befor": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "h_ptr": [0, 3, 5, 6, 9, 10, 11, 12, 13, 14, 34, 38, 39, 43, 44, 51, 52, 53], "posit": [0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 22, 24, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 43, 44, 45, 49, 50, 51, 52, 53, 56, 57], "total": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 24, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 43, 44, 48, 49, 51, 52, 53, 55, 56, 57], "plu": 35, "indic": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57], "scheme": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "almost": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "alwai": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "less": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 24, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 43, 44, 48, 49, 51, 52, 53, 55, 56, 57], "than": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 23, 24, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 43, 44, 45, 48, 49, 51, 52, 53, 55, 56, 57], "predecessor": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "initi": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "set": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "default": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "option": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "privat": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "data": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "return": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "dict": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "dictionari": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "contain": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "control": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "error": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "int": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "warn": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "diagnost": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "occur": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "stream": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 46, 47, 49, 51, 52, 53, 55, 56, 57], "out": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "gener": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 46, 47, 49, 51, 52, 53, 55, 56, 57], "output": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "print_level": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 46, 47, 49, 51, 52, 53, 55, 56, 57], "level": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "possibl": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "line": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 46, 47, 49, 51, 52, 53, 55, 56, 57], "summari": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 24, 28, 29, 31, 32, 33, 34, 36, 38, 39, 43, 44, 47, 49, 51, 52, 53, 55, 56, 57], "everi": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 47, 51, 52, 53, 55, 57], "improv": [0, 3, 11, 28, 34, 35, 36, 38, 51, 53, 55], "3": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 43, 44, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57], "increasingli": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 17, 19, 24, 28, 29, 31, 32, 33, 34, 36, 38, 39, 42, 43, 44, 47, 49, 51, 52, 53, 55, 56, 57], "verbos": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 17, 19, 24, 28, 29, 31, 32, 33, 34, 36, 38, 39, 42, 43, 44, 47, 49, 51, 52, 53, 55, 56, 57], "debug": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 24, 25, 28, 29, 31, 32, 33, 34, 36, 38, 39, 42, 43, 44, 46, 47, 49, 51, 52, 53, 55, 56, 57], "start_print": [0, 4, 5, 6, 9, 11, 13, 24, 28, 29, 31, 32, 33, 34, 38, 39, 51, 53, 55, 57], "ani": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 47, 49, 51, 52, 53, 54, 55, 56, 57], "print": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 24, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 56, 57], "start": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 24, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 56, 57], "stop_print": [0, 4, 5, 6, 9, 11, 13, 24, 28, 29, 31, 32, 33, 34, 38, 39, 51, 53, 55, 57], "stop": [0, 4, 5, 6, 9, 11, 12, 13, 17, 19, 24, 28, 29, 31, 32, 33, 34, 38, 39, 43, 49, 51, 52, 53, 55, 56, 57], "print_gap": [0, 4, 5, 11, 13, 24, 32, 33, 34, 51, 53, 55], "between": [0, 4, 5, 6, 9, 10, 11, 13, 24, 28, 29, 31, 32, 33, 34, 35, 38, 39, 51, 53, 55, 57], "maxit": [0, 3, 4, 5, 6, 9, 11, 13, 18, 28, 29, 31, 34, 38, 39, 51, 53, 55, 57], "maximum": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 17, 18, 19, 23, 24, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 43, 44, 47, 48, 49, 51, 52, 53, 55, 56, 57], "perform": [0, 1, 3, 4, 5, 6, 9, 10, 11, 13, 22, 24, 28, 29, 31, 32, 33, 34, 38, 39, 43, 48, 49, 51, 52, 53, 55, 56, 57], "alive_unit": [0, 3, 11, 34, 51, 53, 55], "remov": [0, 3, 6, 9, 11, 13, 14, 15, 21, 29, 31, 34, 35, 36, 38, 39, 44, 45, 51, 53, 55, 57], "file": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 17, 19, 24, 28, 29, 31, 32, 33, 34, 35, 38, 39, 42, 43, 49, 51, 52, 53, 55], "alive_fil": [0, 3, 11, 34, 51, 53, 55], "unit": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 47, 48, 49, 51, 52, 53, 55, 56, 57], "termin": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 47, 49, 51, 52, 53, 55, 56, 57], "execut": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 47, 49, 51, 52, 53, 55, 57], "str": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 46, 47, 49, 51, 52, 53, 55, 56, 57], "more_toraldo": [0, 51, 53], "give": [0, 4, 5, 6, 9, 10, 12, 13, 14, 15, 17, 19, 24, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 45, 49, 51, 52, 53, 56, 57], "more": [0, 7, 13, 18, 21, 23, 31, 34, 35, 36, 44, 45, 48, 49, 51, 53, 55, 57], "toraldo": [0, 51, 53], "project": [0, 3, 4, 5, 11, 13, 22, 30, 37, 44, 49, 51, 53], "search": [0, 3, 4, 6, 9, 13, 14, 18, 21, 22, 29, 31, 34, 35, 38, 39, 49, 51, 53, 55, 57], "upon": [0, 18, 48, 51, 53], "cauchi": [0, 13, 51, 53], "point": [0, 3, 6, 9, 10, 11, 13, 14, 22, 27, 28, 29, 31, 34, 35, 37, 38, 39, 49, 51, 53, 55, 57], "anyth": [0, 4, 18, 34, 48, 51, 53], "els": [0, 4, 34, 51, 53], "standard": [0, 38, 51, 53], "add": [0, 8, 51, 53], "cg": [0, 4, 5, 13, 14, 34, 38, 39, 44, 51, 53], "non_monoton": [0, 34, 51, 53], "non": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 22, 24, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 44, 49, 51, 52, 53, 55, 56, 57], "monoton": [0, 34, 51, 53], "strategi": [0, 3, 13, 34, 35, 38, 51, 53, 57], "histori": [0, 34, 43, 51, 52, 53], "length": [0, 4, 11, 17, 19, 24, 26, 32, 33, 34, 36, 51, 53], "model": [0, 12, 34, 38, 39, 51, 53], "dynam": [0, 34, 49, 51, 53], "yet": [0, 34, 45, 49, 51, 53], "implement": [0, 34, 36, 49, 51, 53], "hessian": [0, 1, 3, 5, 6, 9, 11, 12, 13, 14, 22, 31, 34, 35, 38, 39, 43, 46, 47, 51, 52, 53, 55], "exact": [0, 4, 5, 13, 34, 51, 53], "bare": [0, 34, 51, 53], "ident": [0, 5, 6, 9, 12, 13, 14, 15, 17, 19, 31, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 53], "secant": [0, 1, 22, 26, 46, 47, 51, 53], "sparsiti": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "base": [0, 14, 18, 48, 49, 51, 53, 56], "5": [0, 3, 6, 9, 10, 11, 13, 14, 15, 19, 24, 25, 28, 29, 31, 33, 34, 35, 36, 38, 39, 42, 44, 45, 48, 49, 51, 53, 56, 57], "limit": [0, 1, 3, 4, 5, 6, 9, 11, 13, 17, 19, 22, 24, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 43, 51, 52, 53, 55, 57], "memori": [0, 1, 22, 26, 34, 35, 36, 49, 51, 53], "bfg": [0, 1, 22, 26, 34, 46, 51, 53], "lbfgs_vector": [0, 34, 51, 53], "6": [0, 10, 11, 15, 17, 34, 36, 45, 49, 51, 53], "sr1": [0, 1, 22, 26, 46, 51, 53], "norm": [0, 3, 4, 5, 11, 12, 13, 14, 15, 17, 19, 22, 23, 24, 32, 33, 34, 36, 38, 39, 40, 43, 44, 49, 51, 52, 53], "defin": [0, 3, 6, 9, 10, 11, 17, 19, 24, 27, 28, 29, 32, 33, 34, 35, 38, 39, 43, 48, 51, 52, 53, 55, 57], "via": [0, 3, 4, 11, 34, 36, 49, 51, 53, 55, 56], "v": [0, 4, 12, 13, 17, 19, 24, 32, 33, 34, 51, 53], "t": [0, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 17, 18, 19, 24, 26, 28, 29, 31, 32, 33, 34, 38, 39, 43, 44, 45, 46, 49, 51, 52, 53, 56, 57], "p": [0, 3, 11, 12, 17, 24, 32, 34, 35, 36, 43, 44, 49, 51, 52, 53], "precondition": [0, 4, 14, 34, 36, 38, 39, 44, 50, 51, 53], "user": [0, 3, 4, 11, 13, 28, 34, 35, 48, 49, 51, 53, 55, 56], "own": [0, 34, 49, 51, 53], "euclidan": [0, 34, 51, 53], "two": [0, 4, 9, 13, 14, 28, 29, 31, 34, 35, 38, 39, 44, 51, 53, 57], "automat": [0, 14, 28, 31, 34, 36, 38, 39, 43, 44, 51, 52, 53, 57], "diag": [0, 4, 34, 36, 44, 51, 53], "max": [0, 4, 5, 11, 12, 13, 14, 17, 19, 23, 24, 32, 33, 34, 35, 36, 38, 39, 43, 44, 48, 49, 51, 52, 53, 56], "min_diagon": [0, 14, 34, 36, 44, 51, 53], "band": [0, 14, 34, 36, 38, 39, 44, 49, 51, 53], "semi": [0, 5, 6, 9, 10, 14, 34, 36, 38, 39, 44, 49, 51, 53], "bandwidth": [0, 14, 34, 36, 38, 39, 44, 49, 51, 53], "semi_bandwidth": [0, 14, 34, 36, 44, 49, 51, 53], "re": [0, 34, 36, 45, 49, 51, 53], "A": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57], "full": [0, 7, 10, 11, 14, 15, 18, 21, 34, 36, 38, 39, 43, 44, 48, 49, 51, 52, 53, 56, 57], "factor": [0, 1, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 43, 44, 45, 47, 48, 49, 51, 52, 53, 56, 57], "schnabel": [0, 34, 36, 51, 53], "eskow": [0, 34, 36, 51, 53], "modif": [0, 34, 36, 48, 49, 51, 53], "gmp": [0, 34, 51, 53], "incomplet": [0, 34, 36, 51, 53], "lin": [0, 34, 36, 51, 53], "7": [0, 3, 5, 6, 9, 10, 11, 14, 17, 28, 29, 31, 34, 36, 38, 39, 45, 51, 53, 55], "hsl_mi28": [0, 34, 36, 51, 53], "8": [0, 10, 15, 34, 36, 45, 51, 53], "munskgaard": [0, 34, 36, 51, 53], "9": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 28, 29, 31, 34, 36, 38, 39, 43, 44, 45, 49, 51, 52, 53, 57], "expand": [0, 34, 51, 53, 55], "specifi": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 24, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 49, 51, 52, 53, 55, 56, 57], "vector": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 24, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 43, 44, 46, 48, 49, 51, 52, 53, 56, 57], "max_dxg": [0, 51, 53], "icfs_vector": [0, 36, 51, 53], "mi28_lsiz": [0, 36, 51, 53], "fill": [0, 35, 36, 51, 53, 56], "comput": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 47, 49, 51, 52, 53, 55, 56, 57], "increas": [0, 3, 4, 8, 10, 11, 13, 15, 18, 34, 35, 36, 38, 48, 49, 51, 53, 56, 57], "qualiti": [0, 36, 51, 53], "appli": [0, 10, 15, 17, 19, 26, 35, 36, 44, 49, 51, 53], "treat": [0, 6, 9, 13, 29, 31, 34, 36, 38, 39, 51, 53, 57], "mi28_rsiz": [0, 36, 51, 53], "strictli": [0, 12, 13, 19, 24, 32, 33, 36, 43, 51, 52, 53, 57], "r": [0, 4, 12, 17, 19, 24, 32, 33, 34, 36, 43, 49, 51, 53], "rank": [0, 10, 14, 18, 26, 36, 44, 48, 49, 51, 53, 56, 57], "size": [0, 6, 9, 10, 11, 13, 18, 28, 29, 31, 35, 36, 38, 39, 48, 49, 51, 53, 56], "alloc": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57], "intern": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "thu": [0, 14, 35, 36, 38, 44, 45, 51, 53], "amount": [0, 10, 15, 35, 36, 49, 51, 53, 57], "well": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 22, 26, 27, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "work": [0, 4, 5, 17, 19, 24, 32, 33, 36, 38, 49, 51, 53], "involv": [0, 4, 5, 6, 9, 10, 13, 14, 15, 24, 28, 29, 31, 32, 33, 34, 36, 38, 39, 44, 49, 51, 53, 57], "depend": [0, 6, 9, 10, 13, 14, 15, 29, 31, 35, 36, 38, 39, 43, 44, 48, 49, 51, 52, 53, 55, 57], "higher": [0, 36, 51, 53], "choos": [0, 15, 36, 51, 53, 57], "recommend": [0, 36, 39, 51, 53], "advanced_start": [0, 51, 53], "try": [0, 3, 6, 9, 29, 35, 44, 49, 53, 55, 56], "pick": [0, 31, 53], "good": [0, 20, 49, 53, 56], "weight": [0, 4, 6, 9, 12, 13, 14, 17, 24, 28, 29, 31, 32, 34, 38, 43], "variant": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 18, 28, 29, 31, 34, 36, 38, 39, 43, 44, 48, 49, 51, 52, 53, 56, 57], "sartena": [0, 51, 53], "sisc": [0, 51, 53], "18": [0, 3, 4, 5, 6, 9, 11, 13, 17, 19, 24, 28, 29, 31, 32, 33, 34, 38, 39, 51, 53, 55, 57], "1990": [0, 51, 53], "1788": [0, 51, 53], "1803": [0, 51, 53], "stop_g_absolut": [0, 34, 53], "float": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 23, 24, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 43, 44, 46, 48, 49, 51, 52, 53, 55, 56, 57], "overal": [0, 6, 9, 29, 31, 34, 39, 51, 53, 55, 57], "converg": [0, 34, 48, 51, 53, 55], "toler": [0, 10, 15, 18, 28, 34, 35, 39, 44, 48, 51, 53, 55], "when": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 17, 19, 24, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "gradient": [0, 3, 4, 5, 11, 13, 14, 17, 19, 22, 30, 34, 35, 37, 38, 39, 51, 53, 55], "smaller": [0, 4, 5, 6, 9, 10, 11, 13, 14, 17, 19, 28, 29, 31, 33, 34, 38, 39, 41, 45, 49, 51, 53, 55, 56, 57], "stop_g_rel": [0, 34, 53], "step": [0, 4, 6, 9, 13, 14, 17, 24, 29, 31, 32, 34, 35, 38, 39, 48, 49, 51, 53, 55, 57], "stop_": [0, 34, 51, 53], "stop_pg_rel": [0, 51, 53], "initial_weight": [0, 34], "regularis": 0, "ve": [0, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 17, 19, 24, 28, 29, 31, 32, 33, 34, 38, 39, 43, 51, 52, 53, 55, 57], "g_0": [0, 34], "minimum_weight": [0, 34], "minimum": [0, 2, 12, 18, 24, 32, 33, 34, 35, 36, 43, 44, 48, 49, 52, 54, 56], "permit": [0, 4, 5, 7, 10, 13, 14, 15, 26, 31, 34, 36, 38, 39, 44, 49, 51, 53, 56, 57], "reduce_gap": [0, 34], "expert": [0, 34, 57], "paramet": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 24, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 56, 57], "suggest": [0, 34], "gould": [0, 1, 2, 20, 22, 27, 30, 34, 36, 37, 40, 50, 54], "porcelli": [0, 34], "toint": [0, 1, 2, 19, 20, 22, 27, 30, 34, 36, 37, 40, 50, 54], "updat": [0, 26, 34, 36, 46, 51, 53], "adapt": [0, 34], "cubic": [0, 34], "algorithm": [0, 6, 9, 29, 31, 34, 39, 47, 57], "ral": [0, 34], "tr": [0, 22, 24, 32, 33, 34, 40, 43, 51, 53], "2011": [0, 34, 49, 56], "007": [0, 34], "rutherford": [0, 34], "appleton": [0, 34], "laboratori": [0, 34], "england": [0, 34], "http": [0, 18, 28, 34, 48, 49, 56], "epub": [0, 34], "stfc": [0, 34], "ac": [0, 18, 28, 34, 48, 49, 56], "uk": [0, 18, 28, 34, 48, 49, 56], "bitstream": [0, 34], "6181": [0, 34], "denot": [0, 34], "beta": [0, 34, 39], "epsilon_chi": [0, 34], "alpha_max": [0, 4, 34], "paper": [0, 34, 47, 49], "tiny_gap": [0, 34], "large_root": [0, 34], "eta_success": [0, 34, 51, 53], "potenti": [0, 6, 9, 13, 28, 29, 31, 34, 35, 51, 53], "accept": [0, 6, 9, 14, 29, 34, 35, 38, 39, 51, 53, 57], "actual": [0, 11, 34, 36, 49, 51, 53, 56], "decreas": [0, 3, 4, 34, 39, 51, 53], "x_new": [0, 34, 51, 53], "larger": [0, 3, 4, 5, 6, 9, 10, 11, 13, 14, 17, 28, 29, 31, 34, 35, 38, 39, 51, 53, 57], "predict": [0, 34, 49, 51, 53, 56], "quadrat": [0, 4, 5, 6, 9, 10, 12, 13, 14, 17, 19, 22, 28, 29, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 51, 52, 53], "rel": [0, 4, 6, 9, 13, 15, 23, 28, 29, 34, 35, 44, 49, 51, 53], "greater": [0, 18, 34, 48, 49, 51, 53, 56], "eta_very_success": [0, 34, 51, 53], "eta_too_success": [0, 34, 51, 53], "eta": 0, "porcel": 0, "weight_decrease_min": [0, 34], "veri": [0, 34, 51, 53], "success": [0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 18, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 46, 48, 49, 51, 52, 53, 55, 56, 57], "reduc": [0, 6, 9, 17, 18, 23, 24, 29, 31, 32, 34, 35, 36, 39, 47, 48, 57], "weight_decreas": [0, 34], "unsuccess": [0, 44], "weight_increas": [0, 34], "weight_increase_max": [0, 34], "delta_1": [0, 34], "delta_2": [0, 34], "delta3": [0, 34], "delta_max": [0, 34], "obj_unbound": [0, 3, 6, 9, 11, 29, 38, 39, 51, 53], "smallest": [0, 3, 6, 9, 11, 12, 13, 15, 17, 19, 24, 29, 31, 32, 33, 39, 49, 51, 53, 57], "take": [0, 3, 7, 8, 11, 30, 35, 51, 53, 54], "mark": [0, 3, 11, 14, 51, 53], "unbound": [0, 3, 4, 5, 6, 9, 10, 11, 13, 14, 17, 28, 29, 31, 38, 39, 51, 53, 55, 57], "cpu_time_limit": [0, 3, 4, 5, 6, 9, 11, 13, 28, 29, 31, 34, 38, 39, 43, 51, 52, 53, 55, 57], "cpu": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 26, 28, 29, 31, 34, 38, 39, 43, 44, 49, 51, 52, 53, 55, 57], "allow": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 17, 19, 23, 24, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 56, 57], "mean": [0, 3, 6, 7, 9, 11, 13, 24, 28, 29, 31, 32, 33, 34, 38, 39, 51, 53, 55, 57], "infinit": [0, 3, 4, 5, 6, 9, 10, 11, 13, 24, 28, 29, 31, 32, 33, 34, 38, 39, 51, 53, 55, 56, 57], "clock_time_limit": [0, 3, 6, 9, 11, 13, 28, 29, 31, 34, 38, 39, 51, 53, 55, 57], "elaps": [0, 3, 6, 9, 11, 13, 24, 28, 29, 31, 32, 33, 34, 38, 39, 51, 53, 55, 57], "clock": [0, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 26, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 57], "hessian_avail": [0, 3, 11, 34, 51, 53], "bool": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 47, 49, 51, 52, 53, 55, 56, 57], "avail": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 24, 28, 29, 31, 32, 33, 34, 36, 38, 39, 43, 44, 47, 48, 49, 51, 52, 53, 55, 56, 57], "access": [0, 3, 7, 11, 34, 49, 51, 53, 55], "product": [0, 3, 11, 17, 19, 24, 26, 32, 33, 34, 51, 53], "subproblem_direct": [0, 34, 51, 53], "precondit": [0, 4, 5, 13, 14, 17, 19, 22, 30, 34, 36, 37, 38, 39, 44, 50, 51, 53], "renormalize_weight": [0, 34], "renorm": [0, 34, 51, 53], "account": [0, 34, 51, 53], "chang": [0, 4, 5, 6, 7, 9, 12, 13, 14, 15, 28, 29, 31, 34, 35, 36, 43, 44, 48, 49, 51, 52, 53], "quadratic_ratio_test": 0, "test": [0, 10, 57], "space_crit": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 47, 51, 52, 53, 55, 57], "true": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 47, 49, 51, 52, 53, 55, 56, 57], "effort": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 47, 51, 52, 53, 55, 57], "made": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 47, 51, 52, 53, 55, 57], "littl": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 47, 51, 52, 53, 55, 57], "space": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 47, 49, 51, 52, 53, 55, 57], "result": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 46, 47, 49, 51, 52, 53, 55, 56, 57], "longer": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 47, 51, 52, 53, 55, 57], "deallocate_error_fat": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 47, 51, 52, 53, 55, 57], "pointer": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 47, 51, 52, 53, 55, 57], "dealloc": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "otherwis": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 47, 51, 52, 53, 55, 57], "continu": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 50, 51, 52, 53, 54, 55, 57], "prefix": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 43, 44, 46, 47, 49, 51, 52, 53, 55, 56, 57], "all": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "string": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 46, 47, 49, 51, 52, 53, 55, 56, 57], "quot": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 43, 44, 46, 47, 49, 51, 52, 53, 55, 56, 57], "g": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 43, 44, 46, 47, 49, 51, 52, 53, 55, 56, 57], "word": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 43, 44, 46, 47, 49, 51, 52, 53, 55, 56, 57], "quto": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 43, 44, 46, 47, 49, 51, 52, 53, 55, 56, 57], "trs_option": [0, 51, 53], "gltr_option": [0, 13, 14, 39, 51, 53], "gltr": [0, 13, 14, 22, 34, 39, 40, 51, 52, 53], "dp": [0, 22, 40], "psls_option": [0, 34, 51, 53], "psl": [0, 22, 34, 50, 51, 53], "lms_option": [0, 51, 53], "lm": [0, 1, 22, 51, 53], "lms_prec_opt": [0, 51, 53], "sec_opt": 0, "sec": [0, 1, 22], "sha_opt": [0, 51, 53], "sha": [0, 1, 22, 51, 53], "load": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 17, 19, 24, 28, 29, 31, 32, 33, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 56, 57], "h_type": [0, 3, 5, 6, 9, 11, 12, 13, 14, 34, 38, 39, 43, 44, 51, 52, 53], "none": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 24, 28, 29, 31, 32, 33, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 56, 57], "import": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 24, 28, 29, 31, 32, 33, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 56, 57], "prior": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 24, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 56, 57], "It": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "coordin": [0, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "sparse_by_row": [0, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "absent": [0, 3, 11, 34, 43, 51, 52, 53], "latter": [0, 3, 11, 28, 35, 44, 51, 53], "upper": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 56, 57], "three": [0, 3, 11, 20, 27, 34, 51, 53], "ndarrai": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 24, 28, 29, 31, 32, 33, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "either": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 28, 29, 31, 34, 36, 38, 39, 41, 43, 44, 45, 49, 51, 52, 53, 56, 57], "solv": [0, 1, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 18, 19, 22, 23, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 44, 48, 49, 50, 51, 52, 53, 55, 56, 57], "eval_f": [0, 3, 11, 51, 53], "eval_g": [0, 3, 11, 51, 53], "eval_h": [0, 3, 11, 34, 51, 53], "approxim": [0, 1, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 19, 20, 22, 24, 26, 28, 29, 31, 32, 33, 34, 38, 39, 43, 44, 46, 47, 49, 51, 52, 53, 55, 57], "given": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 22, 23, 26, 28, 29, 31, 34, 36, 38, 39, 43, 44, 46, 48, 49, 51, 52, 53, 55, 56, 57], "subject": [3, 4, 5, 6, 9, 10, 11, 13, 14, 28, 29, 31, 38, 39, 43, 51], "simpl": [3, 4, 5, 6, 9, 10, 11, 13, 28, 29, 30, 31, 38, 39, 51, 57], "bound": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 19, 22, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 43, 51, 52, 53, 55, 57], "trust": [3, 11, 12, 19, 22, 31, 33, 37, 39, 43, 51, 52, 53, 54], "region": [3, 11, 12, 19, 22, 31, 33, 37, 39, 43, 51, 52, 53, 54], "optim": [0, 1, 3, 4, 5, 6, 9, 10, 11, 13, 14, 17, 19, 22, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 50, 51, 52, 53, 55, 57], "callabl": [0, 3, 11, 34, 51, 53, 55], "must": [0, 3, 10, 11, 15, 17, 19, 24, 25, 32, 33, 34, 35, 36, 49, 51, 53, 55, 56], "have": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 23, 26, 28, 29, 31, 34, 36, 38, 39, 43, 44, 45, 46, 51, 52, 53, 55, 57], "signatur": [0, 3, 11, 34, 51, 53, 55], "evalu": [0, 3, 6, 9, 11, 29, 31, 34, 39, 51, 53, 55], "assign": [0, 3, 4, 5, 11, 34, 51, 53, 55], "same": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 17, 19, 28, 29, 31, 33, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "pattern": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 57], "global": [0, 3, 11, 12, 17, 19, 22, 24, 32, 33, 35, 38, 39, 40, 43, 51, 52, 53, 55], "after": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 18, 26, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 48, 49, 51, 52, 53, 55, 56, 57], "call": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 17, 19, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 47, 49, 51, 52, 53, 55, 56, 57], "inform": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "provid": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57], "statu": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 55, 56, 57], "run": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 24, 28, 29, 31, 32, 33, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 57], "wa": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 47, 49, 51, 52, 53, 55, 57], "succes": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 47, 49, 51, 52, 53, 55, 57], "messag": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 47, 48, 49, 51, 52, 53, 55, 56, 57], "offend": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 47, 49, 51, 52, 53, 55, 57], "written": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 47, 49, 51, 52, 53, 55, 57], "name": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 47, 49, 51, 52, 53, 55, 56, 57], "alloc_statu": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 45, 47, 49, 51, 52, 53, 55, 56, 57], "bad_alloc": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 47, 49, 51, 52, 53, 55, 56, 57], "restrict": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 24, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 43, 44, 45, 47, 49, 51, 52, 53, 56, 57], "type": [0, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 28, 29, 31, 34, 35, 36, 38, 39, 42, 43, 44, 49, 51, 52, 53, 57], "relev": [0, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 53, 57], "ha": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 43, 44, 45, 46, 47, 49, 51, 52, 53, 55, 56, 57], "been": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 43, 44, 45, 46, 47, 49, 51, 52, 53, 55, 56, 57], "violat": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 24, 26, 28, 29, 31, 32, 33, 34, 36, 38, 39, 43, 44, 45, 47, 49, 51, 52, 53, 57], "analysi": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 18, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 48, 49, 51, 52, 53, 57], "phase": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 18, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 48, 49, 51, 52, 53, 57], "fail": [0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 23, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 45, 47, 51, 52, 53, 57], "factor_statu": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 28, 29, 31, 34, 36, 38, 39, 43, 44, 51, 52, 53, 57], "10": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 26, 28, 29, 31, 34, 36, 38, 39, 43, 44, 45, 49, 51, 52, 53, 55, 57], "11": [0, 3, 4, 5, 6, 9, 10, 11, 12, 14, 15, 23, 28, 29, 31, 34, 38, 39, 43, 44, 45, 47, 51, 52, 53, 57], "linear": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 47, 48, 49, 51, 52, 53, 56, 57], "equat": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 18, 22, 23, 28, 29, 31, 34, 36, 38, 39, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 56, 57], "16": [0, 2, 3, 5, 6, 9, 10, 11, 12, 13, 14, 15, 20, 27, 28, 29, 30, 31, 34, 37, 38, 39, 40, 43, 50, 51, 52, 53, 54, 57], "ill": [0, 3, 5, 6, 9, 11, 12, 13, 28, 29, 31, 34, 38, 39, 43, 44, 51, 52, 53, 57], "condit": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 28, 29, 31, 34, 35, 38, 39, 43, 44, 46, 48, 49, 51, 52, 53, 57], "further": [0, 3, 5, 6, 9, 11, 12, 13, 17, 19, 24, 28, 29, 31, 32, 33, 34, 35, 38, 39, 43, 45, 49, 51, 52, 53, 56, 57], "progress": [0, 3, 5, 6, 9, 10, 11, 12, 13, 15, 28, 29, 31, 34, 38, 39, 43, 44, 51, 52, 53, 57], "imposs": [0, 3, 5, 6, 9, 11, 12, 13, 28, 29, 31, 34, 38, 39, 43, 51, 52, 53, 57], "too": [0, 3, 4, 5, 6, 9, 11, 13, 18, 28, 29, 31, 34, 35, 38, 39, 43, 46, 48, 49, 51, 52, 53, 55, 56, 57], "happen": [0, 3, 4, 5, 6, 9, 11, 13, 17, 28, 29, 31, 34, 35, 38, 39, 43, 51, 52, 53, 55, 57], "small": [0, 3, 4, 5, 6, 9, 11, 13, 18, 28, 29, 31, 34, 36, 38, 39, 43, 48, 49, 51, 52, 53, 55, 56, 57], "also": [0, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 56, 57], "symptomat": [0, 3, 4, 5, 6, 9, 11, 13, 28, 29, 31, 34, 38, 39, 43, 51, 52, 53, 55, 57], "badli": [0, 3, 4, 5, 6, 9, 11, 13, 28, 29, 31, 34, 38, 39, 43, 51, 52, 53, 55, 57], "scale": [0, 1, 2, 3, 4, 5, 6, 9, 11, 13, 15, 20, 22, 26, 27, 28, 29, 30, 31, 34, 36, 37, 38, 39, 40, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "19": [0, 3, 4, 5, 6, 9, 10, 11, 13, 28, 29, 31, 34, 38, 39, 43, 51, 52, 53, 55, 57], "reach": [0, 3, 4, 5, 6, 9, 11, 13, 28, 29, 31, 34, 35, 38, 39, 42, 43, 51, 52, 53, 55, 57], "82": [0, 3, 11, 34, 51, 53], "forc": [0, 3, 11, 34, 35, 51, 53, 55], "solver": [0, 3, 10, 11, 12, 13, 15, 34, 35, 38, 43, 44, 47, 51, 52, 53, 55], "last": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 47, 49, 51, 52, 53, 55, 56, 57], "attempt": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 47, 49, 51, 52, 53, 55, 56, 57], "which": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 47, 48, 49, 51, 52, 53, 55, 56, 57], "ocur": [], "cg_iter": [0, 4, 5, 13, 14, 34, 38, 39, 51, 53], "f_eval": [0, 3, 11, 51, 53, 55], "g_eval": [0, 3, 11, 51, 53, 55], "h_eval": [0, 3, 11, 34, 51, 53, 55], "factorization_max": [0, 34, 51, 53], "sub": [0, 11, 34, 36, 44, 51, 53], "factorization_statu": [0, 5, 6, 9, 13, 15, 29, 31, 34, 38, 39, 51, 53, 57], "max_entries_factor": [0, 34, 43, 51, 52, 53], "factorization_integ": [0, 6, 9, 13, 14, 15, 29, 31, 34, 36, 38, 39, 44, 51, 53, 57], "workspac": [0, 6, 8, 9, 13, 14, 15, 18, 29, 31, 34, 35, 38, 39, 44, 48, 49, 51, 53, 56, 57], "factorization_r": [0, 6, 9, 13, 14, 15, 29, 31, 34, 36, 38, 39, 44, 51, 53, 57], "obj": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 17, 19, 24, 28, 29, 31, 32, 34, 38, 39, 43, 51, 52, 53, 57], "best": [0, 3, 6, 9, 11, 13, 14, 28, 29, 31, 34, 35, 38, 39, 51, 53, 57], "estim": [0, 3, 4, 5, 6, 9, 11, 13, 14, 15, 17, 18, 19, 24, 28, 29, 31, 32, 33, 34, 38, 39, 43, 44, 48, 49, 51, 52, 53, 55, 56, 57], "determin": [0, 3, 6, 9, 11, 13, 14, 15, 29, 31, 34, 35, 38, 39, 44, 49, 51, 53, 57], "norm_g": [0, 34, 53], "current": [0, 2, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57], "spent": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 26, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 57], "preprocess": [0, 6, 9, 13, 14, 28, 29, 31, 34, 38, 39, 44, 51, 53, 57], "analys": [0, 4, 5, 6, 9, 10, 12, 13, 15, 29, 31, 34, 36, 38, 39, 43, 44, 48, 49, 51, 52, 53, 57], "clock_tot": [0, 3, 6, 8, 9, 10, 11, 12, 13, 14, 15, 26, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 57], "clock_preprocess": [0, 6, 9, 13, 28, 29, 31, 34, 38, 39, 51, 53, 57], "clock_analys": [0, 6, 9, 10, 12, 13, 15, 29, 31, 34, 36, 38, 39, 43, 49, 51, 52, 53, 57], "clock_factor": [0, 6, 9, 10, 12, 13, 14, 15, 29, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 57], "clock_solv": [0, 6, 9, 10, 12, 13, 14, 29, 31, 34, 36, 38, 39, 43, 49, 51, 52, 53, 57], "trs_inform": [0, 51, 53], "gltr_inform": [0, 13, 14, 39, 51, 53], "dps_inform": 0, "psls_inform": [0, 34, 51, 53], "lms_inform": [0, 51, 53], "lms_prec_inform": [0, 51, 53], "sec_inform": 0, "sha_inform": [0, 51, 53], "releas": [1, 2, 20, 22, 27, 30, 36, 37, 40, 50, 54], "date": [1, 2, 20, 22, 27, 30, 37, 40, 50, 54], "07": [], "march": [], "2023": [1, 2, 20, 22, 27, 30, 37, 40, 50, 54], "author": [1, 2, 20, 22, 27, 30, 37, 40, 50, 54], "jaroslav": [1, 2, 20, 22, 27, 30, 37, 40, 50, 54], "fowk": [1, 2, 20, 22, 27, 30, 37, 40, 50, 54], "nick": [1, 2, 20, 22, 27, 30, 37, 40, 50, 54], "suit": [1, 2, 12, 20, 22, 27, 30, 37, 40, 43, 50, 52, 54], "open": [1, 2, 20, 22, 27, 30, 35, 37, 40, 50, 54], "sourc": [1, 2, 20, 22, 27, 30, 37, 40, 45, 50, 54], "routin": [1, 2, 20, 22, 27, 30, 34, 35, 37, 40, 44, 49, 50, 54], "singl": [2, 30, 35, 49, 55], "design": [2, 20, 27, 30, 37, 40, 50, 54], "function": [1, 2, 20, 22, 30, 40, 54], "whose": [2, 6, 9, 13, 14, 15, 28, 30, 31, 34, 35, 38, 54], "box": [2, 11, 20, 22, 51], "trb": [2, 3, 11, 22], "smooth": [2, 20, 22, 54], "m": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 22, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 49, 50, 52, 54, 56, 57], "orban": [1, 2, 20, 22, 27, 30, 37, 40, 50, 54], "d": [1, 2, 7, 11, 14, 20, 22, 27, 30, 37, 40, 44, 45, 49, 50, 54], "ph": [1, 2, 20, 22, 27, 30, 36, 37, 39, 40, 50, 54], "2003": [1, 2, 20, 22, 27, 30, 37, 40, 50, 54], "librari": [1, 2, 20, 22, 27, 30, 37, 40, 49, 50, 54], "thread": [1, 2, 6, 9, 13, 20, 22, 27, 29, 30, 37, 40, 50, 54], "safe": [1, 2, 20, 22, 27, 30, 37, 40, 50, 54], "fortran": [1, 2, 18, 20, 22, 27, 30, 35, 36, 37, 40, 48, 49, 50, 54, 55, 56], "90": [1, 2, 8, 20, 22, 27, 30, 37, 40, 50, 54], "nonlinear": [1, 2, 20, 22, 27, 30, 36, 37, 40, 50, 54], "acm": [1, 2, 20, 22, 27, 30, 36, 37, 40, 49, 50, 54], "transact": [1, 2, 20, 22, 27, 30, 36, 37, 40, 49, 50, 54], "mathemat": [1, 2, 20, 22, 27, 30, 36, 37, 40, 49, 50, 54], "softwar": [1, 2, 20, 22, 27, 30, 36, 37, 40, 49, 50, 54], "tom": [1, 2, 20, 22, 27, 30, 37, 40, 50, 54], "29": [1, 2, 20, 22, 27, 30, 35, 36, 37, 40, 49, 50, 54, 56], "353": [1, 2, 20, 22, 27, 30, 37, 40, 50, 54], "372": [1, 2, 20, 22, 27, 30, 37, 40, 50, 54], "multi": 3, "u": [3, 11, 18, 24, 32, 33, 38, 48, 49, 51, 55, 56, 57], "here": [3, 11, 44, 57], "found": [3, 6, 8, 9, 11, 12, 13, 14, 15, 17, 19, 23, 24, 29, 31, 32, 33, 38, 39, 43, 44, 45, 49, 51, 52, 56, 57], "themselv": [3, 11, 36, 49, 56], "both": [3, 49, 56], "random": [3, 25, 28, 38], "probe": 3, "locat": 3, "There": 3, "theoret": [3, 11], "guarante": [3, 11, 44], "unless": [3, 36, 55], "sampl": [1, 3, 22, 25], "huge": [3, 4, 5], "realist": 3, "dimens": [3, 11, 14, 35, 36, 38, 39, 41, 43, 44, 45, 49, 52], "nonconvex": [3, 11], "attempts_max": 3, "far": 3, "max_ev": [3, 11], "sampling_strategi": 3, "uniformli": [3, 55], "spread": 3, "latin": [1, 3, 22, 25], "hypercub": [1, 3, 22, 25], "hypercube_discret": 3, "hyper": 3, "cube": 3, "discret": 3, "stategi": 3, "infin": [3, 4, 5, 6, 9, 10, 11, 12, 13, 15, 17, 23, 28, 29, 31, 35, 38, 39, 43, 49, 51, 52, 57], "modulu": [3, 4, 5, 6, 9, 10, 11, 13, 28, 29, 31, 38, 39, 51, 56, 57], "regard": [3, 4, 5, 6, 9, 10, 11, 13, 14, 28, 29, 31, 38, 39, 41, 51, 57], "random_multistart": 3, "multistart": [3, 11], "oppos": 3, "ugo_opt": [3, 11], "ugo": [3, 11, 20, 22], "lhs_option": 3, "lh": [1, 3, 22], "trb_option": [3, 11], "x_l": [3, 4, 5, 6, 9, 10, 11, 13, 28, 29, 31, 38, 39, 51, 55, 57], "x_u": [3, 4, 5, 6, 9, 10, 11, 13, 28, 29, 31, 38, 39, 51, 55, 57], "norm_pg": [3, 4, 5, 11, 51], "univariate_glob": [3, 11], "univari": [3, 11, 20, 22, 55], "multivariate_loc": [3, 11], "multivari": [3, 11, 20, 22], "clock_univariate_glob": [3, 11], "clock_multivariate_loc": [3, 11], "ugo_inform": [3, 11], "lhs_inform": [3, 11], "trb_inform": [3, 11], "determinist": [11, 20, 22], "partit": 11, "although": [11, 35, 36], "altern": [11, 13, 28, 38, 44, 49, 56], "bgo": [11, 20, 22], "sometim": 11, "prefer": [4, 11, 31, 38, 43, 52], "dictionary_s": 11, "hash": [1, 11, 22], "lipschitz_lower_bound": [11, 55], "constant": [5, 6, 9, 11, 12, 13, 14, 17, 19, 28, 29, 31, 38, 39, 43, 52, 55], "1e": 11, "ensur": [8, 11, 34, 38, 39, 49, 57], "estimt": 11, "lipschitz": [11, 55], "lipschitz_reli": 11, "reliabl": [11, 55], "lipschiz": 11, "largest": [4, 11, 15, 18, 24, 28, 32, 48, 49, 57], "observ": 11, "lipschitz_control": 11, "stop_length": [11, 55], "delta": [11, 12, 19, 26, 33, 52], "origin": [11, 35, 36, 48], "delta_0": 11, "stop_f": 11, "gap": 11, "prune": 11, "cannot": [11, 26, 35], "consider": 11, "perform_local_optim": 11, "impov": 11, "judici": 11, "hash_opt": 11, "91": 11, "tabl": [1, 11, 21, 22, 36, 49, 56], "vertic": 11, "room": 11, "length_ratio": 11, "ratio": [4, 5, 11, 18, 36, 38], "final": [6, 7, 8, 9, 11, 13, 16, 18, 21, 23, 25, 26, 28, 29, 31, 34, 35, 39, 41, 42, 45, 46, 47, 48], "f_gap": 11, "lowest": 11, "why_stop": 11, "why": 11, "did": [11, 17, 19], "wil": 11, "enough": [8, 11, 45], "optima": 20, "least": [4, 6, 9, 13, 14, 17, 19, 20, 22, 24, 25, 29, 31, 32, 33, 34, 39, 40, 57], "them": [4, 20, 55], "over": [6, 9, 20, 22, 29, 31, 35, 38, 39, 55, 57], "interv": [20, 22, 38, 55, 57], "stochast": [20, 22], "dgo": [20, 22], "abov": [4, 5, 6, 7, 9, 10, 13, 17, 19, 22, 28, 29, 31, 35, 38, 39, 49, 56, 57], "modul": 22, "link": [22, 36, 49, 56], "transpar": 22, "underli": 22, "unconstrain": [0, 22, 30, 34, 35, 53], "arc": [4, 6, 9, 13, 17, 22, 29, 54], "tru": [22, 54], "nl": [22, 30], "constrain": [4, 5, 6, 14, 22, 30, 31, 37, 38], "page": 22, "sum": [6, 9, 18, 24, 29, 30, 31, 32, 33, 34], "squar": [4, 17, 19, 22, 32, 33, 34, 40, 56], "mathbf": 38, "frac": [4, 5, 6, 9, 10, 12, 13, 14, 17, 19, 24, 31, 32, 33, 34, 38, 39, 43, 52], "sum_": [6, 9, 13, 14, 31, 34, 38], "w_i": 34, "c_i": [34, 38, 57], "equiv": 34, "c": [4, 9, 10, 13, 14, 17, 28, 29, 31, 34, 35, 36, 38, 39, 44, 45, 55, 57], "2_w": 34, "ldot": [4, 9, 10, 13, 14, 15, 28, 29, 31, 34, 38, 39, 43, 44, 52, 56, 57], "residu": [4, 6, 9, 10, 13, 14, 15, 23, 24, 28, 29, 31, 32, 33, 34, 36, 38, 39, 44, 49, 56, 57], "nabla_x": 34, "partial": [34, 56], "x_i": [34, 57], "nabla_": 34, "x_j": [6, 9, 13, 14, 31, 34, 38], "signific": 34, "proport": 34, "univers": 34, "zero": [4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 17, 18, 19, 28, 29, 31, 34, 35, 36, 38, 39, 41, 43, 44, 45, 48, 49, 52, 55, 56, 57], "x_k": 34, "trial": 34, "s_k": [26, 34], "sought": 34, "correct": [10, 34, 44], "chosen": [34, 35, 36, 43, 44, 48, 49, 52, 55], "m_k": 34, "": [6, 7, 9, 13, 14, 26, 28, 31, 34, 35, 36, 41, 44, 45, 46, 48, 49, 56], "built": [26, 34], "around": [34, 57], "basic": [10, 22, 34, 36, 37], "t_k": 34, "anoth": [1, 8, 22, 34, 57], "rho": [13, 34], "_r": 34, "term": [5, 6, 9, 10, 12, 13, 14, 15, 17, 19, 28, 29, 31, 34, 35, 38, 39, 43, 52], "sigma_k": 34, "_": [12, 17, 18, 19, 34, 36, 43, 48, 49, 52, 56], "power": [12, 17, 24, 32, 34, 43], "sqrt": [12, 17, 19, 24, 32, 33, 34, 43, 49, 52], "definit": [5, 6, 9, 10, 12, 13, 22, 31, 34, 36, 38, 39, 43, 44, 45, 48, 49, 50, 52], "includ": [13, 28, 34, 35, 38, 49, 56], "prevent": [34, 35], "adjust": [4, 5, 6, 9, 13, 14, 28, 29, 31, 34, 38, 39, 57], "truncat": 34, "taylor": [6, 9, 12, 29, 31, 34, 39, 43, 52], "seri": [6, 9, 29, 31, 34, 36, 39], "reli": [18, 34, 49, 56], "being": [34, 35, 38], "abl": [34, 35], "variou": [34, 37, 38], "differ": [26, 34, 35, 47], "we": [34, 39, 44], "jacobian": [4, 9, 13, 14, 28, 29, 31, 34, 35, 38, 39, 57], "mbox": [4, 5, 6, 9, 10, 13, 28, 29, 31, 34, 38, 39, 45, 57], "y": [6, 9, 10, 13, 14, 26, 28, 29, 31, 34, 35, 38, 39, 43, 44, 45, 46, 49, 52, 56, 57], "ell": 34, "y_": 34, "where": [4, 5, 6, 9, 10, 12, 13, 14, 17, 19, 24, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 43, 44, 45, 49, 51, 52, 56, 57], "c_": 34, "h_1": 34, "h_m": 34, "w": [4, 6, 9, 13, 14, 29, 31, 34], "gauss": 34, "newton": [24, 32, 33, 34, 41, 55], "tensor": 34, "cdot": 34, "shorthand": 34, "scalar": [5, 6, 9, 10, 12, 13, 14, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 52, 57], "h_i": 34, "unsymmetr": [4, 9, 10, 13, 14, 15, 18, 22, 28, 29, 31, 34, 38, 39, 43, 44, 45, 47, 49, 50, 52, 56, 57], "conveni": [4, 9, 13, 14, 28, 29, 31, 34, 38, 39, 43, 44, 49, 52, 56, 57], "input": [4, 5, 6, 8, 9, 10, 13, 14, 28, 29, 31, 34, 35, 36, 38, 39, 42, 43, 44, 49, 52, 56, 57], "let": 34, "ast": [4, 6, 9, 13, 14, 28, 29, 31, 34, 38, 39, 43, 44, 52, 56, 57], "a_val": [4, 9, 10, 13, 14, 15, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 52, 56, 57], "a_": [4, 9, 10, 13, 14, 15, 18, 23, 28, 29, 31, 34, 36, 38, 39, 43, 44, 48, 49, 52, 56, 57], "leq": [4, 5, 6, 9, 10, 12, 13, 14, 15, 19, 28, 29, 31, 33, 34, 36, 38, 39, 43, 44, 45, 46, 49, 52, 56, 57], "a_row": [4, 9, 13, 14, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 52, 56, 57], "a_col": [4, 9, 10, 13, 14, 15, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 52, 56, 57], "a_n": [4, 9, 10, 13, 14, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 49, 52, 56, 57], "a_ptr": [4, 9, 10, 13, 14, 15, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 52, 56, 57], "onc": [4, 9, 13, 14, 19, 28, 29, 31, 33, 34, 35, 38, 39, 43, 44, 52, 56, 57], "columnsar": [4, 9, 13, 14, 28, 29, 31, 34, 38, 39, 43, 44, 52, 56, 57], "As": [4, 9, 10, 13, 14, 28, 29, 31, 34, 38, 39, 43, 44, 52, 56, 57], "If": [5, 6, 9, 12, 13, 14, 18, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 48, 49, 52, 57], "neq": [5, 6, 9, 12, 13, 14, 34, 36, 38, 39, 43, 44, 49, 52, 56], "ii": [5, 6, 9, 12, 13, 14, 34, 36, 38, 39, 43, 44, 49, 52], "purpos": [5, 6, 9, 12, 13, 14, 34, 36, 38, 39, 43, 44, 49, 52], "multipl": [5, 6, 9, 12, 13, 14, 34, 36, 38, 39, 43, 44, 49, 52], "alpha": [5, 6, 9, 12, 13, 14, 34, 36, 38, 39, 43, 44, 49, 52], "suffic": [4, 5, 6, 9, 12, 13, 14, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 52, 57], "inner": [4, 5, 6, 9, 12, 13, 14, 17, 19, 24, 28, 29, 31, 32, 33, 34, 38, 39, 43, 47, 52, 57], "jacobian_avail": 34, "geq": [4, 5, 6, 9, 10, 12, 13, 15, 17, 23, 24, 28, 29, 31, 32, 34, 38, 39, 43, 45, 57], "transit": 34, "mode": [19, 34], "tj": 34, "weight_update_strategi": 34, "reset": [4, 5, 6, 9, 13, 14, 17, 18, 19, 24, 28, 29, 31, 32, 33, 34, 38, 39, 48, 49, 55, 56, 57], "imit": 34, "gpt": 34, "stop_c_absolut": 34, "_2": [4, 24, 32, 33, 34], "stop_c_rel": 34, "x_": 34, "satisfi": [4, 5, 6, 9, 10, 12, 13, 14, 19, 28, 29, 31, 33, 34, 35, 38, 39, 43, 46, 51, 52, 57], "g_": [34, 44], "accord": [4, 5, 34], "initial_inner_weight": 34, "gn": 34, "decrea": 34, "unsucc": [34, 51, 53], "switch_to_newton": 34, "newto": 34, "switch": [6, 9, 13, 18, 29, 34, 48, 49, 56], "soon": [4, 5, 6, 9, 13, 23, 29, 31, 34, 49, 56, 57], "magic_step": 34, "magic": 34, "print_obj": 34, "rather": [4, 5, 12, 28, 31, 34, 36, 38, 39, 49, 51, 56], "subproblem_opt": 34, "len": 34, "trim": 34, "enclos": 34, "rqs_option": [0, 34], "rq": [12, 22, 34, 40], "glrt_option": 34, "glrt": [22, 34, 40, 43], "bsc_option": 34, "bsc": [1, 22, 34], "roots_opt": [6, 9, 29, 34], "root": [1, 6, 9, 22, 29, 34], "j_type": 34, "j_ne": 34, "j_row": 34, "j_col": 34, "j_ptr": 34, "p_type": [34, 42], "p_ne": 34, "p_row": 34, "p_col": 34, "p_ptr": 34, "follow": [34, 35, 36, 49, 56, 57], "argument": [8, 28, 34, 49], "sparse_by_column": [4, 8, 9, 13, 14, 28, 29, 31, 34, 38, 39, 43, 44, 52, 56, 57], "dense_by_column": [4, 8, 9, 13, 14, 28, 29, 31, 34, 38, 39, 43, 44, 52, 56, 57], "intent": [34, 38], "ad": [4, 6, 9, 26, 34], "some": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 24, 28, 29, 31, 32, 33, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 56, 57], "p_": 34, "presum": 34, "eval_c": 34, "eval_j": 34, "eval_hprod": 34, "eval_": 34, "producr": 34, "15": [6, 9, 10, 13, 14, 17, 19, 29, 31, 34, 43, 44, 49, 52], "bad_ev": 34, "suppli": [4, 13, 14, 34], "c_eval": 34, "j_eval": 34, "long": [6, 9, 13, 14, 15, 29, 31, 34, 35, 36, 38, 39, 43, 44, 49, 52, 56, 57], "factorization_averag": 34, "averag": [4, 5, 6, 9, 13, 24, 28, 29, 31, 32, 33, 34, 39, 57], "per": [4, 5, 13, 24, 32, 33, 34, 51], "nls_solv": 34, "norm_c": 34, "_w": [4, 34], "subproblem_inform": 34, "rqs_inform": 34, "glrt_inform": 34, "bsc_inform": 34, "roots_inform": [6, 9, 29, 34], "stop_pg_absolut": 51, "initial_radiu": [39, 51, 53], "radiu": [12, 14, 19, 33, 39, 51, 52, 53], "maximum_radiu": [51, 53], "stop_rel_cg": 51, "reduct": [4, 13, 18, 35, 49, 51, 57], "resuidu": 51, "radius_increas": [51, 53], "radius_reduc": [51, 53], "radius_reduce_max": [51, 53], "retrospective_trust_region": [51, 53], "retrospect": [51, 53], "renormalize_radiu": [51, 53], "two_norm_tr": 51, "ellipsoid": [12, 19, 22, 40, 51, 52], "exact_gcp": 51, "accurate_bqp": 51, "intersect": [51, 52], "feasibl": [5, 6, 9, 10, 13, 14, 27, 28, 29, 31, 35, 38, 39, 51, 57], "prescrib": [44, 51], "accuraci": [4, 5, 6, 9, 13, 28, 29, 31, 35, 39, 41, 44, 51, 57], "much": [6, 7, 9, 12, 13, 14, 29, 31, 38, 39, 43, 44, 46, 51, 52, 57], "cheaper": 51, "cg_maxit": [4, 5, 13, 14, 38, 39, 51], "n_free": 51, "free": [13, 51], "trb_solv": 51, "pair": [4, 5, 6, 9, 13, 26, 28, 29, 31, 39, 43, 52, 54, 57], "aim": [4, 5, 6, 9, 12, 13, 14, 17, 19, 24, 28, 29, 31, 32, 33, 38, 39, 43, 52, 55, 57], "twice": 55, "finit": [27, 55], "subroutin": [4, 45, 55], "advantag": [7, 15, 38, 44, 45, 55, 57], "initial_point": [55, 57], "storage_incr": 55, "incremenet": 55, "storag": [7, 8, 16, 17, 18, 19, 21, 23, 24, 25, 26, 32, 33, 35, 41, 42, 45, 46, 47, 48, 55], "1000": [3, 11, 55], "buffer": 55, "core": [36, 49, 55, 56], "write": [4, 5, 6, 9, 12, 13, 14, 17, 19, 24, 28, 29, 31, 32, 33, 35, 38, 39, 42, 43, 49, 52, 55, 56], "lipschitz_estimate_us": 55, "what": 55, "sort": [35, 44, 55], "contant": 55, "costant": 55, "next_interval_select": 55, "how": [4, 5, 6, 7, 9, 12, 13, 14, 15, 29, 31, 35, 38, 39, 43, 44, 52, 55, 57], "next": 55, "examin": [14, 44, 55], "tradit": 55, "local_improv": 55, "refine_with_newton": 55, "vacin": 55, "small_g_for_newton": 55, "absolut": [6, 9, 12, 13, 14, 15, 29, 31, 35, 38, 39, 41, 44, 55, 57], "small_g": 55, "end": [35, 42, 43, 44, 45, 52, 55], "necessari": [49, 55], "obj_suffici": 55, "global_lipschitz_const": 55, "unknown": [4, 5, 6, 9, 10, 13, 14, 15, 28, 29, 31, 39, 45, 49, 55, 56, 57], "reliability_paramet": 55, "boost": 55, "insuffici": 55, "whether": [6, 9, 13, 15, 29, 31, 35, 38, 39, 49, 55, 57], "second_derivative_avail": 55, "request": [8, 35, 36, 49, 55], "effect": [35, 55], "doubl": 55, "eval_fgh": 55, "addit": [35, 36, 43, 45, 47, 48, 49, 52, 55, 56], "second_derivatives_avail": 55, "40": [12, 28, 35, 36, 49, 55], "tim": 55, "esidu": [], "y_l": [9, 10, 13, 28, 29, 31, 38, 39, 57], "h_l": [], "yyi": [], "constraint": [4, 5, 6, 9, 10, 12, 13, 14, 15, 19, 28, 29, 31, 33, 35, 38, 39, 43, 44, 52, 57], "c_l": [6, 9, 10, 13, 28, 29, 31, 38, 39, 57], "c_u": [6, 9, 10, 13, 28, 29, 31, 38, 39, 57], "a_typ": [4, 9, 13, 14, 28, 29, 31, 36, 38, 39, 43, 44, 49, 52, 56, 57], "scaled_ident": [5, 6, 9, 12, 13, 14, 15, 31, 36, 38, 39, 43, 44, 49, 52], "now": [5, 6, 9, 10, 12, 13, 14, 36, 38, 39, 43, 44, 48, 49, 52], "AS": [], "ax": [4, 9, 10, 13, 15, 23, 24, 28, 29, 31, 32, 33, 38, 39, 49, 56, 57], "minu": [4, 5, 6, 9, 10, 13, 28, 29, 31, 35, 38, 39, 57], "primal": [4, 5, 6, 9, 10, 13, 14, 28, 29, 31, 35, 38, 39, 57], "dual": [4, 5, 6, 9, 10, 13, 14, 22, 28, 29, 31, 35, 37, 38, 39, 57], "interior": [6, 9, 10, 22, 27, 28, 29, 31, 37, 39, 57], "infeas_max": [6, 9, 29, 31, 39, 57], "infeas": [4, 5, 6, 9, 13, 14, 28, 29, 31, 35, 38, 39, 57], "reduce_infea": [6, 9, 29, 31, 39], "flag": [6, 9, 18, 29, 31, 38, 39, 48, 57], "muzero_fix": [6, 9, 29, 31], "barrier": [6, 9, 14, 29, 31, 38, 39, 57], "restore_problem": [6, 9, 13, 29, 31, 38, 39, 57], "restor": [6, 9, 13, 29, 31, 35, 38, 39, 57], "noth": [6, 9, 13, 29, 31, 38, 39, 57], "indicator_typ": [6, 9, 29, 31, 39], "activ": [6, 9, 10, 13, 22, 29, 31, 35, 37, 38, 39], "distanc": [6, 9, 13, 14, 29, 31, 39], "nearest": [6, 9, 29, 31, 39, 57], "indicator_p_tol": [6, 9, 29, 31, 39], "indicator_tol_pd": [6, 9, 29, 31, 39], "correspond": [6, 9, 19, 29, 31, 33, 35, 36, 38, 39, 43, 45, 52, 57], "multipli": [6, 9, 10, 12, 13, 14, 17, 18, 19, 24, 28, 29, 31, 32, 33, 35, 38, 39, 43, 48, 52, 57], "indicator_tol_tapia": [6, 9, 29, 31, 39], "previou": [6, 9, 12, 17, 19, 24, 29, 31, 32, 33, 38, 39, 43, 52], "trajectori": [6, 9, 29], "zhang": [6, 9, 29], "zhao": [6, 9, 29], "sun": [6, 9, 29], "ultim": [6, 9, 29, 38], "mix": [6, 9, 29], "series_ord": [6, 9, 29], "puiseux": [6, 9, 29, 31, 39], "fit": [1, 6, 9, 22, 29, 31, 39], "path": [6, 9, 29, 31, 39], "sif_file_devic": [4, 5, 6, 9, 13, 14, 28, 29, 31, 38, 39], "sif": [4, 5, 6, 9, 13, 14, 28, 29, 31, 38, 39], "describ": [4, 5, 6, 9, 10, 12, 13, 14, 15, 28, 29, 31, 36, 38, 39, 43, 44, 49, 52, 56, 57], "qplib_file_devic": [6, 9, 13, 28, 29], "qplib": [1, 6, 9, 13, 22, 28, 29, 42], "stop_abs_p": [6, 9, 13, 29], "stop_rel_p": [6, 9, 13, 29], "stop_abs_d": [6, 9, 13, 29], "stop_rel_d": [6, 9, 13, 29], "stop_abs_c": [6, 9, 13, 29], "complementar": [6, 9, 13, 29, 31, 39, 57], "stop_rel_c": [6, 9, 13, 29], "perturb_h": [6, 9], "prfea": [6, 9, 29, 31, 39, 57], "closer": [4, 5, 6, 9, 13, 28, 29, 31, 36, 39, 57], "dufea": [6, 9, 29, 31, 39, 57], "muzero": [6, 9, 29, 31, 39], "tau": [6, 9, 29], "attach": [6, 9, 29], "compar": [6, 9, 13, 29], "complementa": [6, 9], "assess": [6, 9, 29, 44], "gamma_c": [6, 9, 29], "individu": [6, 9, 29], "gamma_f": [6, 9, 29], "potential_unbound": [6, 9, 29, 31], "side": [6, 9, 29, 31, 36, 44, 49, 56], "analyt": [6, 9, 29, 31, 39], "center": [6, 9, 22, 27, 29, 31, 39, 49, 57], "identical_bounds_tol": [4, 5, 6, 9, 13, 28, 29, 31, 39, 57], "mu_lung": [6, 9, 29], "extrapol": [6, 9, 29, 31, 39], "mu": [6, 9, 24, 29, 31, 39, 57], "indicator_tol_p": [6, 9, 29, 31, 39], "deem": [6, 9, 29, 31, 35, 39], "remove_depend": [6, 9, 13, 14, 29, 31, 39, 44, 57], "equal": [6, 9, 10, 13, 14, 22, 29, 31, 35, 37, 38, 39, 44, 52, 57], "treat_zero_bounds_as_gener": [6, 9, 13, 29, 31, 38, 39, 57], "were": [6, 9, 12, 13, 29, 31, 38, 39, 57], "treat_separable_as_gener": [6, 9], "just_feas": [6, 9, 29, 31, 57], "separ": [6, 9, 22, 31, 36, 37, 49, 56], "structur": [6, 7, 9, 14, 18, 35, 36, 44, 49, 56], "ignor": [6, 9, 43, 49, 52], "getdua": [6, 9, 29, 31], "advanc": [4, 6, 9, 29, 31], "obtain": [6, 8, 9, 17, 18, 19, 24, 26, 28, 29, 31, 32, 33, 35, 36, 39, 44, 45, 48, 49, 56], "decid": [6, 9, 29, 31, 39], "every_ord": [6, 9, 29], "up": [1, 6, 9, 21, 22, 26, 29, 35, 49], "feasol": [6, 9, 29, 31, 39], "perturb": [6, 9, 28, 29, 31, 36, 38, 39, 44, 49, 57], "close": [6, 9, 29, 31, 39], "move": [6, 9, 29, 31, 36, 39], "onto": [6, 9, 29, 31, 39], "balance_initial_complentar": [6, 9, 29, 31], "complemetar": [6, 9, 29, 31, 57], "balanc": [6, 9, 29, 31, 57], "crossov": [6, 9, 10, 22, 29, 37], "cross": [6, 9, 29], "linearli": [6, 9, 13, 14, 15, 22, 29, 31, 35, 38, 39, 50, 57], "independ": [6, 9, 15, 22, 29, 50], "generate_sif_fil": [4, 5, 6, 9, 13, 14, 28, 29, 31, 38, 39], "generate_qplib_fil": [6, 9, 13, 28, 29], "sif_file_nam": [4, 5, 6, 9, 13, 14, 28, 29, 31, 38, 39], "qplib_file_nam": [6, 9, 13, 28, 29], "fdc_control": [], "fdc": [6, 9, 13, 14, 22, 29, 31, 39, 50, 57], "sbls_control": [], "sbl": [4, 5, 6, 9, 10, 12, 13, 14, 22, 29, 31, 39, 43, 50, 52, 57], "fit_control": [], "roots_control": [], "cro_control": [], "cro": [6, 9, 22, 29, 37], "nfact": [6, 9, 13, 29, 31, 38, 39, 57], "nbact": [6, 9, 29, 31, 39], "wast": [6, 9, 29, 31, 39], "dure": [4, 6, 9, 24, 29, 31, 32, 33, 35, 36, 38, 39, 45, 56], "linesearch": [6, 9, 13, 29, 31, 39], "cqp_solv": 9, "primal_infeas": [6, 9, 13, 28, 29, 35], "dual_infeas": [6, 9, 13, 29, 35], "complementary_slack": [6, 9, 13, 29], "complementari": [4, 5, 6, 9, 10, 13, 28, 29, 31, 38, 39, 57], "slack": [4, 5, 6, 9, 10, 13, 28, 29, 31, 38, 39, 57], "init_primal_infeas": [6, 9, 29], "ccqp": 9, "init_dual_infeas": [6, 9, 29], "init_complementary_slack": [6, 9, 29], "logarithm": [6, 9, 29, 31], "log": [6, 9, 29, 31], "boundari": [6, 9, 19, 29, 31, 33, 52, 57], "non_negligible_pivot": [6, 9, 13, 15, 29, 31, 39, 57], "pivot": [6, 9, 13, 14, 15, 18, 19, 28, 29, 31, 35, 36, 38, 39, 44, 48, 49, 56, 57], "judg": [6, 9, 13, 15, 23, 29, 31, 39, 57], "detect": [6, 9, 13, 14, 15, 29, 31, 35, 38, 39, 45, 48, 49, 57], "checkpointsit": [6, 9, 13, 29], "17": [10, 36, 38, 39, 57], "critic": [6, 8, 9, 13, 29, 38, 39], "measur": [6, 9, 13, 29, 35], "fall": [6, 9, 13, 23, 29, 49, 56], "achiev": [6, 9, 13, 29, 36], "checkpointstim": [6, 9, 13, 29], "find_depend": [6, 9, 13, 14, 29, 31, 39, 57], "clock_find_depend": [6, 9, 13, 14, 29, 31, 39, 57], "fdc_inform": [6, 9, 13, 14, 29, 31, 39, 57], "sbls_inform": [4, 5, 6, 9, 10, 13, 14, 29, 31, 39, 57], "fit_inform": [6, 9, 29, 39], "cro_inform": [6, 9, 29], "rpd_inform": [6, 9, 13, 28, 29], "rpd": [1, 6, 9, 13, 22, 28, 29], "09": [], "program": [5, 6, 9, 10, 13, 14, 22, 28, 29, 31, 35, 38, 39, 42, 57], "cqp": [13, 22, 31, 37], "convex": [5, 6, 9, 10, 13, 14, 22, 28, 29, 31, 37, 38, 39], "inconsist": [4, 5, 6, 9, 10, 13, 14, 15, 28, 29, 31, 38, 39, 57], "23": [5, 6, 9, 12, 13, 31, 35, 38, 39, 43, 49, 52], "strict": [5, 6, 9, 12, 13, 31, 36, 38, 39, 43, 49, 52, 57], "postiv": [5, 6, 9, 10, 13], "q": [4, 5, 6, 9, 10, 12, 13, 14, 19, 28, 29, 33, 38, 39, 52], "shift": [6, 9, 13, 14, 24, 26, 31, 57], "w_j": [6, 9, 13, 14, 31], "c_stat": [9, 10, 13, 28, 29, 31, 38, 39, 57], "neg": [4, 5, 6, 9, 10, 13, 17, 19, 24, 28, 29, 31, 32, 33, 35, 36, 38, 39, 45, 48, 49, 57], "_i": [9, 10, 13, 28, 29, 31, 38, 39, 57], "li": [4, 5, 6, 9, 10, 13, 19, 28, 29, 31, 33, 38, 39, 57], "x_stat": [4, 5, 6, 9, 10, 13, 28, 29, 31, 38, 39, 57], "solve_sdlqp": [], "x0": [6, 9, 13, 14, 31], "xstat": [9, 13, 31], "stricli": 13, "dual_starting_point": 13, "simplifi": 13, "costraint": 13, "fix": [0, 3, 4, 5, 6, 9, 10, 11, 13, 14, 31, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "max_sc": [13, 38], "schur": [1, 7, 10, 13, 14, 22, 31, 36, 38, 39, 44, 45, 57], "complement": [1, 7, 10, 13, 14, 22, 31, 36, 38, 39, 44, 45, 57], "refactor": [10, 13, 28, 38], "fredholm": [13, 49], "cauchy_onli": 13, "subspac": [13, 17, 19, 24, 32, 33], "taken": [7, 13, 15, 38, 44, 45, 57], "arc_search_maxit": 13, "revert": [4, 5, 13], "explore_optimal_subspac": 13, "investig": 13, "ordinari": 13, "penalti": [13, 38], "enforc": 13, "explicitli": [13, 44], "instead": [13, 18, 26, 38, 52], "explicit": [13, 44, 49], "infeasibili": 13, "stop_cg_rel": [4, 5, 13], "stop_cg_absolut": [4, 5, 13], "cg_zero_curvatur": 13, "threshold": [5, 13, 14, 18, 28, 31, 38, 39, 48, 49, 56, 57], "curvatur": [5, 13, 17, 19], "max_growth": 13, "growth": [13, 28, 35], "without": [13, 15, 26, 28, 35, 36, 44, 48], "initial_perturb": 13, "dlp": 13, "perturbation_reduct": 13, "final_perturb": 13, "factor_optimal_matrix": 13, "augment": [13, 14, 31, 38, 39, 44, 57], "exact_arc_search": [4, 13], "piecewis": [4, 13], "ineaxt": 13, "backtrac": 13, "armijo": 13, "subspace_direct": 13, "fals": [4, 5, 13, 17, 19, 24, 26, 32, 33, 35, 36, 49, 56], "conjug": [4, 13, 14, 38, 39], "subspace_altern": 13, "overrid": 13, "subspace_arc_search": 13, "along": [13, 17, 36], "firstconstraint": 13, "encount": [13, 17, 19, 33], "symmetric_linear_solv": [10, 12, 13, 14, 15, 38, 43, 44, 52], "indefinit": [5, 6, 10, 12, 13, 15, 17, 19, 36, 38, 39, 43, 44, 49, 52], "definite_linear_solv": [10, 13, 14, 36, 38, 43, 44, 52], "unsymmetric_linear_solv": [10, 13, 15, 44], "sls_control": [], "sl": [10, 12, 13, 15, 22, 23, 36, 38, 43, 44, 48, 50, 52], "gltr_control": [], "20": [5, 6, 10, 13, 36, 44, 49], "dqp_solv": 13, "clock_search": 13, "sls_inform": [10, 12, 13, 15, 36, 38, 43, 44, 52], "scu_statu": [10, 13], "scu": [1, 10, 13, 22, 36], "scu_inform": [10, 13], "dqp": [22, 37], "lagrang": [9, 10, 12, 13, 14, 19, 28, 29, 31, 33, 38, 39, 43, 52, 57], "associ": [4, 5, 6, 9, 10, 12, 13, 14, 28, 29, 31, 35, 38, 39, 43, 52, 57], "z": [4, 5, 6, 9, 10, 13, 17, 19, 28, 29, 31, 35, 38, 39, 57], "qpb": [22, 37, 38], "rectangular": [39, 56], "itref_max": [14, 23, 31, 38, 39, 44, 57], "refin": [1, 10, 14, 22, 23, 28, 31, 38, 39, 44, 48, 49, 56, 57], "system": [1, 12, 14, 18, 22, 23, 31, 36, 38, 39, 43, 44, 45, 48, 49, 52, 56, 57], "pssibl": 39, "toth": 39, "track": [31, 39], "central": [31, 39], "never": [31, 35, 39], "major": [31, 35, 38, 39], "path_histori": [31, 39], "max_col": [7, 14, 31, 36, 38, 39, 44, 57], "indmin": [14, 15, 31, 38, 39, 44, 57], "guess": [14, 31, 38, 39, 57], "valmin": [14, 15, 31, 38, 39, 44, 57], "precon": [38, 39], "nsemib": [38, 39], "path_deriv": [31, 39], "fit_ord": [31, 39], "stop_p": [5, 31, 39, 57], "stop_d": [4, 5, 31, 39, 57], "stop_c": [5, 31, 39, 57], "theta_d": 39, "99": [21, 39], "theta_c": 39, "pivot_tol": [14, 15, 31, 35, 38, 39, 44, 57], "document": [14, 31, 36, 38, 39, 49, 56, 57], "pivot_tol_for_depend": [31, 38, 39, 57], "zero_pivot": [14, 15, 31, 38, 39, 44, 57], "inner_stop_rel": [14, 38, 39], "consid": [14, 17, 18, 19, 28, 35, 38, 39, 48, 49, 56], "invers": [14, 17, 19, 26, 38, 39, 43, 52], "inner_stop_absolut": [14, 38, 39], "mu_min": [31, 39], "inner_fraction_opt": [14, 39], "place": [17, 19, 24, 32, 33, 39], "array_syntax_worse_than_do_loop": [31, 38, 39], "f77": [31, 38, 39], "style": [31, 38, 39], "do": [31, 35, 36, 38, 39, 44, 49, 56, 57], "loop": [31, 38, 39], "f90": [31, 38, 39], "syntax": [31, 38, 39], "oper": [18, 31, 38, 39, 48, 49], "lsqp_control": [], "lsqp": [22, 37, 39], "make": [35, 38, 39, 45, 57], "nmod": [38, 39], "modifi": [12, 38, 39], "qpb_solv": [14, 39], "factorizatio": [38, 39], "phase1_tot": 39, "phase1_analys": 39, "init": 39, "phase1_factor": 39, "phase1_solv": 39, "factorizat": [10, 38, 39], "clock_phase1_tot": 39, "clock_phase1_analys": 39, "clock_phase1_factor": 39, "poi": 39, "clock_phase1_solv": 39, "lsqp_inform": 39, "qpa": [22, 37], "guis": 38, "ell_1": 38, "rho_g": 38, "rho_b": 38, "v_g": 38, "v_b": 38, "a_i": [15, 38], "bmc": [], "coeffici": [7, 15, 35, 38, 41, 44, 45, 57], "similarli": [35, 38], "capabl": 38, "howev": [38, 39], "procedur": [22, 38, 39], "weak": [38, 39], "b": [4, 7, 15, 18, 23, 24, 28, 32, 33, 36, 38, 44, 45, 46, 48, 49, 56], "faster": 38, "obsolet": [14, 15, 38, 44, 57], "infeas_check_interv": 38, "check": [8, 15, 23, 35, 38, 45], "infeas_g_improved_by_factor": 38, "infeas_b_improved_by_factor": 38, "full_max_fil": 38, "refer": [36, 38, 49, 56], "itself": [18, 38], "exce": [28, 35, 38, 56], "select": [28, 38, 44, 49, 56], "deletion_strategi": 38, "delet": [21, 23, 35, 36, 38], "lifo": 38, "k": [36, 38, 44, 49], "monitor_residu": 38, "frequenc": [17, 24, 32, 35, 38], "monitor": [18, 38, 48], "cold_start": [4, 5, 38], "cold": 38, "warm": [4, 5, 28, 38], "b_stat": [5, 38], "feas_tol": [28, 38], "increase_rho_g_factor": 38, "solve_qp": [5, 6, 9, 13, 14, 31, 38, 39], "drop": [18, 38, 56], "fac": 38, "increase_rho_b_factor": 38, "solve_within_boun": 38, "boun": 38, "multiplier_tol": 38, "multiplier_t": 38, "outsid": [38, 57], "prob": [4, 5, 38], "solve_within_bound": 38, "quantiti": [35, 38], "stage": 38, "process": [36, 38, 49, 56], "help": 38, "degener": [35, 38], "each_interv": 38, "specif": [35, 38, 45, 46, 49, 56, 57], "parametr": 38, "major_it": 38, "num_g_infea": 38, "num_b_infea": 38, "qpa_solv": 38, "infeas_g": 38, "infeas_b": 38, "merit": 38, "solve_l1qp": 38, "solve_bcl1qp": 38, "len_ulsmin": [14, 44], "ul": [10, 14, 15, 18, 22, 44, 50], "new_a": [7, 14, 43, 44, 52], "new_h": [12, 14, 43, 44, 52], "pivot_tol_for_basi": [14, 44], "ba": 14, "appropriat": 14, "eqp_solv": 14, "max_infeasibility_rel": 14, "believ": 14, "deffici": [14, 44, 57], "typic": [14, 35], "max_infeasibility_absolut": 14, "inner_stop_int": 14, "find_basis_by_transpos": [14, 44], "implicit": [14, 44, 57], "basi": [14, 28, 44], "transpos": [8, 14, 44, 56], "resolve_qp": 14, "resolv": 14, "12": [10, 14, 15, 44, 45], "13": [10, 14, 15, 44], "14": [10, 14, 15], "wrong": [14, 44], "inertia": [14, 44, 45], "unsuit": [14, 44], "unsatisfactori": [10, 14, 15], "25": [14, 24, 32, 33, 35, 42], "cg_iter_int": 14, "solve_int": 14, "eqp": [22, 37], "ratio_cg_vs_sd": [4, 5], "steepest": [4, 5, 28], "descent": [4, 5, 17], "change_max": [4, 5], "dentical_bounds_tol": 5, "zero_curvatur": 5, "exact_arcsearch": 5, "arcsearch": [4, 5], "30": [4, 5, 10, 19, 35], "charact": [4, 5, 49], "solve_bqp": [], "solve_sldqp": [6, 9, 13, 14], "bqp": [22, 37], "bqpb": [22, 37], "bqpb_solv": 6, "galahad_ccqp": 6, "matrix": [1, 7, 8, 17, 18, 19, 22, 23, 24, 26, 32, 33, 35, 40, 45, 46, 48], "special": [31, 45], "modern": [18, 31, 36, 48], "similar": 31, "often": [31, 57], "unus": [31, 48], "tha": [29, 31, 57], "use_corrector": [31, 57], "corrector": [31, 57], "lsqp_solve_qp": 31, "lpb": [22, 27, 28], "solve_lp": [28, 29], "lpb_solv": 29, "bg": 29, "galahad_clpb": 29, "lpa": [22, 27], "simplex": [22, 27, 28], "simpli": 28, "sophist": 28, "interfac": [7, 8, 16, 18, 21, 23, 25, 26, 28, 35, 41, 42, 45, 46, 47, 48, 49, 56], "hsl": [18, 28, 36, 48, 49, 56], "la04": 28, "charg": 28, "recognis": [8, 28, 42], "academ": 28, "www": [28, 49, 56], "rl": [18, 28, 48, 49, 56], "catalogu": 28, "html": [28, 49], "unavail": [28, 36, 49, 56], "enabl": 28, "max_iterative_refin": [28, 49, 56], "min_real_factor_s": [28, 49, 56], "min_integer_factor_s": [28, 49, 56], "random_number_se": 28, "seed": [25, 28], "tol_data": 28, "relative_pivot_toler": [28, 49, 56], "element": 28, "exclud": 28, "candid": 28, "growth_limit": 28, "upat": 28, "zero_toler": [28, 49, 56], "change_toler": 28, "warm_start": 28, "steepest_edg": 28, "edg": 28, "detetrmin": 28, "leav": 28, "la04_job": 28, "job": 28, "la04_job_info": 28, "extra": [7, 17, 19, 24, 28, 32, 33, 36], "unsuccesful": 28, "rinfo": 28, "35": [28, 35], "dlp_solv": [], "galahad_cdlp": [], "wcp": [22, 27], "polyhedr": [22, 27, 57], "inequ": [4, 5, 6, 9, 10, 13, 27, 28, 29, 31, 35, 38, 39, 57], "eight": [37, 40], "kind": 37, "polyhedron": 57, "defini": 57, "identifi": 57, "required_infeas_reduct": 57, "required_infeas_reducti": 57, "perturbation_strategi": 57, "relax": 57, "superlinear": 57, "mu_target": 57, "target": [30, 49, 57], "mu_accept_fract": 57, "complemtari": 57, "z_i": 57, "margin": 57, "mu_increase_factor": 57, "implicit_tol": 57, "perturb_start": 57, "subsequ": [18, 36, 57], "alpha_scal": 57, "reduce_perturb_factor": 57, "pertub": 57, "insufficiently_feas": 57, "reduce_perturb_multipli": 57, "perturbation_smal": 57, "deduc": 57, "balance_initial_complementar": 57, "record_x_statu": 57, "x_statu": 57, "report": [35, 36, 44, 49, 56, 57], "exit": [8, 17, 19, 24, 32, 33, 35, 48, 49, 57], "record_c_statu": 57, "c_statu": 57, "find_wcp": 57, "impact": 57, "c_implicit": 57, "x_implicit": 57, "y_implicit": 57, "z_implicit": 57, "wcp_solv": 57, "mu_final_target_max": 57, "ever": [10, 15, 35], "max_schur_compl": 10, "feasibility_toler": 10, "kkt": 10, "check_io": 10, "fulli": [10, 35, 36, 48, 49], "consist": [10, 15, 35, 49, 56], "refine_solut": 10, "accur": [10, 35], "uls_control": [], "ir_control": [], "ir": [1, 10, 18, 22, 43, 52], "crossover_solut": 10, "m_equal": 10, "These": 10, "resudu": [10, 15], "reorder": [10, 12, 36, 43, 44, 49, 52, 56], "uls_inform": [10, 15, 44], "ir_inform": [10, 43, 52], "half": [], "sigma": [4, 12, 17, 24, 32, 43], "euclidean": [4, 22, 24, 32, 33, 40], "normal": [4, 57], "eval_prec": 4, "revers": [4, 17, 19, 24, 32, 33, 45], "commun": [4, 17, 19, 24, 32, 33, 45], "cgl": 4, "arcsearch_max_step": 4, "infini": 4, "probl": [], "alpha_initi": 4, "inexact": [4, 35], "alpha_reduct": 4, "arcsearch_acceptance_tol": 4, "stabilisation_weight": 4, "stabilis": 4, "direct_subproblem_solv": 4, "arc_search": 4, "convert_control": [], "convert": [1, 4, 22], "solve_l": 4, "constraind": 4, "convert_inform": 4, "bll": [22, 30], "functionsus": [], "miniz": [22, 40], "oriz": [], "lstr": [22, 40], "commonli": [1, 19, 33, 43, 52], "known": [4, 5, 6, 9, 10, 12, 13, 14, 19, 28, 29, 31, 33, 35, 38, 39, 43, 49, 52, 56, 57], "possibli": 35, "relat": [35, 42, 52], "ell_2": [24, 32, 33, 43, 52], "form": [17, 18, 19, 24, 26, 32, 33, 36, 43, 44, 45, 47, 49, 52, 56], "lambda": [24, 26, 32, 33, 43, 52], "left": [12, 35, 36, 43, 44, 45, 49, 52], "begin": [43, 44, 45, 52], "cc": [43, 52], "right": [36, 43, 44, 45, 49, 52, 56], "impos": [43, 52], "effici": [12, 26, 36, 43, 44, 49, 52], "dense_factor": [43, 52], "unchang": [7, 12, 17, 19, 43, 44, 52], "new_m": [43, 52], "max_factor": [43, 52], "impli": [35, 43, 52, 57], "inverse_itmax": [43, 52], "mayb": [43, 52], "hard": [12, 17, 19, 43, 52], "taylor_max_degre": [12, 43, 52], "degre": [12, 41, 43, 47, 49, 52], "initial_multipli": [43, 52], "stop_norm": [12, 43, 52], "stop_absolute_norm": [12, 52], "stop_hard": [43, 52], "bracket": [43, 52], "start_invit_tol": [43, 52], "stop_start_invit_tol": [43, 52], "start_invitmax_tol": [43, 52], "stop_start_invitmax_tol": [43, 52], "equality_problem": [19, 52], "use_initial_multipli": [43, 52], "initialize_approx_eigenvector": [43, 52], "eigenvector": [43, 52], "force_newton": 52, "bigger": 8, "problem_fil": [12, 17, 19, 24, 32, 33, 43, 52], "load_m": [43, 52], "m_type": [43, 52], "m_ne": [43, 52], "m_row": [43, 52], "m_col": [43, 52], "m_ptr": [43, 52], "load_a": [43, 52], "solve_problem": [17, 19, 24, 32, 33, 43, 52], "m_val": [43, 52], "doe": [35, 43, 45, 52], "domin": [36, 43, 52], "len_histori": [43, 52], "_m": [12, 17, 19, 43, 52], "x_norm": [12, 24, 32, 33, 43, 52], "pole": [12, 43, 52], "lambda_1": [12, 43, 52], "eigenvalu": [12, 17, 19, 43, 45, 48, 49, 52], "hard_cas": [12, 17, 19, 43, 52], "assembl": [36, 43, 52], "build": [1, 7, 12, 22, 36, 43, 46, 52], "inolv": [43, 44, 52], "clock_assembl": [36, 43, 52], "affin": [43, 44, 52], "moinim": [12, 17, 19, 24, 32, 33], "obj_regular": [12, 17, 43], "krylov": [17, 19, 24, 32, 33], "apprixim": [], "itmax": [17, 19, 24, 32, 33], "lanczos_itmax": 19, "extra_vector": [17, 19, 24, 32, 33], "ritz_printout_devic": [17, 19], "ritz": [17, 19], "stop_rel": [17, 19, 24, 32, 33, 44], "successfulli": [17, 19, 24, 32, 33, 49], "nor": [], "stop_absolut": [17, 19, 24, 32, 33, 44], "fraction_opt": [17, 19, 24, 32, 33], "f_min": 19, "rminvr_zero": [17, 19], "f_0": [17, 19], "unitm": [17, 19, 24, 32, 33], "steihaug_toint": [19, 33], "thought": 19, "print_ritz_valu": [17, 19], "ritz_file_nam": [17, 19], "load_control": [], "restart": [17, 19, 24, 32, 33], "reentri": [17, 19, 24, 32, 33], "recal": [17, 19, 24, 32, 33], "hx": [17, 19], "exceed": [17, 19, 24, 32, 33, 35], "steihaug": 19, "31": [19, 26, 35, 47, 49, 56], "iter_pass2": [17, 19, 24, 32, 33], "pass": [17, 19, 24, 32, 33, 35], "mnormx": 19, "piv": 19, "latest": 19, "choleski": [19, 36, 45], "lanczo": 19, "tridiagona": 19, "curv": 19, "cuurvatur": 19, "rayleigh": 19, "quotient": 19, "leftmost": [17, 19], "pencil": [17, 19], "negative_curvatur": [17, 19], "stopping_rul": [17, 24, 32], "rule": [17, 24, 32], "stoping_rul": [], "freq": [3, 11, 17, 24, 32], "tri": [17, 24, 32], "min": 17, "stop_rul": [], "f0": 17, "impose_desc": 17, "strinctli": 17, "goe": 17, "xpo_norm": 17, "stope": 17, "sphere": [22, 33, 40], "squaresobject": [], "spheric": 33, "itmin": [24, 32, 33], "itmax_on_boundari": 33, "bitmax": [24, 32, 33], "outer": [24, 32, 33], "tr_": [], "time_limit": [24, 32, 33], "biter": [24, 32, 33], "biter_min": [24, 32, 33], "biter_max": [24, 32, 33], "largestt": 33, "r_norm": [24, 32, 33], "atr_norm": [24, 32, 33], "biter_mean": [24, 32, 33], "lsrt": [22, 40], "l2rt": [22, 40], "NOT": [24, 32], "tb": [24, 32], "construct": [12, 44], "induc": 12, "consequ": 12, "eigen_min": 12, "block": [1, 12, 18, 22, 44, 48, 49, 50, 56], "goldfarb": 12, "version": [12, 36, 47, 49, 56], "solve_tr_problem": 12, "solve_rq_problem": 12, "resolve_tr_problem": 12, "resolve_rq_problem": 12, "mod_1by1": 12, "mod_2by2": 12, "diagonalis": [22, 40], "gaussian": [18, 47, 48, 49, 56], "elimin": [18, 47, 48, 49, 56], "b_": 49, "common": [49, 56], "elsewher": [49, 56], "support": [1, 36], "ma27": [36, 48, 49], "sil": [22, 36, 49, 50], "_ma57": [], "_ma77": [], "hsl_ma86": [36, 49], "hsl_ma87": [36, 49], "hsl_ma97": [36, 49], "ssid": [36, 49], "spral": 49, "mump": [36, 49], "technologi": 49, "pardiso": [36, 49], "intel": 49, "mkl": 49, "pastix": [36, 49], "inria": 49, "wsmp": [36, 49], "ibm": 49, "potr": [36, 49], "sytr": [10, 13, 14, 15, 36, 44, 49], "sbtr": 49, "lapack": [36, 49, 56], "except": [35, 36, 49, 56], "netlib": [36, 49, 56], "code": [18, 35], "dummi": [36, 49, 56], "instanc": [36, 49, 56], "flexibl": [36, 49, 56], "statist": [36, 48, 49], "print_level_solv": [49, 56], "extern": [45, 55], "bit": [35, 49], "architectur": 49, "block_size_kernel": 49, "blocksiz": 49, "kernel": 49, "block_size_elimin": 49, "parallel": [36, 49, 56], "blas_block_size_factor": [49, 56], "blas_block_size_solv": [49, 56], "node_amalgam": 49, "child": 49, "node": 49, "merg": 49, "parent": 49, "fewer": 49, "initial_pool_s": 49, "task": [1, 49], "pool": 49, "max_real_factor_s": 49, "max_integer_factor_s": 49, "max_in_core_stor": 49, "array_increase_factor": [49, 56], "array_decrease_factor": [49, 56], "previous": [18, 48, 49, 56], "pivot_control": [49, 56], "numer": [1, 35, 36, 48, 49], "No": [23, 48, 49], "immedi": [48, 49], "sign": [35, 48, 49], "perm": 49, "amd": [48, 49], "provis": [45, 49], "col": [35, 49], "nest": 49, "disect": 49, "combin": [47, 49], "1x1": 49, "2x2": [48, 49], "profil": [36, 49], "wavefront": [36, 49], "characterist": 48, "full_row_threshold": 49, "regist": [48, 49], "percentag": [35, 48, 49], "100": [17, 19, 48, 49], "defa": 49, "row_search_indefinit": 49, "mc64": [48, 49], "mc77": 49, "scale_maxit": 49, "scale_thresh": 49, "minimum_pivot_toler": 49, "absolute_pivot_toler": [49, 56], "zero_pivot_toler": 49, "sol": [44, 49], "negative_pivot_toler": 49, "static_pivot_toler": 49, "static": [48, 49], "static_level_switch": 49, "consistency_toler": 49, "seek": 49, "acceptable_residual_rel": [23, 49, 56], "ceas": [23, 49, 56], "acceptable_residual_absolut": [23, 49, 56], "multiple_rh": 49, "hand": [36, 44, 49, 56], "generate_matrix_fil": 49, "matrix_file_devic": 49, "matrix_file_nam": 49, "out_of_core_directori": 49, "directori": 49, "out_of_core_integer_factor_fil": 49, "superfil": 49, "out_of_core_real_factor_fil": 49, "out_of_core_real_work_fil": 49, "out_of_core_indefinite_fil": 49, "out_of_core_restart_fil": 49, "faulti": [48, 49, 56], "alegedli": [], "permut": [35, 44, 49, 56], "wai": [49, 56], "32": [8, 35, 49, 56], "33": [8, 35, 49, 56], "alter": [36, 49], "41": [35, 49], "sequenc": [26, 49], "42": [35, 49], "43": [35, 49], "50": [24, 32, 33, 35, 49, 56], "info": [18, 36, 45, 48, 49, 56], "101": 49, "more_info": [49, 56], "failur": [18, 44, 45, 47, 48, 49, 56], "out_of_rang": [36, 49, 56], "rang": [4, 17, 18, 19, 24, 32, 33, 36, 48, 49, 56], "duplic": [8, 18, 25, 36, 48, 49, 56], "missing_diagon": [36, 49], "miss": [8, 36, 49], "allegedli": [36, 49], "max_depth_assembly_tre": 49, "depth": 49, "assembli": [48, 49], "tree": 49, "nodes_assembly_tre": 49, "real_size_desir": 49, "desir": [49, 56], "integer_size_desir": 49, "dat": 49, "real_size_necessari": 49, "integer_size_necessari": 49, "real_size_factor": 49, "integer_size_factor": 49, "entries_in_factor": [49, 56], "max_task_pool_s": 49, "max_front_s": 49, "forecast": [48, 49], "front": [48, 49], "compresses_r": 49, "compress": [18, 48, 49, 56], "compresses_integ": 49, "two_by_two_pivot": 49, "delayed_pivot": 49, "delai": [48, 49], "pivot_sign_chang": 49, "static_pivot": 49, "first_modified_pivot": 49, "negative_eigenvalu": 49, "num_zero": 49, "iterative_refin": [49, 56], "flops_assembli": 49, "anticip": [48, 49], "flops_elimin": 49, "flops_bla": 49, "bla": [18, 48, 49], "largest_modified_pivot": 49, "definiten": 49, "minimum_scaling_factor": 49, "maximum_scaling_factor": 49, "condition_number_1": 49, "esim": 49, "categori": [48, 49], "condition_number_2": 49, "backward_error_1": 49, "backward": [48, 49], "backward_error_2": 49, "forward_error": 49, "forward": [48, 49], "yt": 49, "sils_ainfo": 49, "sils_finfo": 49, "sils_sinfo": 49, "ma57_ainfo": 49, "ma57": [36, 48, 49], "ma57_finfo": 49, "ma57_sinfo": 49, "ma77_inform": [], "ma77": [36, 49], "ma86_inform": [], "ma86": [36, 49], "ma87_inform": [], "ma87": [36, 49], "ma97_inform": [], "ma97": [36, 49], "ssids_inform": 49, "mc61_info": [36, 49], "mc61": [36, 49], "mc61_rinfo": [36, 49], "mc64_inform": [], "mc68_inform": [], "mc68": 49, "mc77_info": 49, "mc77_rinfo": 49, "pardiso_error": 49, "pardiso_iparm": 49, "pardiso_dparm": 49, "mkl_pardiso_error": 49, "mkl_pardiso": [36, 49], "mkl_pardiso_iparm": 49, "wsmp_error": 49, "wsmp_iparm": 49, "wsmp_dparm": 49, "lapack_error": [49, 56], "order_extern": 49, "analyse_extern": 49, "factorize_extern": 49, "pha": 49, "solve_extern": 49, "clock_order_extern": 49, "clock_analyse_extern": 49, "clock_factorize_extern": 49, "clock_solve_extern": 49, "seven": 50, "\u00fcbersolv": [22, 50], "gl": [22, 50, 56], "subset": [22, 36, 50], "parallelis": [36, 49, 56], "multifront": [36, 48, 49], "ye": [36, 49], "openmp": [36, 49], "_ma86": [], "look": [36, 49], "_ma87": [], "_ma97": [], "cuda": [36, 49], "mpi": [36, 49], "pbtr": [36, 49], "hsl_ma57": [36, 49], "hsl_ma77": [36, 49], "produc": [35, 49, 56], "thereof": [36, 49], "introduc": [45, 49], "featur": [36, 49, 56], "archiv": [18, 48, 49, 56], "To": [18, 48, 49, 56], "hsl_mc68": 49, "hsl_mc64": 49, "collect": [49, 56], "franc": 49, "suffici": [35, 45, 49], "org": 49, "oneapi": 49, "math": 49, "onemkl": 49, "com": 49, "content": 49, "en": 49, "develop": 49, "tool": 49, "solverstack": 49, "gitlabpag": 49, "fr": 49, "alphawork": 49, "tech": 49, "dpotrf": 49, "dsytrf": 49, "dpbtrf": 49, "machin": [35, 49, 56], "tune": [49, 56], "meti": 49, "karypi": 49, "lab": 49, "glaro": 49, "dtc": 49, "umn": 49, "edu": 49, "gkhome": 49, "view": 49, "subsect": [], "sls_refer": [], "scientif": [36, 49, 56], "agullo": 49, "amestoi": 49, "buttari": 49, "excel": 49, "guermouch": 49, "rouet": 49, "robust": [36, 49], "awar": 49, "map": 49, "siam": [36, 49], "journal": [36, 49], "38": [35, 49], "2016": 49, "c256": 49, "c279": 49, "duff": 49, "koster": 49, "asynchron": 49, "distribut": 49, "schedul": 49, "applic": 49, "2001": 49, "gupta": 49, "watson": 49, "research": 49, "rc": 49, "21886": 49, "ny": 49, "10598": 49, "usa": 49, "2010": 49, "henon": 49, "ramet": 49, "roman": 49, "high": 49, "28": [35, 49], "2002": 49, "301": 49, "321": 49, "hogg": 49, "ovtchinnikov": 49, "scott": [36, 49], "gpu": 49, "2014": [36, 49], "articl": [36, 49], "o": [42, 49], "schenk": 49, "auml": [], "rtner": [], "futur": [45, 49], "2004": 49, "475": 49, "487": 49, "On": 49, "fast": 49, "electron": 49, "2006": 49, "158": 49, "179": 49, "mumps_error": 49, "mumps_info": 49, "mumps_rinfo": 49, "pastix_info": 49, "class": [45, 56], "gartner": 49, "analyse_matrix": 49, "factorize_matrix": [44, 49, 56], "solve_system": [44, 49, 56], "partial_solve_system": 49, "ldu": [], "mx": 49, "pldup": 49, "pl": 49, "handl": 56, "whenev": [26, 56], "ma28": [18, 56], "hsl_ma48": 56, "getr": [10, 56], "he": 56, "p_r": 56, "p_c": 56, "ma33": [18, 56], "dgetrf": 56, "initial_fill_in_factor": 56, "max_factor_s": 56, "rook": 56, "complet": [35, 36, 56], "pivot_search_limit": 56, "minimum_size_for_btf": 56, "stop_if_singular": 56, "singular": [18, 44, 45, 47, 56], "switch_to_full_code_dens": 56, "densiti": [18, 56], "tran": 56, "26": [35, 36, 56], "entries_drop": 56, "workspace_factor": 56, "structural_rank": 56, "gls_ainfo": 56, "gls_finfo": 56, "gls_sinfo": 56, "ma48_ainfo": 56, "ma48": 56, "ma48_finfo": 56, "ma48_sinfo": 56, "77": [18, 48], "expos": [7, 8, 16, 18, 21, 23, 25, 26, 35, 41, 42, 45, 46, 47, 48], "python": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "extend": [1, 18, 22, 45, 48], "icntl": 48, "lp": [1, 18, 22, 28, 29, 48, 57], "wp": [18, 48], "mp": [18, 48], "sp": 48, "ldiag": [18, 48], "la": [18, 48], "nrlnec": 48, "liw": 48, "nirnec": 48, "maxla": [18, 48], "maxliw": 48, "nemin": 48, "factorblock": 48, "solveblock": 48, "thresh": 48, "mc47": 48, "mc50": 48, "degree": 48, "metis_nodend": 48, "At": 48, "moment": 48, "equival": [22, 35, 44, 48, 50], "chnage": 48, "cntl": 48, "static_toler": [44, 48], "static_level": [44, 48], "ainfo": [18, 48], "nstep": 48, "nrltot": 48, "nirtot": 48, "iw": 48, "nrladu": 48, "niradu": 48, "ncmpa": [18, 48], "oor": [18, 48], "dup": [18, 48], "maxfrt": 48, "stat": [18, 36, 48], "legaci": 48, "opsa": 48, "ops": 48, "finfo": [18, 48], "nebdu": 48, "nrlbdu": 48, "nirbdu": 48, "ncmpbr": 48, "ncmpbi": 48, "ntwo": 48, "neig": 48, "signc": 48, "nstatic": 48, "modstep": 48, "opsb": 48, "maxchang": 48, "smin": 48, "smax": 48, "sinfo": [18, 48], "cond": 48, "cat": [], "eq": 48, "cond2": 48, "berr": 48, "berr2": 48, "btf": 18, "avoid": 18, "factor_block": 18, "solve_bla": 18, "la_int": 18, "markowitz": 18, "fill_in": 18, "switch_ful": 18, "cgce": 18, "diagonal_pivot": 18, "struct_abort": 18, "abort": 18, "len_analys": 18, "len_factor": 18, "struc_rank": 18, "lblock": 18, "sblock": 18, "tblock": 18, "tringular": 18, "op": 18, "size_factor": 18, "k_": 44, "tt": 44, "implicitli": 44, "certain": 44, "recours": 44, "particular": 44, "ccc": [], "21": [10, 21, 35, 36, 44], "a_1": 44, "22": [35, 42, 44], "a_2": 44, "invert": 44, "focu": 44, "everyth": 44, "sai": 44, "maxit_pcg": 44, "new_c": 44, "min_diag": 44, "null": 44, "assum": [35, 44], "allow_singular": 44, "perturb_to_make_definit": 44, "succe": 44, "get_norm_residu": [36, 44], "check_basi": 44, "c_type": 44, "c_ne": 44, "c_row": 44, "c_col": 44, "c_ptr": 44, "c_val": 44, "shuld": 44, "rh": 44, "p_g": 44, "24": [21, 35, 36, 44], "sort_statu": 44, "d_plu": 44, "rank_def": 44, "iter_pcg": 44, "norm_residu": [36, 44], "k_g": 44, "clock_form": [26, 44], "clock_appli": [26, 44], "facil": 36, "conn": 36, "1992": 36, "lancelot": 36, "springer": 36, "verlag": 36, "berlin": 36, "icf": 36, "due": [26, 35, 36], "1999": 36, "45": [35, 36], "tuma": 36, "2013": 36, "mi28": 36, "conjunct": 36, "reid": 36, "engin": 36, "1737": 36, "1755": 36, "remain": [15, 35, 36], "like": [36, 55], "forthcom": 36, "replac": [35, 36], "sensibli": 36, "gill": 36, "murrai": 36, "ponceleon": 36, "saunder": 36, "accommod": 36, "newli": 36, "rpw": 36, "new_structur": 36, "get_semi_bandwidth": 36, "submatrix": 36, "omp": 36, "compliant": 36, "compil": 36, "instal": 36, "mi28_control": [], "form_precondition": 36, "form_subset_precondition": 36, "n_sub": 36, "update_precondition": 36, "n_del": 36, "del": 36, "apply_precondition": 36, "px": 36, "psls_update_precondition": 36, "expect": [36, 45, 49], "80": 36, "analyse_statu": 36, "factorize_statu": 36, "solve_statu": 36, "reordered_semi_bandwidth": 36, "semi_bandwidth_us": 36, "neg1": 36, "neg2": 36, "fctoriz": 36, "fill_in_ratio": 36, "clock_upd": 36, "mi28_info": 36, "under": 15, "b_i": 15, "list": 15, "max_infea": 15, "use_sl": [14, 15], "find_dependent_row": 15, "llinear": 15, "m_depen": 15, "depen": 15, "comstraint": 15, "def": [0, 3, 11, 34, 51, 53, 55], "some_funct": [], "interest": [], "highlight": [], "numpi": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 24, 28, 29, 31, 32, 33, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 56, 57], "np": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 24, 28, 29, 31, 32, 33, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 56, 57], "inf": [4, 5, 6, 9, 10, 12, 13, 28, 29, 31, 38, 39, 43, 51, 52, 57], "optimum": [0, 3, 4, 5, 6, 9, 11, 13, 14, 28, 29, 31, 34, 38, 39, 51, 53, 55, 57], "qp": [1, 5, 6, 9, 13, 14, 22, 31, 38, 39], "1st": [6, 9, 13, 14, 38, 39], "x_copi": [], "copi": [], "c_copi": [], "y_copi": [], "z_copi": [], "x_stat_copi": [], "c_stat_copi": [], "get": [0, 3, 4, 5, 6, 9, 11, 12, 13, 14, 17, 19, 24, 28, 29, 31, 32, 33, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 56, 57], "shifted_least_dist": [6, 9, 13, 14], "sldqp": [6, 9, 13, 14], "2nd": [6, 9, 13, 14, 38], "sin": [0, 3, 11, 51, 53, 55], "sy": 3, "mag": [3, 11], "g_copi": [], "ref": [], "count": [], "getrefcount": [], "nb": 55, "userdata": 55, "src": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 24, 28, 29, 31, 32, 33, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 56, 57], "test_ugo": 55, "py": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 24, 28, 29, 31, 32, 33, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 56, 57], "test_arc": 0, "test_bgo": 3, "test_cqp": 9, "test_dgo": 11, "test_dqp": 13, "test_nl": 34, "test_trb": 51, "test_tru": 53, "sbls_option": [4, 5, 6, 9, 10, 13, 14, 29, 31, 39, 57], "convert_opt": 4, "test_bll": 4, "test_bqp": 5, "fdc_option": [6, 9, 13, 14, 29, 31, 39, 57], "fit_opt": [6, 9, 29, 39], "cro_opt": [6, 9, 29], "test_bqpb": 6, "sls_option": [10, 12, 13, 15, 36, 38, 43, 44, 52], "uls_opt": [10, 15, 44], "ir_opt": [10, 43, 52], "test_cro": 10, "test_dp": 12, "test_eqp": 14, "test_fdc": 15, "load_opt": [17, 19, 24, 32, 33], "test_glrt": 17, "test_gltr": 19, "test_l2rt": 24, "test_lpa": 28, "test_lpb": 29, "test_lsqp": 31, "test_lsrt": 32, "test_lstr": 33, "mi28_opt": 36, "test_psl": 36, "test_qpa": 38, "lsqp_option": 39, "test_qpb": 39, "test_rq": 43, "test_sbl": 44, "test_sl": 49, "test_tr": 52, "test_ul": 56, "test_wcp": 57, "ma77_info": 49, "ma86_info": 49, "ma87_info": 49, "ma97_info": 49, "mc64_info": 49, "mc68_info": 49, "aargh": 55, "xt": 56, "xt_copi": [], "00000001": 44, "accordingli": [4, 5, 6, 9, 13, 14, 28, 29, 31, 38, 39, 57], "n_depen": 15, "empti": [4, 17, 19, 24, 32, 33, 45], "hv": [17, 19], "elif": [17, 19, 24, 32, 33], "l1qp": 38, "bcl1qp": 38, "3rd": 38, "96": [12, 43, 52], "april": [2, 20, 27, 30, 37, 40, 50, 54], "regual": 12, "y_u": [9, 10, 13, 28, 29, 31, 38, 39, 57], "z_l": [4, 5, 6, 9, 10, 13, 28, 29, 31, 38, 39, 57], "z_u": [4, 5, 6, 9, 10, 13, 28, 29, 31, 38, 39, 57], "vetor": 57, "centr": 57, "set_printopt": [0, 3, 4, 5, 6, 9, 10, 11, 13, 14, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "precis": [0, 3, 4, 5, 6, 9, 10, 11, 13, 14, 31, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "suppress": [0, 3, 4, 5, 6, 9, 10, 11, 13, 14, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "floatmod": [0, 3, 4, 5, 6, 9, 10, 11, 13, 14, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "necessarili": [4, 5, 6, 9, 10, 13, 14, 28, 29, 31, 38, 39], "leqx": [], "leqx_u": [], "componentwis": [1, 22, 47], "l_i": 57, "mu_c": 57, "_j": 57, "l_j": 57, "z_j": 57, "mu_x": 57, "u_j": 57, "em": [], "constitu": [1, 22], "chain": [1, 21, 22], "scatter": [1, 21, 22], "maintain": [1, 22, 35], "polynomi": [1, 16, 22, 41], "evolv": [1, 22], "presolv": [1, 22], "transform": [1, 22, 35], "easier": [1, 22, 35], "unlimit": 7, "extra_space_": 7, "s_also_by_column": 7, "ptr": [7, 35], "bsc_form": [], "max_col_a": 7, "exceeds_max_col": 7, "clock_tim": 7, "sum_dupl": 8, "convers": 8, "dense_by_row": 8, "73": [8, 35], "repeat": 8, "79": 8, "insert": [21, 23], "william": 21, "cacm": 21, "1959": 21, "auxiliari": 22, "required_residual_rel": 23, "record_residu": 23, "norm_initial_residu": 23, "norm_final_residu": 23, "reason": 25, "lhs_solv": [], "y_k": 26, "delta_k": 26, "h_k": 26, "establish": 26, "formula": [26, 41], "memory_length": 26, "cours": [26, 35], "plan": 26, "any_method": 26, "lms_setup": [], "repres": 26, "updates_skip": 26, "skip": [26, 35, 46], "setup": 26, "clock_setup": 26, "recov": 35, "formul": 35, "max_nbr_pass": 35, "max_nbr_transform": 35, "irrespect": 35, "earli": 35, "cumul": 35, "presolve_transform_problem": 35, "c_accuraci": 35, "z_accuraci": 35, "beyond": 35, "opposit": 35, "devic": 35, "printout": 35, "errout": 35, "ouput": 35, "lot": 35, "silli": 35, "dual_transform": 35, "overid": 35, "get_z": 35, "get_z_bound": 35, "get_i": 35, "get_y_bound": 35, "dual_constraints_freq": 35, "singleton_columns_freq": 35, "doubleton_columns_freq": 35, "check_dual_feas": 35, "redundant_xc": 35, "redund": 35, "primal_constraints_freq": 35, "analyz": 35, "singleton": 35, "doubleton": 35, "unc_variables_freq": 35, "express": 35, "dependent_variables_freq": 35, "sparsify_rows_freq": 35, "sparser": 35, "max_fil": 35, "matter": 35, "put": 35, "transf_file_nbr": 35, "save": 35, "disk": 35, "transf_buffer_s": 35, "kept": 35, "transf_file_statu": 35, "transf_file_nam": 35, "presolve_read_specfil": 35, "presolve_termin": 35, "y_sign": 35, "convent": 35, "inactive_i": 35, "inact": 35, "unreduc": 35, "presolve_restore_solut": 35, "expens": 35, "deterior": 35, "unalt": 35, "z_sign": 35, "inactive_z": 35, "final_x_bound": 35, "tightest": 35, "risk": 35, "caus": 35, "degeneraci": 35, "loosest": 35, "keep": 35, "presolve_initi": 35, "final_z_bound": 35, "final_c_bound": 35, "final_y_bound": 35, "check_primal_feas": 35, "recomput": 35, "issu": 35, "match": 35, "incompatibilti": 35, "stabl": 35, "unsafeguard": 35, "unstabl": 35, "min_rel_improv": 35, "tighter": 35, "formal": 35, "new_low": 35, "tent": 35, "tol": [35, 41], "ab": 35, "new_upp": 35, "significantli": 35, "max_growth_factor": 35, "item": 35, "symbol": 35, "parenthes": 35, "ok": 35, "max_nbr_transf": 35, "realli": 35, "nevertheless": 35, "mere": 35, "signal": 35, "could": 35, "memory_ful": 35, "file_not_open": 35, "intend": 35, "could_not_writ": 35, "io": 35, "too_few_bits_per_byt": 35, "nbrh": 35, "wrong_g_dimens": 35, "incompat": 35, "wrong_hval_dimens": 35, "erron": 35, "wrong_hptr_dimens": 35, "address": 35, "wrong_hcol_dimens": 35, "27": 35, "wrong_hrow_dimens": 35, "wrong_aval_dimens": 35, "wrong_aptr_dimens": 35, "wrong_acol_dimens": 35, "wrong_arow_dimens": 35, "wrong_x_dimens": 35, "wrong_xl_dimens": 35, "34": 35, "wrong_xu_dimens": 35, "wrong_z_dimens": 35, "36": 35, "wrong_zl_dimens": 35, "37": 35, "wrong_zu_dimens": 35, "wrong_c_dimens": 35, "39": 35, "wrong_cl_dimens": 35, "wrong_cu_dimens": 35, "wrong_y_dimens": 35, "wrong_yl_dimens": 35, "wrong_yu_dimens": 35, "44": 35, "structure_not_set": 35, "clean": 35, "problem_not_analyz": 35, "46": 35, "problem_not_permut": 35, "47": 35, "h_misspecifi": 35, "48": 35, "corrupted_save_fil": 35, "corrupt": 35, "read": [35, 42], "49": 35, "wrong_xs_dimens": 35, "wrong_cs_dimens": 35, "52": 35, "wrong_n": 35, "53": 35, "wrong_m": 35, "54": 35, "sort_too_long": 35, "55": 35, "x_out_of_bound": 35, "substitut": 35, "incoher": 35, "loos": 35, "56": 35, "x_not_feas": 35, "declar": [35, 41], "57": 35, "z_not_feas": 35, "suboptim": 35, "58": 35, "z_cannot_be_zero": 35, "becaus": 35, "artifici": 35, "60": 35, "unrecognized_keyword": 35, "keyword": 35, "recogn": 35, "61": 35, "unrecognized_valu": 35, "63": 35, "g_not_alloc": 35, "64": 35, "c_not_alloc": 35, "65": 35, "aval_not_alloc": 35, "val": 35, "66": 35, "aptr_not_alloc": 35, "67": 35, "acol_not_alloc": 35, "68": 35, "arow_not_alloc": 35, "69": 35, "hval_not_alloc": 35, "70": 35, "hptr_not_alloc": 35, "71": 35, "hcol_not_alloc": 35, "72": 35, "hrow_not_alloc": 35, "wrong_an": 35, "74": 35, "wrong_hn": 35, "nbr_transform": 35, "few": 35, "classic": 41, "togeth": 41, "zero_coef": 41, "zero_f": 41, "roots_solv": [], "binari": 42, "prematur": 42, "unrecognis": [], "io_statu": 42, "x_1": 45, "x_2": 45, "b_1": 45, "b2": 45, "nonsingular": 45, "exist": 45, "reserv": 45, "scu_solv": [], "h_initi": 46, "update_skip_tol": 46, "would": 46, "grown": 46, "valuesa": 46, "85": 46, "inappropri": 46, "approximation_algorithm": 47, "alg": 47, "composit": 47, "dense_linear_solv": 47, "qr": [45, 47], "decomposit": 47, "divid": 47, "conquer": 47, "max_sparse_degre": 47, "extra_differ": 47, "max_degre": 47, "adgac": 47, "graph": 47, "differences_need": 47, "max_reduced_degre": 47, "01": [1, 22], "rebuilt": 21, "required_relative_residu": 23, "One": [26, 45], "lambda_k": 26, "lhs_appli": 26, "lhs_form_shift": 26, "lhs_form": 26, "lhs_change_method": 26, "lhs_setup": 26, "outpur": 42, "state": 45, "m_max": 45, "scu_append": 45, "col_del": 45, "row_del": 45, "scu_factor": 45, "scu_delet": 45, "bd_val": 45, "bd_row": 45, "bd_col_start": 45, "cd_val": 45, "cd_col": 45, "cd_row_start": 45, "enter": 45, "col_delmatrixrow_del": 45, "scu__delet": 45, "nz": 47, "bad_row": 47, "sha_estim": 47, "preced": 47, "sha_analys": 47}, "objects": {"galahad": [[0, 0, 0, "-", "arc"], [3, 0, 0, "-", "bgo"], [4, 0, 0, "-", "blls"], [5, 0, 0, "-", "bqp"], [6, 0, 0, "-", "bqpb"], [7, 0, 0, "-", "bsc"], [8, 0, 0, "-", "convert"], [9, 0, 0, "-", "cqp"], [10, 0, 0, "-", "cro"], [11, 0, 0, "-", "dgo"], [12, 0, 0, "-", "dps"], [13, 0, 0, "-", "dqp"], [14, 0, 0, "-", "eqp"], [15, 0, 0, "-", "fdc"], [16, 0, 0, "-", "fit"], [17, 0, 0, "-", "glrt"], [18, 0, 0, "-", "gls"], [19, 0, 0, "-", "gltr"], [21, 0, 0, "-", "hash"], [23, 0, 0, "-", "ir"], [24, 0, 0, "-", "l2rt"], [25, 0, 0, "-", "lhs"], [26, 0, 0, "-", "lms"], [28, 0, 0, "-", "lpa"], [29, 0, 0, "-", "lpb"], [31, 0, 0, "-", "lsqp"], [32, 0, 0, "-", "lsrt"], [33, 0, 0, "-", "lstr"], [34, 0, 0, "-", "nls"], [35, 0, 0, "-", "presolve"], [36, 0, 0, "-", "psls"], [38, 0, 0, "-", "qpa"], [39, 0, 0, "-", "qpb"], [41, 0, 0, "-", "roots"], [42, 0, 0, "-", "rpd"], [43, 0, 0, "-", "rqs"], [44, 0, 0, "-", "sbls"], [45, 0, 0, "-", "scu"], [46, 0, 0, "-", "sec"], [47, 0, 0, "-", "sha"], [48, 0, 0, "-", "sils"], [49, 0, 0, "-", "sls"], [51, 0, 0, "-", "trb"], [52, 0, 0, "-", "trs"], [53, 0, 0, "-", "tru"], [55, 0, 0, "-", "ugo"], [56, 0, 0, "-", "uls"], [57, 0, 0, "-", "wcp"]], "galahad.arc.arc": [[0, 1, 1, "", "initialize"], [0, 1, 1, "", "load"], [0, 1, 1, "", "solve"], [0, 1, 1, "", "terminate"]], "galahad.bgo.bgo": [[3, 1, 1, "", "initialize"], [3, 1, 1, "", "load"], [3, 1, 1, "", "solve"], [3, 1, 1, "", "terminate"]], "galahad.blls.blls": [[4, 1, 1, "", "initialize"], [4, 1, 1, "", "load"], [4, 1, 1, "", "solve_ls"], [4, 1, 1, "", "terminate"]], "galahad.bqp.bqp": [[5, 1, 1, "", "initialize"], [5, 1, 1, "", "load"], [5, 1, 1, "", "solve_qp"], [5, 1, 1, "", "terminate"]], "galahad.bqpb.bqpb": [[6, 1, 1, "", "initialize"], [6, 1, 1, "", "load"], [6, 1, 1, "", "solve_qp"], [6, 1, 1, "", "solve_sldqp"], [6, 1, 1, "", "terminate"]], "galahad.bsc.bsc": [[7, 1, 1, "", "finalize"], [7, 1, 1, "", "initialize"]], "galahad.convert.convert": [[8, 1, 1, "", "finalize"], [8, 1, 1, "", "initialize"]], "galahad.cqp.cqp": [[9, 1, 1, "", "initialize"], [9, 1, 1, "", "load"], [9, 1, 1, "", "solve_qp"], [9, 1, 1, "", "solve_sldqp"], [9, 1, 1, "", "terminate"]], "galahad.cro.cro": [[10, 1, 1, "", "crossover_solution"], [10, 1, 1, "", "initialize"], [10, 1, 1, "", "terminate"]], "galahad.dgo.dgo": [[11, 2, 1, "", "initialize"], [11, 2, 1, "", "load"], [11, 2, 1, "", "solve"], [11, 2, 1, "", "terminate"]], "galahad.dps.dps": [[12, 1, 1, "", "initialize"], [12, 1, 1, "", "load"], [12, 1, 1, "", "resolve_tr_problem"], [12, 1, 1, "", "solve_tr_problem"], [12, 1, 1, "", "terminate"]], "galahad.dps.rqs": [[12, 1, 1, "", "resolve_rq_problem"], [12, 1, 1, "", "solve_rq_problem"]], "galahad.dqp.dqp": [[13, 1, 1, "", "initialize"], [13, 1, 1, "", "load"], [13, 1, 1, "", "solve_qp"], [13, 1, 1, "", "solve_sldqp"], [13, 1, 1, "", "terminate"]], "galahad.eqp.eqp": [[14, 1, 1, "", "initialize"], [14, 1, 1, "", "load"], [14, 1, 1, "", "resolve_qp"], [14, 1, 1, "", "solve_qp"], [14, 1, 1, "", "solve_sldqp"], [14, 1, 1, "", "terminate"]], "galahad.fdc.fdc": [[15, 1, 1, "", "find_dependent_rows"], [15, 1, 1, "", "initialize"], [15, 1, 1, "", "terminate"]], "galahad.fit.fit": [[16, 1, 1, "", "finalize"], [16, 1, 1, "", "initialize"]], "galahad.glrt.glrt": [[17, 1, 1, "", "initialize"], [17, 1, 1, "", "load_options"], [17, 1, 1, "", "solve_problem"], [17, 1, 1, "", "terminate"]], "galahad.gls.gls": [[18, 1, 1, "", "finalize"], [18, 1, 1, "", "initialize"]], "galahad.gltr.gltr": [[19, 1, 1, "", "initialize"], [19, 1, 1, "", "load_options"], [19, 1, 1, "", "solve_problem"], [19, 1, 1, "", "terminate"]], "galahad.hash.hash": [[21, 1, 1, "", "finalize"], [21, 1, 1, "", "initialize"]], "galahad.ir.ir": [[23, 1, 1, "", "finalize"], [23, 1, 1, "", "initialize"]], "galahad.l2rt.l2rt": [[24, 1, 1, "", "initialize"], [24, 1, 1, "", "load_options"], [24, 1, 1, "", "solve_problem"], [24, 1, 1, "", "terminate"]], "galahad.lhs.lhs": [[25, 1, 1, "", "finalize"], [25, 1, 1, "", "initialize"]], "galahad.lms.lms": [[26, 1, 1, "", "finalize"], [26, 1, 1, "", "initialize"]], "galahad.lpa.lpa": [[28, 1, 1, "", "initialize"], [28, 1, 1, "", "load"], [28, 1, 1, "", "solve_lp"], [28, 1, 1, "", "terminate"]], "galahad.lpb.lpb": [[29, 1, 1, "", "initialize"], [29, 1, 1, "", "load"], [29, 1, 1, "", "solve_lp"], [29, 1, 1, "", "terminate"]], "galahad.lsqp.lsqp": [[31, 1, 1, "", "initialize"], [31, 1, 1, "", "load"], [31, 1, 1, "", "solve_qp"], [31, 1, 1, "", "terminate"]], "galahad.lsrt.lsrt": [[32, 1, 1, "", "initialize"], [32, 1, 1, "", "load_options"], [32, 1, 1, "", "solve_problem"], [32, 1, 1, "", "terminate"]], "galahad.lstr.lstr": [[33, 1, 1, "", "initialize"], [33, 1, 1, "", "load_options"], [33, 1, 1, "", "solve_problem"], [33, 1, 1, "", "terminate"]], "galahad.nls.nls": [[34, 1, 1, "", "initialize"], [34, 1, 1, "", "load"], [34, 1, 1, "", "solve"], [34, 1, 1, "", "terminate"]], "galahad.presolve.presolve": [[35, 1, 1, "", "finalize"], [35, 1, 1, "", "initialize"]], "galahad.psls.psls": [[36, 1, 1, "", "apply_preconditioner"], [36, 1, 1, "", "form_preconditioner"], [36, 1, 1, "", "form_subset_preconditioner"], [36, 1, 1, "", "initialize"], [36, 1, 1, "", "load"], [36, 1, 1, "", "terminate"], [36, 1, 1, "", "update_preconditioner"]], "galahad.qpa.qpa": [[38, 1, 1, "", "initialize"], [38, 1, 1, "", "load"], [38, 1, 1, "", "solve_bcl1qp"], [38, 1, 1, "", "solve_l1qp"], [38, 1, 1, "", "solve_qp"], [38, 1, 1, "", "terminate"]], "galahad.qpb.qpb": [[39, 1, 1, "", "initialize"], [39, 1, 1, "", "load"], [39, 1, 1, "", "solve_qp"], [39, 1, 1, "", "terminate"]], "galahad.roots.roots": [[41, 1, 1, "", "finalize"], [41, 1, 1, "", "initialize"]], "galahad.rpd.rpd": [[42, 1, 1, "", "finalize"], [42, 1, 1, "", "initialize"]], "galahad.rqs.rqs": [[43, 1, 1, "", "initialize"], [43, 1, 1, "", "load"], [43, 1, 1, "", "load_a"], [43, 1, 1, "", "load_m"], [43, 1, 1, "", "solve_problem"], [43, 1, 1, "", "terminate"]], "galahad.sbls.sbls": [[44, 1, 1, "", "factorize_matrix"], [44, 1, 1, "", "initialize"], [44, 1, 1, "", "load"], [44, 1, 1, "", "solve_system"], [44, 1, 1, "", "terminate"]], "galahad.scu.scu": [[45, 1, 1, "", "finalize"], [45, 1, 1, "", "initialize"]], "galahad.sec.sec": [[46, 1, 1, "", "finalize"], [46, 1, 1, "", "initialize"]], "galahad.sha.sha": [[47, 1, 1, "", "finalize"], [47, 1, 1, "", "initialize"]], "galahad.sils.sils": [[48, 1, 1, "", "finalize"], [48, 1, 1, "", "initialize"]], "galahad.sls.sls": [[49, 1, 1, "", "analyse_matrix"], [49, 1, 1, "", "factorize_matrix"], [49, 1, 1, "", "initialize"], [49, 1, 1, "", "partial_solve_system"], [49, 1, 1, "", "solve_system"], [49, 1, 1, "", "terminate"]], "galahad.trb.trb": [[51, 1, 1, "", "initialize"], [51, 1, 1, "", "load"], [51, 1, 1, "", "solve"], [51, 1, 1, "", "terminate"]], "galahad.trs.trs": [[52, 1, 1, "", "initialize"], [52, 1, 1, "", "load"], [52, 1, 1, "", "load_a"], [52, 1, 1, "", "load_m"], [52, 1, 1, "", "solve_problem"], [52, 1, 1, "", "terminate"]], "galahad.tru.tru": [[53, 1, 1, "", "initialize"], [53, 1, 1, "", "load"], [53, 1, 1, "", "solve"], [53, 1, 1, "", "terminate"]], "galahad.ugo.ugo": [[55, 1, 1, "", "initialize"], [55, 1, 1, "", "load"], [55, 1, 1, "", "solve"], [55, 1, 1, "", "terminate"]], "galahad.uls.uls": [[56, 1, 1, "", "factorize_matrix"], [56, 1, 1, "", "initialize"], [56, 1, 1, "", "solve_system"], [56, 1, 1, "", "terminate"]], "galahad.wcp.wcp": [[57, 1, 1, "", "find_wcp"], [57, 1, 1, "", "initialize"], [57, 1, 1, "", "load"], [57, 1, 1, "", "terminate"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "method", "Python method"]}, "titleterms": {"arc": 0, "matrix": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "storag": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 28, 29, 31, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 56, 57], "function": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57], "bound": 2, "constrain": 2, "optim": [2, 20, 54], "content": [1, 2, 20, 22, 27, 30, 37, 40, 50, 54], "refer": [1, 2, 20, 22, 27, 30, 37, 40, 50, 54], "bgo": 3, "dgo": 11, "global": 20, "galahad": 22, "python": 22, "interfac": 22, "nl": 34, "terminologi": [34, 49, 56], "trb": 51, "tru": 53, "unconstrain": 54, "ugo": 55, "nonlinear": [], "least": 30, "squar": 30, "xxx": [], "cqp": 9, "quadrat": 37, "program": [27, 37], "dqp": 13, "qpb": 39, "qpa": 38, "eqp": 14, "bqp": 5, "bqpb": 6, "lsqp": 31, "linear": [27, 50], "lpb": 29, "lpa": 28, "dlp": [], "wcp": 57, "cro": 10, "bll": 4, "regular": 40, "subproblem": 40, "rq": 43, "tr": 52, "gltr": 19, "lstr": 33, "glrt": 17, "l2rt": 24, "lsrt": 32, "dp": 12, "fdc": 15, "gl": 18, "psl": 36, "sbl": 44, "sil": 48, "sl": 49, "system": 50, "ul": 56, "extern": [36, 49, 56], "solver": [36, 49, 56], "characterist": [36, 49, 56], "support": [49, 56], "method": [36, 49, 56], "exampl": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 24, 28, 29, 31, 32, 33, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 56, 57], "code": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 24, 28, 29, 31, 32, 33, 34, 36, 38, 39, 43, 44, 49, 51, 52, 53, 55, 56, 57], "terminolgi": [4, 5, 6, 9, 10, 13, 14, 28, 29, 31, 38, 39, 57], "auxiliari": 1, "procedur": 1, "bsc": 7, "convert": 8, "fit": 16, "hash": 21, "ir": 23, "lh": 25, "lm": 26, "presolv": 35, "root": 41, "rpd": 42, "scu": 45, "sec": 46, "sha": 47}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Bound-constrained Optimization": [[2, "bound-constrained-optimization"]], "Contents": [[2, null], [20, null], [27, null], [30, null], [37, null], [40, null], [50, null], [54, null], [1, null], [22, null]], "References": [[2, "references"], [20, "references"], [27, "references"], [30, "references"], [37, "references"], [40, "references"], [50, "references"], [54, "references"], [1, "references"], [22, "references"]], "functions": [[18, "functions"], [48, "functions"], [8, "functions"], [25, "functions"], [7, "functions"], [9, "functions"], [21, "functions"], [23, "functions"], [26, "functions"], [41, "functions"], [42, "functions"], [45, "functions"], [46, "functions"], [47, "functions"], [35, "functions"], [0, "functions"], [3, "functions"], [4, "functions"], [5, "functions"], [6, "functions"], [10, "functions"], [11, "functions"], [12, "functions"], [13, "functions"], [14, "functions"], [15, "functions"], [16, "functions"], [17, "functions"], [19, "functions"], [24, "functions"], [28, "functions"], [29, "functions"], [31, "functions"], [32, "functions"], [33, "functions"], [34, "functions"], [36, "functions"], [38, "functions"], [39, "functions"], [43, "functions"], [44, "functions"], [49, "functions"], [51, "functions"], [52, "functions"], [53, "functions"], [55, "functions"], [56, "functions"], [57, "functions"]], "GLS": [[18, "module-galahad.gls"]], "Global Optimization": [[20, "global-optimization"]], "Linear Programming": [[27, "linear-programming"]], "Least-Squares": [[30, "least-squares"]], "Quadratic Programming": [[37, "quadratic-programming"]], "Regularization subproblems": [[40, "regularization-subproblems"]], "SILS": [[48, "module-galahad.sils"]], "Linear Systems": [[50, "linear-systems"]], "Unconstrained Optimization": [[54, "unconstrained-optimization"]], "Auxiliary Procedures": [[1, "auxiliary-procedures"]], "GALAHAD Python Interfaces": [[22, "galahad-python-interfaces"]], "CONVERT": [[8, "module-galahad.convert"]], "LHS": [[25, "module-galahad.lhs"]], "BSC": [[7, "module-galahad.bsc"]], "matrix storage": [[9, "matrix-storage"], [0, "matrix-storage"], [3, "matrix-storage"], [4, "matrix-storage"], [5, "matrix-storage"], [6, "matrix-storage"], [10, "matrix-storage"], [11, "matrix-storage"], [12, "matrix-storage"], [13, "matrix-storage"], [14, "matrix-storage"], [15, "matrix-storage"], [28, "matrix-storage"], [29, "matrix-storage"], [31, "matrix-storage"], [34, "matrix-storage"], [36, "matrix-storage"], [38, "matrix-storage"], [39, "matrix-storage"], [43, "matrix-storage"], [44, "matrix-storage"], [49, "matrix-storage"], [51, "matrix-storage"], [52, "matrix-storage"], [53, "matrix-storage"], [56, "matrix-storage"], [57, "matrix-storage"]], "example code": [[9, "example-code"], [0, "example-code"], [3, "example-code"], [4, "example-code"], [5, "example-code"], [6, "example-code"], [10, "example-code"], [11, "example-code"], [12, "example-code"], [13, "example-code"], [14, "example-code"], [15, "example-code"], [17, "example-code"], [19, "example-code"], [24, "example-code"], [28, "example-code"], [29, "example-code"], [31, "example-code"], [32, "example-code"], [33, "example-code"], [34, "example-code"], [36, "example-code"], [38, "example-code"], [39, "example-code"], [43, "example-code"], [44, "example-code"], [49, "example-code"], [51, "example-code"], [52, "example-code"], [53, "example-code"], [55, "example-code"], [56, "example-code"], [57, "example-code"]], "terminolgy": [[9, "terminolgy"], [4, "terminolgy"], [5, "terminolgy"], [6, "terminolgy"], [10, "terminolgy"], [13, "terminolgy"], [14, "terminolgy"], [28, "terminolgy"], [29, "terminolgy"], [31, "terminolgy"], [38, "terminolgy"], [39, "terminolgy"], [57, "terminolgy"]], "CQP": [[9, "module-galahad.cqp"]], "HASH": [[21, "module-galahad.hash"]], "IR": [[23, "module-galahad.ir"]], "LMS": [[26, "module-galahad.lms"]], "ROOTS": [[41, "module-galahad.roots"]], "RPD": [[42, "module-galahad.rpd"]], "SCU": [[45, "module-galahad.scu"]], "SEC": [[46, "module-galahad.sec"]], "SHA": [[47, "module-galahad.sha"]], "PRESOLVE": [[35, "module-galahad.presolve"]], "ARC": [[0, "module-galahad.arc"]], "BGO": [[3, "module-galahad.bgo"]], "BLLS": [[4, "module-galahad.blls"]], "BQP": [[5, "module-galahad.bqp"]], "BQPB": [[6, "module-galahad.bqpb"]], "CRO": [[10, "module-galahad.cro"]], "DGO": [[11, "module-galahad.dgo"]], "DPS": [[12, "module-galahad.dps"]], "DQP": [[13, "module-galahad.dqp"]], "EQP": [[14, "module-galahad.eqp"]], "FDC": [[15, "module-galahad.fdc"]], "FIT": [[16, "module-galahad.fit"]], "GLRT": [[17, "module-galahad.glrt"]], "GLTR": [[19, "module-galahad.gltr"]], "L2RT": [[24, "module-galahad.l2rt"]], "LPA": [[28, "module-galahad.lpa"]], "LPB": [[29, "module-galahad.lpb"]], "LSQP": [[31, "module-galahad.lsqp"]], "LSRT": [[32, "module-galahad.lsrt"]], "LSTR": [[33, "module-galahad.lstr"]], "NLS": [[34, "module-galahad.nls"]], "terminology": [[34, "terminology"], [49, "terminology"], [56, "terminology"]], "PSLS": [[36, "module-galahad.psls"]], "method": [[36, "method"], [49, "method"], [56, "method"]], "External solver characteristics": [[36, "id1"], [49, "id1"], [56, "id1"]], "QPA": [[38, "module-galahad.qpa"]], "QPB": [[39, "module-galahad.qpb"]], "RQS": [[43, "module-galahad.rqs"]], "SBLS": [[44, "module-galahad.sbls"]], "SLS": [[49, "module-galahad.sls"]], "supported solvers": [[49, "supported-solvers"], [56, "supported-solvers"]], "TRB": [[51, "module-galahad.trb"]], "TRS": [[52, "module-galahad.trs"]], "TRU": [[53, "module-galahad.tru"]], "UGO": [[55, "module-galahad.ugo"]], "ULS": [[56, "module-galahad.uls"]], "WCP": [[57, "module-galahad.wcp"]]}, "indexentries": {"arc.initialize() (in module galahad.arc)": [[0, "galahad.arc.arc.initialize"]], "arc.load() (in module galahad.arc)": [[0, "galahad.arc.arc.load"]], "arc.solve() (in module galahad.arc)": [[0, "galahad.arc.arc.solve"]], "arc.terminate() (in module galahad.arc)": [[0, "galahad.arc.arc.terminate"]], "galahad.arc": [[0, "module-galahad.arc"]], "module": [[0, "module-galahad.arc"], [3, "module-galahad.bgo"], [4, "module-galahad.blls"], [5, "module-galahad.bqp"], [6, "module-galahad.bqpb"], [10, "module-galahad.cro"], [11, "module-galahad.dgo"], [12, "module-galahad.dps"], [13, "module-galahad.dqp"], [14, "module-galahad.eqp"], [15, "module-galahad.fdc"], [16, "module-galahad.fit"], [17, "module-galahad.glrt"], [19, "module-galahad.gltr"], [24, "module-galahad.l2rt"], [28, "module-galahad.lpa"], [29, "module-galahad.lpb"], [31, "module-galahad.lsqp"], [32, "module-galahad.lsrt"], [33, "module-galahad.lstr"], [34, "module-galahad.nls"], [36, "module-galahad.psls"], [38, "module-galahad.qpa"], [39, "module-galahad.qpb"], [43, "module-galahad.rqs"], [44, "module-galahad.sbls"], [49, "module-galahad.sls"], [51, "module-galahad.trb"], [52, "module-galahad.trs"], [53, "module-galahad.tru"], [55, "module-galahad.ugo"], [56, "module-galahad.uls"], [57, "module-galahad.wcp"]], "bgo.initialize() (in module galahad.bgo)": [[3, "galahad.bgo.bgo.initialize"]], "bgo.load() (in module galahad.bgo)": [[3, "galahad.bgo.bgo.load"]], "bgo.solve() (in module galahad.bgo)": [[3, "galahad.bgo.bgo.solve"]], "bgo.terminate() (in module galahad.bgo)": [[3, "galahad.bgo.bgo.terminate"]], "galahad.bgo": [[3, "module-galahad.bgo"]], "blls.initialize() (in module galahad.blls)": [[4, "galahad.blls.blls.initialize"]], "blls.load() (in module galahad.blls)": [[4, "galahad.blls.blls.load"]], "blls.solve_ls() (in module galahad.blls)": [[4, "galahad.blls.blls.solve_ls"]], "blls.terminate() (in module galahad.blls)": [[4, "galahad.blls.blls.terminate"]], "galahad.blls": [[4, "module-galahad.blls"]], "bqp.initialize() (in module galahad.bqp)": [[5, "galahad.bqp.bqp.initialize"]], "bqp.load() (in module galahad.bqp)": [[5, "galahad.bqp.bqp.load"]], "bqp.solve_qp() (in module galahad.bqp)": [[5, "galahad.bqp.bqp.solve_qp"]], "bqp.terminate() (in module galahad.bqp)": [[5, "galahad.bqp.bqp.terminate"]], "galahad.bqp": [[5, "module-galahad.bqp"]], "bqpb.initialize() (in module galahad.bqpb)": [[6, "galahad.bqpb.bqpb.initialize"]], "bqpb.load() (in module galahad.bqpb)": [[6, "galahad.bqpb.bqpb.load"]], "bqpb.solve_qp() (in module galahad.bqpb)": [[6, "galahad.bqpb.bqpb.solve_qp"]], "bqpb.solve_sldqp() (in module galahad.bqpb)": [[6, "galahad.bqpb.bqpb.solve_sldqp"]], "bqpb.terminate() (in module galahad.bqpb)": [[6, "galahad.bqpb.bqpb.terminate"]], "galahad.bqpb": [[6, "module-galahad.bqpb"]], "cro.crossover_solution() (in module galahad.cro)": [[10, "galahad.cro.cro.crossover_solution"]], "cro.initialize() (in module galahad.cro)": [[10, "galahad.cro.cro.initialize"]], "cro.terminate() (in module galahad.cro)": [[10, "galahad.cro.cro.terminate"]], "galahad.cro": [[10, "module-galahad.cro"]], "galahad.dgo": [[11, "module-galahad.dgo"]], "initialize() (galahad.dgo.dgo method)": [[11, "galahad.dgo.dgo.initialize"]], "load() (galahad.dgo.dgo method)": [[11, "galahad.dgo.dgo.load"]], "solve() (galahad.dgo.dgo method)": [[11, "galahad.dgo.dgo.solve"]], "terminate() (galahad.dgo.dgo method)": [[11, "galahad.dgo.dgo.terminate"]], "dps.initialize() (in module galahad.dps)": [[12, "galahad.dps.dps.initialize"]], "dps.load() (in module galahad.dps)": [[12, "galahad.dps.dps.load"]], "dps.resolve_tr_problem() (in module galahad.dps)": [[12, "galahad.dps.dps.resolve_tr_problem"]], "dps.solve_tr_problem() (in module galahad.dps)": [[12, "galahad.dps.dps.solve_tr_problem"]], "dps.terminate() (in module galahad.dps)": [[12, "galahad.dps.dps.terminate"]], "galahad.dps": [[12, "module-galahad.dps"]], "rqs.resolve_rq_problem() (in module galahad.dps)": [[12, "galahad.dps.rqs.resolve_rq_problem"]], "rqs.solve_rq_problem() (in module galahad.dps)": [[12, "galahad.dps.rqs.solve_rq_problem"]], "dqp.initialize() (in module galahad.dqp)": [[13, "galahad.dqp.dqp.initialize"]], "dqp.load() (in module galahad.dqp)": [[13, "galahad.dqp.dqp.load"]], "dqp.solve_qp() (in module galahad.dqp)": [[13, "galahad.dqp.dqp.solve_qp"]], "dqp.solve_sldqp() (in module galahad.dqp)": [[13, "galahad.dqp.dqp.solve_sldqp"]], "dqp.terminate() (in module galahad.dqp)": [[13, "galahad.dqp.dqp.terminate"]], "galahad.dqp": [[13, "module-galahad.dqp"]], "eqp.initialize() (in module galahad.eqp)": [[14, "galahad.eqp.eqp.initialize"]], "eqp.load() (in module galahad.eqp)": [[14, "galahad.eqp.eqp.load"]], "eqp.resolve_qp() (in module galahad.eqp)": [[14, "galahad.eqp.eqp.resolve_qp"]], "eqp.solve_qp() (in module galahad.eqp)": [[14, "galahad.eqp.eqp.solve_qp"]], "eqp.solve_sldqp() (in module galahad.eqp)": [[14, "galahad.eqp.eqp.solve_sldqp"]], "eqp.terminate() (in module galahad.eqp)": [[14, "galahad.eqp.eqp.terminate"]], "galahad.eqp": [[14, "module-galahad.eqp"]], "fdc.find_dependent_rows() (in module galahad.fdc)": [[15, "galahad.fdc.fdc.find_dependent_rows"]], "fdc.initialize() (in module galahad.fdc)": [[15, "galahad.fdc.fdc.initialize"]], "fdc.terminate() (in module galahad.fdc)": [[15, "galahad.fdc.fdc.terminate"]], "galahad.fdc": [[15, "module-galahad.fdc"]], "fit.finalize() (in module galahad.fit)": [[16, "galahad.fit.fit.finalize"]], "fit.initialize() (in module galahad.fit)": [[16, "galahad.fit.fit.initialize"]], "galahad.fit": [[16, "module-galahad.fit"]], "galahad.glrt": [[17, "module-galahad.glrt"]], "glrt.initialize() (in module galahad.glrt)": [[17, "galahad.glrt.glrt.initialize"]], "glrt.load_options() (in module galahad.glrt)": [[17, "galahad.glrt.glrt.load_options"]], "glrt.solve_problem() (in module galahad.glrt)": [[17, "galahad.glrt.glrt.solve_problem"]], "glrt.terminate() (in module galahad.glrt)": [[17, "galahad.glrt.glrt.terminate"]], "galahad.gltr": [[19, "module-galahad.gltr"]], "gltr.initialize() (in module galahad.gltr)": [[19, "galahad.gltr.gltr.initialize"]], "gltr.load_options() (in module galahad.gltr)": [[19, "galahad.gltr.gltr.load_options"]], "gltr.solve_problem() (in module galahad.gltr)": [[19, "galahad.gltr.gltr.solve_problem"]], "gltr.terminate() (in module galahad.gltr)": [[19, "galahad.gltr.gltr.terminate"]], "galahad.l2rt": [[24, "module-galahad.l2rt"]], "l2rt.initialize() (in module galahad.l2rt)": [[24, "galahad.l2rt.l2rt.initialize"]], "l2rt.load_options() (in module galahad.l2rt)": [[24, "galahad.l2rt.l2rt.load_options"]], "l2rt.solve_problem() (in module galahad.l2rt)": [[24, "galahad.l2rt.l2rt.solve_problem"]], "l2rt.terminate() (in module galahad.l2rt)": [[24, "galahad.l2rt.l2rt.terminate"]], "galahad.lpa": [[28, "module-galahad.lpa"]], "lpa.initialize() (in module galahad.lpa)": [[28, "galahad.lpa.lpa.initialize"]], "lpa.load() (in module galahad.lpa)": [[28, "galahad.lpa.lpa.load"]], "lpa.solve_lp() (in module galahad.lpa)": [[28, "galahad.lpa.lpa.solve_lp"]], "lpa.terminate() (in module galahad.lpa)": [[28, "galahad.lpa.lpa.terminate"]], "galahad.lpb": [[29, "module-galahad.lpb"]], "lpb.initialize() (in module galahad.lpb)": [[29, "galahad.lpb.lpb.initialize"]], "lpb.load() (in module galahad.lpb)": [[29, "galahad.lpb.lpb.load"]], "lpb.solve_lp() (in module galahad.lpb)": [[29, "galahad.lpb.lpb.solve_lp"]], "lpb.terminate() (in module galahad.lpb)": [[29, "galahad.lpb.lpb.terminate"]], "galahad.lsqp": [[31, "module-galahad.lsqp"]], "lsqp.initialize() (in module galahad.lsqp)": [[31, "galahad.lsqp.lsqp.initialize"]], "lsqp.load() (in module galahad.lsqp)": [[31, "galahad.lsqp.lsqp.load"]], "lsqp.solve_qp() (in module galahad.lsqp)": [[31, "galahad.lsqp.lsqp.solve_qp"]], "lsqp.terminate() (in module galahad.lsqp)": [[31, "galahad.lsqp.lsqp.terminate"]], "galahad.lsrt": [[32, "module-galahad.lsrt"]], "lsrt.initialize() (in module galahad.lsrt)": [[32, "galahad.lsrt.lsrt.initialize"]], "lsrt.load_options() (in module galahad.lsrt)": [[32, "galahad.lsrt.lsrt.load_options"]], "lsrt.solve_problem() (in module galahad.lsrt)": [[32, "galahad.lsrt.lsrt.solve_problem"]], "lsrt.terminate() (in module galahad.lsrt)": [[32, "galahad.lsrt.lsrt.terminate"]], "galahad.lstr": [[33, "module-galahad.lstr"]], "lstr.initialize() (in module galahad.lstr)": [[33, "galahad.lstr.lstr.initialize"]], "lstr.load_options() (in module galahad.lstr)": [[33, "galahad.lstr.lstr.load_options"]], "lstr.solve_problem() (in module galahad.lstr)": [[33, "galahad.lstr.lstr.solve_problem"]], "lstr.terminate() (in module galahad.lstr)": [[33, "galahad.lstr.lstr.terminate"]], "galahad.nls": [[34, "module-galahad.nls"]], "nls.initialize() (in module galahad.nls)": [[34, "galahad.nls.nls.initialize"]], "nls.load() (in module galahad.nls)": [[34, "galahad.nls.nls.load"]], "nls.solve() (in module galahad.nls)": [[34, "galahad.nls.nls.solve"]], "nls.terminate() (in module galahad.nls)": [[34, "galahad.nls.nls.terminate"]], "galahad.psls": [[36, "module-galahad.psls"]], "psls.apply_preconditioner() (in module galahad.psls)": [[36, "galahad.psls.psls.apply_preconditioner"]], "psls.form_preconditioner() (in module galahad.psls)": [[36, "galahad.psls.psls.form_preconditioner"]], "psls.form_subset_preconditioner() (in module galahad.psls)": [[36, "galahad.psls.psls.form_subset_preconditioner"]], "psls.initialize() (in module galahad.psls)": [[36, "galahad.psls.psls.initialize"]], "psls.load() (in module galahad.psls)": [[36, "galahad.psls.psls.load"]], "psls.terminate() (in module galahad.psls)": [[36, "galahad.psls.psls.terminate"]], "psls.update_preconditioner() (in module galahad.psls)": [[36, "galahad.psls.psls.update_preconditioner"]], "galahad.qpa": [[38, "module-galahad.qpa"]], "qpa.initialize() (in module galahad.qpa)": [[38, "galahad.qpa.qpa.initialize"]], "qpa.load() (in module galahad.qpa)": [[38, "galahad.qpa.qpa.load"]], "qpa.solve_bcl1qp() (in module galahad.qpa)": [[38, "galahad.qpa.qpa.solve_bcl1qp"]], "qpa.solve_l1qp() (in module galahad.qpa)": [[38, "galahad.qpa.qpa.solve_l1qp"]], "qpa.solve_qp() (in module galahad.qpa)": [[38, "galahad.qpa.qpa.solve_qp"]], "qpa.terminate() (in module galahad.qpa)": [[38, "galahad.qpa.qpa.terminate"]], "galahad.qpb": [[39, "module-galahad.qpb"]], "qpb.initialize() (in module galahad.qpb)": [[39, "galahad.qpb.qpb.initialize"]], "qpb.load() (in module galahad.qpb)": [[39, "galahad.qpb.qpb.load"]], "qpb.solve_qp() (in module galahad.qpb)": [[39, "galahad.qpb.qpb.solve_qp"]], "qpb.terminate() (in module galahad.qpb)": [[39, "galahad.qpb.qpb.terminate"]], "galahad.rqs": [[43, "module-galahad.rqs"]], "rqs.initialize() (in module galahad.rqs)": [[43, "galahad.rqs.rqs.initialize"]], "rqs.load() (in module galahad.rqs)": [[43, "galahad.rqs.rqs.load"]], "rqs.load_a() (in module galahad.rqs)": [[43, "galahad.rqs.rqs.load_a"]], "rqs.load_m() (in module galahad.rqs)": [[43, "galahad.rqs.rqs.load_m"]], "rqs.solve_problem() (in module galahad.rqs)": [[43, "galahad.rqs.rqs.solve_problem"]], "rqs.terminate() (in module galahad.rqs)": [[43, "galahad.rqs.rqs.terminate"]], "galahad.sbls": [[44, "module-galahad.sbls"]], "sbls.factorize_matrix() (in module galahad.sbls)": [[44, "galahad.sbls.sbls.factorize_matrix"]], "sbls.initialize() (in module galahad.sbls)": [[44, "galahad.sbls.sbls.initialize"]], "sbls.load() (in module galahad.sbls)": [[44, "galahad.sbls.sbls.load"]], "sbls.solve_system() (in module galahad.sbls)": [[44, "galahad.sbls.sbls.solve_system"]], "sbls.terminate() (in module galahad.sbls)": [[44, "galahad.sbls.sbls.terminate"]], "galahad.sls": [[49, "module-galahad.sls"]], "sls.analyse_matrix() (in module galahad.sls)": [[49, "galahad.sls.sls.analyse_matrix"]], "sls.factorize_matrix() (in module galahad.sls)": [[49, "galahad.sls.sls.factorize_matrix"]], "sls.initialize() (in module galahad.sls)": [[49, "galahad.sls.sls.initialize"]], "sls.partial_solve_system() (in module galahad.sls)": [[49, "galahad.sls.sls.partial_solve_system"]], "sls.solve_system() (in module galahad.sls)": [[49, "galahad.sls.sls.solve_system"]], "sls.terminate() (in module galahad.sls)": [[49, "galahad.sls.sls.terminate"]], "galahad.trb": [[51, "module-galahad.trb"]], "trb.initialize() (in module galahad.trb)": [[51, "galahad.trb.trb.initialize"]], "trb.load() (in module galahad.trb)": [[51, "galahad.trb.trb.load"]], "trb.solve() (in module galahad.trb)": [[51, "galahad.trb.trb.solve"]], "trb.terminate() (in module galahad.trb)": [[51, "galahad.trb.trb.terminate"]], "galahad.trs": [[52, "module-galahad.trs"]], "trs.initialize() (in module galahad.trs)": [[52, "galahad.trs.trs.initialize"]], "trs.load() (in module galahad.trs)": [[52, "galahad.trs.trs.load"]], "trs.load_a() (in module galahad.trs)": [[52, "galahad.trs.trs.load_a"]], "trs.load_m() (in module galahad.trs)": [[52, "galahad.trs.trs.load_m"]], "trs.solve_problem() (in module galahad.trs)": [[52, "galahad.trs.trs.solve_problem"]], "trs.terminate() (in module galahad.trs)": [[52, "galahad.trs.trs.terminate"]], "galahad.tru": [[53, "module-galahad.tru"]], "tru.initialize() (in module galahad.tru)": [[53, "galahad.tru.tru.initialize"]], "tru.load() (in module galahad.tru)": [[53, "galahad.tru.tru.load"]], "tru.solve() (in module galahad.tru)": [[53, "galahad.tru.tru.solve"]], "tru.terminate() (in module galahad.tru)": [[53, "galahad.tru.tru.terminate"]], "galahad.ugo": [[55, "module-galahad.ugo"]], "ugo.initialize() (in module galahad.ugo)": [[55, "galahad.ugo.ugo.initialize"]], "ugo.load() (in module galahad.ugo)": [[55, "galahad.ugo.ugo.load"]], "ugo.solve() (in module galahad.ugo)": [[55, "galahad.ugo.ugo.solve"]], "ugo.terminate() (in module galahad.ugo)": [[55, "galahad.ugo.ugo.terminate"]], "galahad.uls": [[56, "module-galahad.uls"]], "uls.factorize_matrix() (in module galahad.uls)": [[56, "galahad.uls.uls.factorize_matrix"]], "uls.initialize() (in module galahad.uls)": [[56, "galahad.uls.uls.initialize"]], "uls.solve_system() (in module galahad.uls)": [[56, "galahad.uls.uls.solve_system"]], "uls.terminate() (in module galahad.uls)": [[56, "galahad.uls.uls.terminate"]], "galahad.wcp": [[57, "module-galahad.wcp"]], "wcp.find_wcp() (in module galahad.wcp)": [[57, "galahad.wcp.wcp.find_wcp"]], "wcp.initialize() (in module galahad.wcp)": [[57, "galahad.wcp.wcp.initialize"]], "wcp.load() (in module galahad.wcp)": [[57, "galahad.wcp.wcp.load"]], "wcp.terminate() (in module galahad.wcp)": [[57, "galahad.wcp.wcp.terminate"]]}})