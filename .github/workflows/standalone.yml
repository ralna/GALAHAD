name: standalone
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: GALAHAD/${{ matrix.os }}/${{ matrix.compiler }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            compiler: gnu
            cc_cmd: gcc
            fc_cmd: gfortran
            cxx_cmd: g++
          - os: ubuntu-latest
            compiler: gnu
            cc_cmd: gcc
            fc_cmd: gfortran
            cxx_cmd: g++
          - os: macos-latest
            compiler: gnu
            cc_cmd: gcc
            fc_cmd: gfortran
            cxx_cmd: g++
          - os: windows-latest
            compiler: intel
            hpckit: https://registrationcenter-download.intel.com/akdlm/irc_nas/19085/w_HPCKit_p_2023.0.0.25931_offline.ex
            # hpckit: 'https://registrationcenter-download.intel.com/akdlm/irc_nas/xxx/w_HPCKit_p_2022.3.1.19755_offline.exe'
            script: 'install_windows.bat'
            cc_cmd: icc
            fc_cmd: ifort
            cxx_cmd: icpc
          - os: ubuntu-latest
            compiler: intel
            hpckit: 'https://registrationcenter-download.intel.com/akdlm/irc_nas/18975/l_HPCKit_p_2022.3.1.16997_offline.sh'
            script: 'install_linux.sh'
            cc_cmd: icc
            fc_cmd: ifort
            cxx_cmd: icpc
          - os: macos-latest
            compiler: intel
            hpckit: 'https://registrationcenter-download.intel.com/akdlm/irc_nas/18977/m_HPCKit_p_2022.3.1.15344_offline.dmg'
            script: 'install_macos.sh'
            cc_cmd: icc
            fc_cmd: ifort
            cxx_cmd: icpc
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out GALAHAD
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install Meson and Ninja
        run: pip install meson ninja
      - name: Install GNU C and Fortran compilers
        uses: modflowpy/install-gfortran-action@v1
      - name: Install Intel OpenAPI C and Fortran compilers
        if: matrix.compiler == 'intel'
        run: |
          .github/scripts/${{ matrix.script }} "${{ matrix.hpckit }}" all
      - name: Setup GALAHAD build
        shell: bash
        run: |
          [[ "${{ matrix.compiler }}" == "intel" ]] && source /opt/intel/oneapi/setvars.sh
          meson setup builddir -Dciface=true
        env:
          CC: ${{ matrix.cc_cmd }}
          FC: ${{ matrix.fc_cmd }}
          CXX: ${{ matrix.cxx_cmd }}
      - name: Build GALAHAD
        shell: bash
        run: |
          [[ "${{ matrix.compiler }}" == "intel" ]] && source /opt/intel/oneapi/setvars.sh
          meson compile -C builddir
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ${{ matrix.os }}_meson_log
          path: builddir/meson-logs/testlog.txt
      - name: Test GALAHAD
        shell: bash
        run: |
          [[ "${{ matrix.compiler }}" == "intel" ]] && source /opt/intel/oneapi/setvars.sh
          meson test -C builddir
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ${{ matrix.os }}_meson_log
          path: builddir/meson-logs/testlog.txt
