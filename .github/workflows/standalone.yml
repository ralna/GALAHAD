name: standalone
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: GALAHAD/${{ matrix.os }}/${{ matrix.compiler }}/${{ matrix.compiler_version }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        compiler_version: [10, 11, 12]
        include:
          - compiler: gnu
            cc_cmd: gcc
            fc_cmd: gfortran
            cxx_cmd: g++
          - os: ubuntu-latest
            compiler: intel
            compiler_version: 2021.9
            cc_cmd: icc
            fc_cmd: ifort
            cxx_cmd: icpc
          - os: macos-latest
            compiler: intel
            compiler_version: 2021.9
            cc_cmd: icc
            fc_cmd: ifort
            cxx_cmd: icpc
          - os: ubuntu-latest
            compiler: intel-llvm
            compiler_version: 2023.1
            cc_cmd: icx
            fc_cmd: ifort
            cxx_cmd: icpx
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out GALAHAD
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Meson and Ninja
        run: pip install meson ninja

      - name: Set environment variables
        shell: bash
        run: |
          echo "GALAHAD=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Install GNU C and Fortran compilers
        if: matrix.compiler == 'gnu'
        uses: awvwgk/setup-fortran@main
        with:
          compiler: gcc
          version: ${{ matrix.compiler_version }}

      - name: Install classic Intel C and C++ compilers
        if: matrix.compiler == 'intel'
        uses: awvwgk/setup-fortran@main
        with:
          compiler: intel-classic
          version: ${{ matrix.compiler_version }}

      - name: Install nextgen Intel C and C++ compilers
        if: matrix.compiler == 'intel-llvm'
        uses: awvwgk/setup-fortran@main
        with:
          compiler: intel
          version: ${{ matrix.compiler_version }}

      - name: Setup GALAHAD
        shell: bash
        run: |
          meson setup builddir --prefix=$GITHUB_WORKSPACE/galahad -Dlibblas= -Dliblapack=
        env:
          CC: ${{ matrix.cc_cmd }}
          FC: ${{ matrix.fc_cmd }}
          CXX: ${{ matrix.cxx_cmd }}

      # Uncomment this section to obtain ssh access to VM
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      #

      - name: Build GALAHAD
        shell: bash
        run: |
          meson compile -C builddir
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ${{ matrix.os }}_meson_log
          path: builddir/meson-logs/testlog.txt

      - name: Install GALAHAD
        shell: bash
        run: |
          meson install -C builddir
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ${{ matrix.os }}_meson_log
          path: builddir/meson-logs/testlog.txt

      - name: Test GALAHAD
        shell: bash
        run: |
          meson test -C builddir
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ${{ matrix.os }}_meson_log
          path: builddir/meson-logs/testlog.txt
