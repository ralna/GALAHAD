name: standalone
on:
  push:
    branches:
      - master
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: GALAHAD ${{ matrix.os }} ${{ matrix.compiler }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            compiler: gnu
            input: 'y1\nnnnyn4\n1\nn2\nn4\nnyby'
          - os: macos-latest
            compiler: gnu
            input: 'y1\nnnnyn6\nn1\nn3\nnyby'
          - os: ubuntu-latest
            compiler: intel
            input: 'y1\nnnnyn4\n1\nn3\nn5\nnyby'
            hpckit: 'https://registrationcenter-download.intel.com/akdlm/irc_nas/18975/l_HPCKit_p_2022.3.1.16997_offline.sh'
            script: 'install_linux.sh'
          - os: macos-latest
            compiler: intel
            input: 'y1\nnnnyn6\nn2\nn4\nnyby'
            hpckit: 'https://registrationcenter-download.intel.com/akdlm/irc_nas/18977/m_HPCKit_p_2022.3.1.15344_offline.dmg'
            script: 'install_macos.sh'
    runs-on: ${{ matrix.os }}
    env:
      ARCHDEFS: ${{ github.workspace }}/ARCHDefs
      GALAHAD: ${{ github.workspace }}
    steps:
      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@master
      - name: Check out GALAHAD
        uses: actions/checkout@v3
      - name: Download ARCHDefs
        id: download-archdefs
        uses: robinraju/release-downloader@v1.5
        with:
          repository: "ralna/ARCHDefs"
          latest: true
          tarBall: true
          out-file-path: ""
      - name: Unpack ARCHDefs
        run: |
          tar zxf ARCHDefs-${{ steps.download-archdefs.outputs.tag_name }}.tar.gz
          mv ralna-ARCHDefs-* ARCHDefs
      - name: Install GNU C and Fortran compilers
        if: matrix.compiler == 'gnu'
        run: |
          brew update
          eval $(brew shellenv)
          brew install gcc
      - name: Install Intel OneAPI C and Fortran compilers
        if: matrix.compiler == 'intel'
        run: |
          ci-scripts/${{ matrix.script }} "${{ matrix.hpckit }}" all
      - name: Install hwloc
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]
          then
            # TODO: make brew work on linux
            sudo apt install -y libhwloc-dev
          else
            brew install hwloc
            export C_INCLUDE_PATH=$(brew --prefix)/include
            export CPLUS_INCLUDE_PATH=$(brew --prefix)/include
          fi
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      - name: Build GALAHAD
        run: |
          [[ "${{ matrix.compiler }}" == "intel" ]] && source /opt/intel/oneapi/setvars.sh
          if [[ "${{ matrix.os }}" == "macos-latest" ]]
          then
            export HWLOC_CFLAGS=-I$(brew --prefix hwloc)/include
            export HWLOC_LIBS="-L$(brew --prefix hwloc)/lib -lhwloc"
          fi
          cd $GALAHAD
          printf "${{ matrix.input }}" > install_config
          $ARCHDEFS/bin/install_optrove < install_config
      - name: Test C interfaces
        run: |
          [[ "${{ matrix.compiler }}" == "intel" ]] && source /opt/intel/oneapi/setvars.sh
          cd $GALAHAD/src
          arch=$(ls $GALAHAD/makefiles | head -1)
          make -s -f $GALAHAD/makefiles/$arch test_all_ciface
      - name: Test GALAHAD in single precision
        run: |
          [[ "${{ matrix.compiler }}" == "intel" ]] && source /opt/intel/oneapi/setvars.sh
          cd $GALAHAD/src
          arch=$(ls $GALAHAD/makefiles | head -1)
          make -s -f $GALAHAD/makefiles/$arch test PRECIS=single
      - name: Test GALAHAD in double precision
        run: |
          [[ "${{ matrix.compiler }}" == "intel" ]] && source /opt/intel/oneapi/setvars.sh
          cd $GALAHAD/src
          arch=$(ls $GALAHAD/makefiles | head -1)
          make -s -f $GALAHAD/makefiles/$arch test PRECIS=double

