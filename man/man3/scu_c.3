.TH "galahad_scu.h" 3 "Wed May 3 2023" "C interfaces to GALAHAD SCU" \" -*- nroff -*-
.ad l
.nh
.SH NAME
galahad_scu.h
.SH SYNOPSIS
.br
.PP
\fC#include <stdbool\&.h>\fP
.br
\fC#include <stdint\&.h>\fP
.br
\fC#include 'galahad_precision\&.h'\fP
.br
\fC#include 'galahad_cfunctions\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBscu_control_type\fP"
.br
.ti -1c
.RI "struct \fBscu_inform_type\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Introduction"
.PP
.SS "Purpose"
Compute the the \fBsolution to an extended system of n + m sparse real linear equations in n + m unknowns,\fP \[\mbox{(1)}\;\; \mat{cc}{ A & B \\ C & D } \vect{x_1 \\ x_2} = \vect{b_1 \\ b_2}\]  
   \n
     (1)  ( A  B ) ( x_1 ) = ( b_1 )
          ( C  D ) ( x_2 )   ( b_2 )
   \n
   in the case where the n by n matrix A is nonsingular and solutions to the systems \[A x = b \;\mbox{and}\; A^T y = c\]  
   \n
     A x  =  b  and  A^T y  =  c
   \n
   may be obtained from an external source, such as an existing factorization\&. The subroutine uses reverse communication to obtain the solution to such smaller systems\&. The method makes use of the Schur complement matrix \[S = D - C A^{-1} B.\]  
   \n
     S = D - C A^{-1} B.\f]
   \n
   The Schur complement is stored and factorized as a dense matrix and the subroutine is thus appropriate only if there is sufficient storage for this matrix\&. Special advantage is taken of symmetry and definiteness in the coefficient matrices\&. Provision is made for introducing additional rows and columns to, and removing existing rows and columns from, the extended matrix\&.
.PP
Currently, only the control and inform parameters are exposed; these are provided and used by other GALAHAD packages with C interfaces\&.
.SS "Authors"
N\&. I\&. M\&. Gould, STFC-Rutherford Appleton Laboratory, England\&.
.PP
C interface, additionally J\&. Fowkes, STFC-Rutherford Appleton Laboratory\&.
.PP
Julia interface, additionally A\&. Montoison and D\&. Orban, Polytechnique Montréal\&.
.SS "Originally released"
March 2005, C interface January 2022\&.
.SS "Method"
The subroutine galahad_factorize forms the Schur complement S = D - C A^{-1} B of A in the extended matrix by repeated reverse communication to obtain the columns of A^{-1} B\&. The Schur complement or its negative is then factorized into its QR or, if possible, Cholesky factors\&.
.PP
The subroutine galahad_solve solves the extended system using the following well-known scheme:
.IP "1." 4
Compute the solution to A u = b_1;
.IP "2." 4
Compute x_2 from S x_2 = b_2 - C u;
.IP "3." 4
Compute the solution to A v = B x_2; and
.IP "4." 4
Compute x_1 = u - v\&.
.PP
.PP
The subroutines galahad_append and galahad_delete compute the factorization of the Schur complement after a row and column have been appended to, and removed from, the extended matrix, respectively\&. The existing factorization is updated to obtain the new one; this is normally more efficient than forming the factorization from scratch\&.
.SS "Call order"
To solve a given problem, functions from the scu package must be called in the following order:
.PP
.IP "\(bu" 2
\fBscu_initialize\fP - provide default control parameters and set up initial data structures
.IP "\(bu" 2
\fBscu_read_specfile\fP (optional) - override control values by reading replacement values from a file
.IP "\(bu" 2
\fBscu_form_and_factorize\fP - form and factorize the Schur-complement matrix S
.IP "\(bu" 2
\fBscu_solve_system\fP - solve the block system (1)
.IP "\(bu" 2
\fBscu_add_rows_and_cols\fP (optional) - update the factors of the Schur-complement matrix when rows and columns are added to (1)\&.
.IP "\(bu" 2
\fBscu_delete_rows_and_cols\fP (optional) - update the factors of the Schur-complement matrix when rows and columns are removed from (1)\&.
.IP "\(bu" 2
\fBscu_information\fP (optional) - recover information about the solution and solution process
.IP "\(bu" 2
\fBscu_terminate\fP - deallocate data structures
.PP
.PP
   
  See the examples section for illustrations of use.
   
.SH "Data Structure Documentation"
.PP 
.SH "struct scu_control_type"
.PP 
control derived type as a C struct 
.PP
\fBData Fields:\fP
.RS 4
bool \fIf_indexing\fP use C or Fortran sparse matrix indexing 
.br
.PP
.RE
.PP
.SH "struct scu_inform_type"
.PP 
inform derived type as a C struct 
.PP
\fBData Fields:\fP
.RS 4
int \fIstatus\fP return status\&. A non-zero value indicates an error or a request for further information\&. See SCU_solve for details\&. 
.br
.PP
int \fIalloc_status\fP the return status from the last attempted internal workspace array allocation or deallocation\&. A non-zero value indicates that the allocation or deallocation was unsuccessful, and corresponds to the fortran STAT= value on the user’s system\&. 
.br
.PP
int \fIinertia[3]\fP the inertia of S when the extended matrix is symmetric\&. Specifically, inertia(i), i=0,1,2 give the number of positive, negative and zero eigenvalues of S respectively\&. 
.br
.PP
.RE
.PP
.SH "Author"
.PP 
Generated automatically by Doxygen for C interfaces to GALAHAD SCU from the source code\&.
