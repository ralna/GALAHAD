.TH "galahad_hash.h" 3 "Wed May 3 2023" "C interfaces to GALAHAD HASH" \" -*- nroff -*-
.ad l
.nh
.SH NAME
galahad_hash.h
.SH SYNOPSIS
.br
.PP
\fC#include <stdbool\&.h>\fP
.br
\fC#include <stdint\&.h>\fP
.br
\fC#include 'galahad_precision\&.h'\fP
.br
\fC#include 'galahad_cfunctions\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBhash_control_type\fP"
.br
.ti -1c
.RI "struct \fBhash_inform_type\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBhash_initialize\fP (void **data, struct \fBhash_control_type\fP *control, int *status)"
.br
.ti -1c
.RI "void \fBhash_information\fP (void **data, struct \fBhash_inform_type\fP *inform, int *status)"
.br
.ti -1c
.RI "void \fBhash_terminate\fP (void **data, struct \fBhash_control_type\fP *control, struct \fBhash_inform_type\fP *inform)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Introduction"
.PP
.SS "Purpose"
Set up, insert into, remove from and search a chained scatter table (Williams, CACM 2, 21-24, 1959)\&.
.PP
Currently, only the control and inform parameters are exposed; these are provided and used by other GALAHAD packages with C interfaces\&.
.SS "Authors"
N\&. I\&. M\&. Gould, STFC-Rutherford Appleton Laboratory, England\&.
.PP
C interface, additionally J\&. Fowkes, STFC-Rutherford Appleton Laboratory\&.
.PP
Julia interface, additionally A\&. Montoison and D\&. Orban, Polytechnique Montr√©al\&.
.SS "Originally released"
December 1990, C interface January 2022\&. 
.SH "Data Structure Documentation"
.PP 
.SH "struct hash_control_type"
.PP 
\fBData Fields:\fP
.RS 4
int \fIerror\fP error and warning diagnostics occur on stream error 
.br
.PP
int \fIout\fP general output occurs on stream out 
.br
.PP
int \fIprint_level\fP the level of output required\&. Possible values are: 
.PD 0

.IP "\(bu" 2
<= 0 no output, 
.IP "\(bu" 2
>= 1 debugging 
.PP

.br
.PP
bool \fIspace_critical\fP if space_critical true, every effort will be made to use as little space as possible\&. This may result in longer computation time 
.br
.PP
bool \fIdeallocate_error_fatal\fP if deallocate_error_fatal is true, any array/pointer deallocation error will terminate execution\&. Otherwise, computation will continue 
.br
.PP
char \fIprefix[31]\fP all output lines will be prefixed by prefix(2:LEN(TRIM(prefix))-1) where prefix contains the required string enclosed in quotes, e\&.g\&. 'string' or 'string' 
.br
.PP
.RE
.PP
.SH "struct hash_inform_type"
.PP 
\fBData Fields:\fP
.RS 4
int \fIstatus\fP return status\&. Possible values are: 
.PD 0

.IP "\(bu" 2
0 The insertion or deletion was succesful\&. 
.IP "\(bu" 2
-1\&. An allocation error occurred\&. A message indicating the offending array is written on unit control\&.error, and the returned allocation status and a string containing the name of the offending array are held in inform\&.alloc_status and inform\&.bad_alloc respectively\&. 
.IP "\(bu" 2
-2\&. A deallocation error occurred\&. A message indicating the offending array is written on unit control\&.error and the returned allocation status and a string containing the name of the offending array are held in inform\&.alloc_status and inform\&.bad_alloc respectively\&. 
.IP "\(bu" 2
-99\&. The current dictionary is full and should be rebuilt with more space\&. 
.PP

.br
.PP
int \fIalloc_status\fP the status of the last attempted allocation/deallocation\&. 
.br
.PP
char \fIbad_alloc[81]\fP the name of the array for which an allocation/deallocation error occurred\&. 
.br
.PP
.RE
.PP
.SH "Function Documentation"
.PP 
.SS "void hash_initialize (void ** data, struct \fBhash_control_type\fP * control, int * status)"
Set default control values and initialize private data
.PP
\fBParameters\fP
.RS 4
\fIdata\fP holds private internal data
.br
\fIcontrol\fP is a struct containing control information (see \fBhash_control_type\fP)
.br
\fIstatus\fP is a scalar variable of type int, that gives the exit status from the package\&. Possible values are (currently): 
.PD 0

.IP "\(bu" 2
0\&. The initialization was succesful\&. 
.PP
.RE
.PP

.SS "void hash_information (void ** data, struct \fBhash_inform_type\fP * inform, int * status)"
Provides output information
.PP
\fBParameters\fP
.RS 4
\fIdata\fP holds private internal data
.br
\fIinform\fP is a struct containing output information (see \fBhash_inform_type\fP)
.br
\fIstatus\fP is a scalar variable of type int, that gives the exit status from the package\&. Possible values are (currently): 
.PD 0

.IP "\(bu" 2
0\&. The values were recorded succesfully 
.PP
.RE
.PP

.SS "void hash_terminate (void ** data, struct \fBhash_control_type\fP * control, struct \fBhash_inform_type\fP * inform)"
Deallocate all internal private storage
.PP
\fBParameters\fP
.RS 4
\fIdata\fP holds private internal data
.br
\fIcontrol\fP is a struct containing control information (see \fBhash_control_type\fP)
.br
\fIinform\fP is a struct containing output information (see \fBhash_inform_type\fP) 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for C interfaces to GALAHAD HASH from the source code\&.
