.TH "galahad_sha.h" 3 "Sun Apr 16 2023" "C interfaces to GALAHAD SHA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
galahad_sha.h
.SH SYNOPSIS
.br
.PP
\fC#include <stdbool\&.h>\fP
.br
\fC#include <stdint\&.h>\fP
.br
\fC#include 'galahad_precision\&.h'\fP
.br
\fC#include 'galahad_cfunctions\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBsha_control_type\fP"
.br
.ti -1c
.RI "struct \fBsha_inform_type\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Introduction"
.PP
.SS "Purpose"
Find an approximation to a sparse Hessian using componentwise secant approximation\&.
.PP
Currently, only the control and inform parameters are exposed; these are provided and used by other GALAHAD packages with C interfaces\&.
.SS "Authors"
N\&. I\&. M\&. Gould, STFC-Rutherford Appleton Laboratory, England\&.
.PP
C interface, additionally J\&. Fowkes, STFC-Rutherford Appleton Laboratory\&.
.PP
Julia interface, additionally A\&. Montoison and D\&. Orban, Polytechnique Montr√©al\&.
.SS "Originally released"
April 2013, C interface January 2022\&. 
.SH "Data Structure Documentation"
.PP 
.SH "struct sha_control_type"
.PP 
control derived type as a C struct 
.PP
\fBData Fields:\fP
.RS 4
bool \fIf_indexing\fP use C or Fortran sparse matrix indexing 
.br
.PP
int \fIerror\fP error and warning diagnostics occur on stream error 
.br
.PP
int \fIout\fP general output occurs on stream out 
.br
.PP
int \fIprint_level\fP the level of output required\&. <= 0 gives no output, = 1 gives a one-line summary for every iteration, = 2 gives a summary of the inner iteration for each iteration, >= 3 gives increasingly verbose (debugging) output 
.br
.PP
int \fIapproximation_algorithm\fP which approximation algorithm should be used? 
.PD 0

.IP "\(bu" 2
0 : unsymmetric (alg 2\&.1 in paper) 
.IP "\(bu" 2
1 : symmetric (alg 2\&.2 in paper) 
.IP "\(bu" 2
2 : composite (alg 2\&.3 in paper) 
.IP "\(bu" 2
3 : composite 2 (alg 2\&.2/3 in paper) 
.PP

.br
.PP
int \fIdense_linear_solver\fP which dense linear equation solver should be used? 
.PD 0

.IP "\(bu" 2
1 : Gaussian elimination 
.IP "\(bu" 2
2 : QR factorization 
.IP "\(bu" 2
3 : singular-value decomposition 
.IP "\(bu" 2
4 : singular-value decomposition with divide-and-conquer 
.PP

.br
.PP
int \fImax_sparse_degree\fP the maximum sparse degree if the combined version is used 
.br
.PP
int \fIextra_differences\fP if available use an addition extra_differences differences 
.br
.PP
bool \fIspace_critical\fP if space is critical, ensure allocated arrays are no bigger than needed 
.br
.PP
bool \fIdeallocate_error_fatal\fP exit if any deallocation fails 
.br
.PP
char \fIprefix[31]\fP all output lines will be prefixed by \&.prefix(2:LEN(TRIM(\&.prefix))-1) where \&.prefix contains the required string enclosed in quotes, e\&.g\&. 'string' or 'string' 
.br
.PP
.RE
.PP
.SH "struct sha_inform_type"
.PP 
inform derived type as a C struct 
.PP
\fBData Fields:\fP
.RS 4
int \fIstatus\fP return status\&. See SHA_solve for details 
.br
.PP
int \fIalloc_status\fP the status of the last attempted allocation/deallocation 
.br
.PP
int \fImax_degree\fP the maximum degree in the adgacency graph 
.br
.PP
int \fIdifferences_needed\fP the number of differences that will be needed 
.br
.PP
int \fImax_reduced_degree\fP the maximum reduced degree in the adgacency graph 
.br
.PP
char \fIbad_alloc[81]\fP the name of the array for which an allocation/deallocation error ocurred 
.br
.PP
.RE
.PP
.SH "Author"
.PP 
Generated automatically by Doxygen for C interfaces to GALAHAD SHA from the source code\&.
