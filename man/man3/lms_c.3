.TH "galahad_lms.h" 3 "Mon May 1 2023" "C interfaces to GALAHAD LMS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
galahad_lms.h
.SH SYNOPSIS
.br
.PP
\fC#include <stdbool\&.h>\fP
.br
\fC#include <stdint\&.h>\fP
.br
\fC#include 'galahad_precision\&.h'\fP
.br
\fC#include 'galahad_cfunctions\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBlms_control_type\fP"
.br
.ti -1c
.RI "struct \fBlms_time_type\fP"
.br
.ti -1c
.RI "struct \fBlms_inform_type\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Introduction"
.PP
.SS "Purpose"
Given a sequence of vectors    
{s_k} and {y_k} and scalars {delta_k},
 \fBobtain the product of a limited-memory secant approximation H_k (or its inverse) with a given vector\fP, using one of a variety of well-established formulae\&.
.PP
Currently, only the control and inform parameters are exposed; these are provided and used by other GALAHAD packages with C interfaces\&.
.SS "Authors"
N\&. I\&. M\&. Gould, STFC-Rutherford Appleton Laboratory, England\&.
.PP
C interface, additionally J\&. Fowkes, STFC-Rutherford Appleton Laboratory\&.
.PP
Julia interface, additionally A\&. Montoison and D\&. Orban, Polytechnique MontrÃ©al\&.
.SS "Originally released"
July 2014, C interface January 2022\&.
.SS "Method"
Given a sequence of vectors    
{s_k} and {y_k} and scalars {delta_k},
 a limited-memory secant approximation H_k is chosen so that H_{\\max(k-m,0)} = \\delta_k I, H_{k-j} s_{k-j} = y_{k-j} and || H_{k-j+1} - H_{k-j}|| is ``small'' for j = \\min(k-1,m-1), \&.\&.\&., 0\&. Different ways of quantifying ``small'' distinguish different methods, but the crucial observation is that it is possible to construct H_k quickly from {s_k}, {y_k} and \\delta_k, and to apply it and its inverse to a given vector v\&. It is also possible to apply similar formulae to the ``shifted'' matrix H_k + lambda_k I that occurs in trust-region methods\&.
.SS "Reference"
The basic methods are those given by
.PP
R\&. H\&. Byrd, J\&. Nocedal and R\&. B\&. Schnabel (1994) Representations of quasi-Newton matrices and their use in limited memory methods\&. Mathenatical Programming, \fB63(2)\fP 129-156,
.PP
with obvious extensions\&. 
.SH "Data Structure Documentation"
.PP 
.SH "struct lms_control_type"
.PP 
control derived type as a C struct 
.PP
\fBData Fields:\fP
.RS 4
bool \fIf_indexing\fP use C or Fortran sparse matrix indexing 
.br
.PP
int \fIerror\fP unit for error messages 
.br
.PP
int \fIout\fP unit for monitor output 
.br
.PP
int \fIprint_level\fP controls level of diagnostic output 
.br
.PP
int \fImemory_length\fP limited memory length 
.br
.PP
int \fImethod\fP limited-memory formula required (others may be added in due course): 
.PD 0

.IP "\(bu" 2
1 BFGS (default)\&. 
.IP "\(bu" 2
2 Symmetric Rank-One (SR1)\&. 
.IP "\(bu" 2
3 The inverse of the BFGS formula\&. 
.IP "\(bu" 2
4 The inverse of the shifted BFGS formula\&. This should be used instead of \&.method = 3 whenever a shift is planned\&. 
.PP

.br
.PP
bool \fIany_method\fP allow space to permit different methods if required (less efficient) 
.br
.PP
bool \fIspace_critical\fP if space is critical, ensure allocated arrays are no bigger than needed 
.br
.PP
bool \fIdeallocate_error_fatal\fP exit if any deallocation fails 
.br
.PP
char \fIprefix[31]\fP all output lines will be prefixed by prefix(2:LEN(TRIM(\&.prefix))-1) where prefix contains the required string enclosed in quotes, e\&.g\&. 'string' or 'string' 
.br
.PP
.RE
.PP
.SH "struct lms_time_type"
.PP 
time derived type as a C struct 
.PP
\fBData Fields:\fP
.RS 4
real_wp_ \fItotal\fP total cpu time spent in the package 
.br
.PP
real_wp_ \fIsetup\fP cpu time spent setting up space for the secant approximation 
.br
.PP
real_wp_ \fIform\fP cpu time spent updating the secant approximation 
.br
.PP
real_wp_ \fIapply\fP cpu time spent applying the secant approximation 
.br
.PP
real_wp_ \fIclock_total\fP total clock time spent in the package 
.br
.PP
real_wp_ \fIclock_setup\fP clock time spent setting up space for the secant approximation 
.br
.PP
real_wp_ \fIclock_form\fP clock time spent updating the secant approximation 
.br
.PP
real_wp_ \fIclock_apply\fP clock time spent applying the secant approximation 
.br
.PP
.RE
.PP
.SH "struct lms_inform_type"
.PP 
inform derived type as a C struct 
.PP
\fBData Fields:\fP
.RS 4
int \fIstatus\fP the return status\&. Possible values are: 
.PD 0

.IP "\(bu" 2
0 the update was successful\&. 
.IP "\(bu" 2
-1\&. An allocation error occurred\&. A message indicating the offending array is written on unit control\&.error, and the returned allocation status and a string containing the name of the offending array are held in inform\&.alloc_status and inform\&.bad_alloc respectively\&. 
.IP "\(bu" 2
-2\&. A deallocation error occurred\&. A message indicating the offending array is written on unit control\&.error and the returned allocation status and a string containing the name of the offending array are held in inform\&.alloc_status and inform\&.bad_alloc respectively\&. 
.IP "\(bu" 2
-3\&. One of the restrictions n > 0, delta > 0, lambda > 0 or s^T y > 0 has been violated and the update has been skipped\&. 
.IP "\(bu" 2
-10\&. The matrix cannot be built from the current vectors {s_k} and {y_k} and values delta_k and lambda_k and the update has been skipped\&. 
.IP "\(bu" 2
-31\&. A call to the function lhs_apply has been made without a prior call to lhs_form_shift or lhs_form with lambda specified when control\&.method = 4, or lhs_form_shift has been called when control\&.method = 3, or lhs_change_method has been called after control\&.any_method = false was specified when calling lhs_setup\&. 
.PP

.br
.PP
int \fIalloc_status\fP the status of the last attempted allocation/deallocation 
.br
.PP
int \fIlength\fP the number of pairs (s,y) currently used to represent the limited-memory matrix\&. 
.br
.PP
bool \fIupdates_skipped\fP have (s,y) pairs been skipped when forming the limited-memory matrix? 
.br
.PP
char \fIbad_alloc[81]\fP the name of the array for which an allocation/deallocation error occurred\&. 
.br
.PP
struct \fBlms_time_type\fP \fItime\fP timings (see above) 
.br
.PP
.RE
.PP
.SH "Author"
.PP 
Generated automatically by Doxygen for C interfaces to GALAHAD LMS from the source code\&.
