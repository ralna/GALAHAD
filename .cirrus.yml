task:
  matrix:
    - name: Meson / freebsd/gcc-12/Int32
      freebsd_instance:
        image: freebsd-13-3-release-amd64
      env:
        - JULIA_VERSION: 1
        - INT64: "false"
        - CUTEST_SINGLE: "cutest_single"
        - CUTEST_DOUBLE: "cutest_double"
    - name: Meson / freebsd/gcc-12/Int64
      freebsd_instance:
        image: freebsd-13-3-release-amd64
      env:
        - JULIA_VERSION: 1
        - INT64: "true"
        - CUTEST_SINGLE: "cutest_single_64"
        - CUTEST_DOUBLE: "cutest_double_64"
    - name: Meson / macos-silicon/gcc-14/Int32
      macos_instance:
        image: ghcr.io/cirruslabs/macos-ventura-base:latest
      env:
        - JULIA_VERSION: 1
        - INT64: "false"
        - CUTEST_SINGLE: "cutest_single"
        - CUTEST_DOUBLE: "cutest_double"
    - name: Meson / macos-silicon/gcc-14/Int64
      macos_instance:
        image: ghcr.io/cirruslabs/macos-ventura-base:latest
      env:
        - JULIA_VERSION: 1
        - INT64: "true"
        - CUTEST_SINGLE: "cutest_single_64"
        - CUTEST_DOUBLE: "cutest_double_64"
  dependencies_script: |
    echo $(uname)
    if [ "$(uname)" = "FreeBSD" ]; then
      pkg install -y py39-pip meson cmake bash gcc12 openblas wget
      pip install numpy
      echo "JULIA_GALAHAD_LIBRARY_PATH=/usr/local/lib" >> $CIRRUS_ENV
      echo "CUTEST_SINGLE_PATH=/usr/local/lib" >> $CIRRUS_ENV
      echo "CUTEST_DOUBLE_PATH=/usr/local/lib" >> $CIRRUS_ENV
      echo "CUTEST_SINGLE_MODULES=/usr/local/modules" >> $CIRRUS_ENV
      echo "CUTEST_DOUBLE_MODULES=/usr/local/modules" >> $CIRRUS_ENV
      echo "FC=gfortran12" >> $CIRRUS_ENV
      echo "CC=gcc12" >> $CIRRUS_ENV
      echo "CXX=g++12" >> $CIRRUS_ENV
    else
      brew install python meson gcc@14 openblas numpy wget
      echo "JULIA_GALAHAD_LIBRARY_PATH=/opt/homebrew/lib" >> $CIRRUS_ENV
      echo "CUTEST_SINGLE_PATH=/opt/homebrew/lib" >> $CIRRUS_ENV
      echo "CUTEST_DOUBLE_PATH=/opt/homebrew/lib" >> $CIRRUS_ENV
      echo "CUTEST_SINGLE_MODULES=/opt/homebrew/modules" >> $CIRRUS_ENV
      echo "CUTEST_DOUBLE_MODULES=/opt/homebrew/modules" >> $CIRRUS_ENV
      echo "FC=gfortran-14" >> $CIRRUS_ENV
      echo "CC=gcc-14" >> $CIRRUS_ENV
      echo "CXX=g++-14" >> $CIRRUS_ENV
    fi
    echo "JULIA_PROJECT_SUBDIR=GALAHAD.jl" >> $CIRRUS_ENV
    echo "GALAHAD=$CIRRUS_WORKING_DIR" >> $CIRRUS_ENV
    echo "CUTEST=$CIRRUS_WORKING_DIR/../CUTEst" >> $CIRRUS_ENV
    echo "OMP_CANCELLATION=TRUE" >> $CIRRUS_ENV
    echo "OMP_PROC_BIND=TRUE" >> $CIRRUS_ENV
  cutest_script: |
    VERSION_CUTEST="2.1.1"
    cd ..
    wget https://github.com/ralna/CUTEst/archive/refs/tags/v${VERSION_CUTEST}.tar.gz
    tar -xzvf v${VERSION_CUTEST}.tar.gz
    cd CUTEst-${VERSION_CUTEST}
    meson setup builddir --buildtype=debug \
                         -Ddefault_library=shared \
                         -Dquadruple=true \
                         -Dcutest_int64=${INT64}
    meson compile -C builddir
    meson install -C builddir

  configure_script: |
    meson setup builddir --buildtype=debug \
                         -Dlibblas= \
                         -Dliblapack= \
                         -Dexamples=true \
                         -Dtests=true \
                         -Dpythoniface=true \
                         -Dgalahad_int64=${INT64} \
                         -Dlibcutest_single=${CUTEST_SINGLE} \
                         -Dlibcutest_double=${CUTEST_DOUBLE} \
                         -Dlibcutest_single_path=${CUTEST_SINGLE_PATH} \
                         -Dlibcutest_double_path=${CUTEST_DOUBLE_PATH} \
                         -Dlibcutest_single_modules=${CUTEST_SINGLE_MODULES} \
                         -Dlibcutest_double_modules=${CUTEST_DOUBLE_MODULES}
                         # -Db_sanitize=address,undefined
  build_script: |
    meson compile -C builddir
  install_script: |
    meson install -C builddir
  test_script: |
    meson test -C builddir
  julia_install_script: |
      if [ "$INT64" = "false" ]; then
          URL="https://raw.githubusercontent.com/ararslan/CirrusCI.jl/master/bin/install.sh"
          set -x
          if [ "$(uname -s)" = "Linux" ] && command -v apt; then
              apt update
              apt install -y curl
          fi
          if command -v curl; then
              sh -c "$(curl ${URL})"
          elif command -v wget; then
              sh -c "$(wget ${URL} -q -O-)"
          elif command -v fetch; then
              sh -c "$(fetch ${URL} -o -)"
          fi
      fi
  julia_build_script: |
      if [ "$INT64" = "false" ]; then
          cirrusjl build
      fi
  julia_test_script: |
      if [ "$INT64" = "false" ]; then
          cirrusjl test
      fi
  on_failure:
    log_artifacts:
      path: builddir/meson-logs/*log.txt
